%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: angelHSZnoExp.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Christopher Royall
%%CreationDate: 16/04/2014
%%BoundingBox: 0 0 235 226
%%HiResBoundingBox: 0 0 234.8086 225.8457
%%CropBox: 0 0 234.8086 225.8457
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 124 8%%BeginData: 10414 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD3AFFA8A8FFFFA852FFA8FFA8FD75FFA87D7DF8FF7D7D52A8277D%FD77FF277DFF52A8FF7D52FD77FF5252FFFF27FFA827A8FD76FF7D27FFFF%527DFF277DFF7DFD75FF7D52A87D52A8FF52A87D7DFD80FF7D52A8FD7DFF%527D7DFD7DFF7D27A8FD7DFF7D7DA8FDC7FFA8FD12FFA8FD04FFA8FD0DFF%A8FD11FFA8FD12FFA8FD04FFA8FD11FFA8FD1CFF7D5252FFFF7D277DFD0B%FF7D27A8FFFF52527DFD0BFF5252A8FFFFA827FD0BFFA85252FFFFA8527D%FD0BFF7D277DFFFF52527DFD0BFF7D52FFFFA85227FD1BFF52A87DA8FF52%FF52FD0BFF52FF52FFA8FF7D52FD0AFF7D7DA87DFFFF2752FD0BFF52A87D%7DFF27527DFD0BFF52FF52FFFF52277DFD0BFF7D27FFFFFD047DFD1AFF52%FF52A8FF52FF52A8FD09FFA87DFF52FFFFA852A8FD0AFF7D7DFF52FF5252%27A8FD0AFF52FF52A8FF277D52FD0AFFA87DFF52FFFF527D52FD0CFF7DFF%FF7DA8A87DFD1AFF7D52527DA8525252FD0BFF525252A87D2752A8FD0AFF%A85252A87DA87D27A8FD0AFF7D52527DA8527D27FD0BFF525252A87D5252%52FD0CFF52FF7D7D2752A8FD17FFA87DFF7D27A8FFA8FF7DFD0DFF7DFFFD%05A8FD0BFFA8A8FFA8FFFFA8FD0CFFA8A8FFA8FF7DFD0DFF7DFFA8FFA8A8%FD0FFFA8FFFF52A8FF7D7DFD14FF277DA87D527DFD60FFA8277DA87D527D%FD13FFA87DFFA852A8FF7D7DA8A87DA87DA87DA8A8A87DA8A8A87DA8A8A8%7DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8%7DA87DA8A8A87DA8A8A87DA87DA87DA8A8A87DA8A8A87DA8A8A87DA8A8A8%7DA8A8A87DA8A8A87DA8A8A884AFFFFF7D7DFFA827FD14FF7D7DA8277DFF%A8527DA8A8A87D7DFD05A87D7DFD04A87D7DFD04A87D7DFD05A87DFD05A8%52FD05A87DFD05A87D7DFD04A87D7DFD04A87D7DFD05A87D7DFD04A87D7D%FD05A87DFD05A87DA8A8A8847D35FFFF7D7DA8F8A8FD15FFA8A8527DA8FF%7DFD11FFA8FD25FFA8FD11FFA8FD11FFA859FFFFA8FF7D5252FD1AFFA87D%FD59FFAFA8FF2EFD22FF7DFD57FFA8FFA8FFFF58FD21FFA87DFD56FFA87D%A8AFFFFF34FD22FF7DFD56FFA8A8A8AFFF845EFD21FFA87DFD56FFA8FFFF%AF606034FD22FF52FD59FF848B3558FD21FFA87DFD54FFA8FD04FFAFA859%2DFD22FF7DFD51FFA8FD07FF668B597DFD21FFA87DFD50FFA8A8A8FD05FF%A88B613458FD22FF7DFD50FFA87DA8FD06FF84A93483CBFD1CFFA87D52FF%A87DFD50FFA8FFA8FD05FFAFFF7E3B5FFFA8527DFD19FFA8527D7DFF7DFD%5AFFA93B84FF7D7D52A8FD18FFA8522752FF7DA8FD4DFFA8FD09FFAFFF7E%3452FF7D7D27A8FD19FF52527DFF52FD5AFFA9347DFFA85252A8FD18FFA8%7D52FFA87DFD4BFFA8A8FD0BFFAFFF7E5E7DFFA8527DFD1EFF7DFD5AFF84%83A8FD21FFA87DFD48FFA8FD0FFFAFFF59AD7DFD22FF7DFD59FFA88489A8%A8FD20FFA87DFD46FFA8FD11FFAFA959837DFD22FF7DFD57FFAFFF7E8383%A8FD15FFA8FD0BFFA87DFD45FFA8FD11FFAFAFA3838377FD12FF7D7D5227%7DFD0BFF7DFD57FFAFFF7FAEA8A8FD12FF5252277D52FD0AFFA87DFD42FF%A8A8A8FD0FFFCAFFAFAFA8A983AE7DFD12FF7D27527D52FD0BFF7DFD54FF%AFA8FFAFA9A983AEA8FD13FF7DFFA8FD0BFFA87DFD40FFA8FD12FFA86767%A8FF7EAF5EFF7DFD1EFF7D7DA8FF7DFD53FFAF8B84FFAFA9AE89FFA8FFFF%527DFD0AFF7D7D7DFD04FFA8FD07FF7D2752A8A8A8FD3EFFA8FD15FFCAFF%AFAF7EAE83FF7DFF525252FD09FF5252A827FFA82727277DFD06FF7D277D%A8FF52A8FD3CFF7DFD19FFA9A9AD83A27DFF52527DA8FD09FF7D7D7DFF52%52527D7DFD06FF7D7D527DA87DFD3BFFA87DA87DFD17FFAFA9A98983FF7D%FF52A827A8FD05FFA852FF52FD04FF527D525252FD07FF7D7DFFFF7DFD38%FFA8FFFF7DA8A8FD18FFAF7EFF83AEFFA8FFFF527DFD06FF7D527D7DFD05%FF7DA827A8FD0AFFA87DFD37FFA87DA8A8A87DFD15FF84AFFFFFA87EFF83%A8FF7DFD08FFA8A8FF7DFD05FF7D277DFD0EFF7DFD37FF7DA8A8FD0FFFA8%FFA8FFFFFFA8FF846760FFAFA9A8FF5EFFFFA8FD08FF7D52527DA8FD04FF%F87D27A8FD0CFFA87DFD37FFA87DFD0EFFA8527D7D52527D5252A8AF60A8%FFFF7EFFAE89FFFF7DFD0AFFA87D7D52A8FFFF52FF7D52FD0DFF7DFD37FF%7DA8A8FD0DFF7DA8FF7DA8A8A87D52A8848B84FFAFA9FFAE83FFFFA8A8FD%0EFF7D27F8A827277DA8FD0AFFA87DFD36FFA8FD10FF7D7DA852A87DA852%FFFF84608BAFA97EFF8383FFFF7DFD09FFA8FD05FF52527D527D527D7DFD%0BFF52FD33FF7DA8FD13FF7D7DFFFFFFA8FD04FFAFFFFF7EFFFF89A8FFA8%7DFD0AFFA8FD04FFA8A8FD10FFA8A8FD2EFF7DFFFFFF7DA87DFD1FFFAF7E%CBFF5EFFFFFF7DFD0AFF7D277D27FD06FFA8FD0DFF7DFD2DFFA87DA8FFFF%FFA8FD20FFAF7EFFAE83FFFFFFA8FD0AFFA852A8FD06FF2752527DA8FD09%FFA87DFD2CFFA8A87D7D7DFFFFFF52A8A8A8527DFD1AFF5AA9FFAE5EFFFF%FF7DFD0BFFA8FD07FF7DA8FF5252A8FD09FF7DFD2EFFA87DA87DFF7D7DA8%A852A87DA8FD18FFAF85FFFF8383FFFFFFA8FD13FF522752A8FD06FFA852%52FFA87DFD2DFFA87D7DA8FFFFFF7D7D5252FFFF277DA8FD16FF857EFFFF%8383FFFFFF7DFFA8527DFD09FFA87D52A8FFFFFFA87D7DFD07FF7D527DFF%7DFD2DFF7DA8A8FFFFFF7D7D527D7D7D52A852FD17FF5AFFFFFF5EFD04FF%A8FFA87D52FD09FF7D52FF27FD0EFF27A8A87DA8FD2BFF7DA87DFD05FFA8%FFFFFFA8FF7D7DFD16FF847EFFFFA883FFFFA8A852FFFF7D27FD09FFA87D%7D7DFD0CFFA87D7D7DFF7DFD2BFFA8FD26FF85A9FFFFAE83FFFFFFA87DFF%A8A852A8FD09FF7D7D7DFD05FFA87D7DA8FFFFFFA87D52FFA8A8FD2AFFA8%FD26FFAF5AFFFFFF5EAEFD04FF7DFFA8527DFD09FFA8527D7DFD05FF52A8%7D7DFD08FF7DFD29FFA8FD27FF7EA9FFFFFF5ECBFD04FFA8FD0AFFFD05A8%FD07FFA8527DA8FD07FFA87DFD28FFA8FD23FFA8AFA8FFA87EFFFFFFAE58%FD05FF7DFD09FFA8272752F8277DFD06FFA8A87DFD09FF7DFD4CFF8B678B%FF85A9FFFFFF5FA8FD05FFA8FD09FFA852FFFF527D52FD06FF5252A8A8FD%07FFA87DFD24FFA8FD27FF846784A95AFFFFFFAE5ECBFD05FF7DFD09FFA8%27527D275252FD04FFA8FFA8FD0BFF7DFD4DFFA8FF5AAFFFFFFFAE58FD06%FF7DFD0AFFA85227FFA8FFFFFF7DF852F82752FD09FFA852FD22FFA8FD2B%FF7E7EFD04FF58A8FD06FF52FD0AFF52272752FD04FF52A8FFA87D7DA8FD%09FF7DFD21FFA8FD2CFF7FFD04FFAE5EFD07FFA8FD09FFA827FFFF52A8FF%FFFF7D27A8277D52A8FD08FFA8A8FD20FFA8FD29FF84FFFF7E84FD04FF83%7DFD07FF7DFD09FFA827A8A8F8FD05FF7D277DA8A8FD0AFF7DFD1FFFA8FD%29FF846784A97EFD05FF58FD08FFA8FD0AFF7D5252A8FD04FFA8272727A8%FD0AFFA87DFD1EFFA8FD2AFFAF605A54FD05FF5E83FD08FF7DFD08FFA852%7D527D52FD04FF527DFF7D52FD07FF527DFFFF7DFD4BFF54FD05FFAE5EFD%09FFA8FFFF52A8FD04FFA87D7DA87DA8FD04FF5252FF5252FD06FF7D7D52%7DA8A8FD1BFFA8A8FD2DFF54AFFD05FF5EA8FD04FFA8FD04FF7DFF52A852%A8FD0EFF522752FD07FF7DA8A852FF52A8FD45FFAF8AA954AFFD05FF8358%FF7DFF7D7D527DFFFF7D7DFF52FF7D7DFD0CFFFD0552A8FD06FF7D52527D%A87DA8FD17FFA8A8A8FD2BFF60672F8BFD05FFA89CC5A85252527D7D7DFF%FFFF7DFF527D52FD0DFF7D527D527D7DFD07FF7D7DFFFF7DFD17FFA8FD2E%FFA9308BFD06FF58BFBFFF52A852A87D7DFFFFFFA8FFFF52A8FD1DFFA8A8%FD16FFA8FD21FFFD04A87DFD07FFA8A854AFFD04FFA8C57DA8A8CBFFA8FF%A87D7DA8FFFFFF7DFD22FF7DFD15FFA8FD21FFA8527DFF5252FD06FF6036%5AAFFD04FFAE58BFC5A8FD0CFFA8FD21FFA87DFD14FFA8FD22FFA8F87DFF%5227A8FFFFCF842F3035AFFD04FFA839107D77FD0DFF7DFD22FF7DFD13FF%A8FD23FFA8A8A8527DA87DFFFFFF07025AFD06FFA2583F39AEFD0DFFA8FD%21FFA87DFD12FFA8FD27FFA8FFFFFF7E29535429A9FD05FFA8BFBF33AEFD%0EFF7DFD22FF52FD11FFA8FD2BFFA829025AFD06FFA85E107D77A8FD0EFF%A87DFD21FFA8A8FD0EFFA8FD29FFCFFF53025385595A84FD04FFAE8339FA%395E83FD10FF7DFD22FF7DFD0DFFA8FD28FFA853292F300284FD06FFAE5E%52A8833939FD12FFA8FD21FFA8A8FD0CFFA8FD26FF7E7E7E0102013660FD%05FFA884333F52BF9CFFA8FD13FF7DFD22FF7DFD0BFFA8FD23FFA87EA8FF%01025A3053AFA9FD04FFA8393F1739FA5EC5CBFD15FFA8FD1DFFA85252FF%A87DFD0AFFA8FD19FFCAFFA8A884AE84AFFF7E292901545A5A59FD04FFAE%83A29C7D1016161C5E83A8FD17FF7DFFFFFF7D527DFD18FF7D52A8FF7DFD%09FFA8FD1AFFAF6084608B362F53A90702295484FD05FF7D7D393F9CC5A8%AE335F83FD1AFFA8FFFFFFA87D52FD15FFA87DA8FF27A8FF52A8FD07FFA8%FD1BFF608B292F3630015485847DAFA8A87D7D33393383833FFA7DA2FD1E%FF7D52FF7D7DFFA827FD16FFFD057DFF7DFD22FF840730360201857E5359%A8A2A2583933898964FA64FFFFA8AEAEFD1FFFA87DFFA8A87D7D52A8FD17%FF7D52FFA8A8FD05FFA8A8FD13FFA8A8537E532902294D4E297D52585158%835E52BF9C89FA39A8FFA88383FD25FF7DFFFFFFA8527DFD1CFF7DFD0DFF%CAFFFFFFA8A87E7E777E7E7E2F789C29067D2E2F58C5BF7D89AE643F5EFF%893977CBAE8983FFFFFF7DA8527DA8FF7DA8FD1FFFA8FD21FFA8A8FFA27D%7D7D7E7D847D7D537D5352282E2F53535906060559895E77C57789393F5E%FFA27D1689FF64FA5ECBFF8389FD07FF7D5252527D275227522752A8FD1B%FF7DFD22FF7DAE585F595F5E59535959C5BF590C8389C5BFAEAE58163983%FF393F7DFFFF64FA89FFFF3964A8FFA8AEAEFD0BFF527D52527D2727A827%7D52FD1CFFA8FD21FFA8835F8484AEA8CF9CBFA2FF9CC529027EFF779CA2%FF83FA16FFCB5E39AEFFFF8383A8FFFFFFCBFD10FFA8A8A8FD047DA87DA8%A8A8FD1BFF7DFD22FF67AFFD05FFCB9CCBFFFFA8A97EFFFF8358AEFFFF83%AEFD45FFA8FD22FF6084FD5BFF52FD22FF7DFD11FFA8FD12FFA8FD12FFA8%FD11FFA8FD12FF7DA8FD20FFA8FD067D52FD057D52FD057D5252A8FD047D%52FD057D52A8FD047D52FD047DA852FD047DA852FD057D5252FD057D52FD%0B7D5252A8FD047D52A8FD047D52FD057D52FD22FFA8FFFFFFA8FFA8FFA8%FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFA8%FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8%FFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD20FF7DA8FF%FFA87DA8FD0BFFA87DA8FFFFA87DFD0CFFA87DFD04FFA8FD0CFF7DA8FFFF%FF7DA8FD0BFFA87DA8FFFFFF7DFD0DFFA8FFFFFF7DA8FD1BFF7D7D52FFFF%7D5252FD0BFF52527DFFFF527D52FD0AFFA852527DFFFF7D27FD0BFF7D52%52FFFF7D527DFD0BFF7D527DFFFF52527DFD0BFF5227FFFFA85252A8FD1A%FF52FF7D7DFF52FF52A8FD09FFA852FF27FFFFFF527DFD0AFF7D7DA852FF%A82752A8FD0AFF52A87D7DFF275252FD0BFF52FF52FFFF52F87DFD0AFFA8%A852FFFF7D7DA852FD1AFF52FF52A8FF52A852A8FD09FFA852A852FFFF52%52FD0BFFA87DA87DFF525227A8FD0AFF52FF52A8FF52A852A8FD0AFF52A8%7DFFA852A852FD0CFF52FFFF7DA87DA8FD1AFFA8277DA8A87D527DFD0BFF%7D527DA87D2752A8FD0AFFA85252A87DFFA87DA8FD0AFFA8277DA8A87D52%52FD0BFF7D527DA87D7D52A8FD0CFF52FF7DA85252A8FD20FFA8FD37FFA8%FDFCFFFD72FFA8FFA8FD05FFA8A8A8FFA8FD72FFA8FD0452A8FFFFA85252%52277DA8FD73FF7D52FFA8FFFFA87DFF7D7DFD75FF527DFD04FF7DFFFF7D%7DFD75FF7D52FFFFFFA87DFFFF527DFD75FF5252FFFFFFA87DFFFF5252FD%75FFA8A8FFFFFFA8FFFFFFA8A8FD78FFA827A8FD7DFF7D277DFD7DFF7D27%7DFD7DFFA8A8FD3FFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:CreateDate>2014-04-16T06:31:38+09:00</xmp:CreateDate>
         <xmp:MetadataDate>2014-04-16T06:31:38+09:00</xmp:MetadataDate>
         <xmp:ModifyDate>2014-04-16T06:31:38+09:00</xmp:ModifyDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>248</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA+AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXn/5raxdaBZHVk1O8FxOsenaD5fsPSR7zU53bgCzpIx249KcVDHc0oqkuoaX&#xA;5i+qeQPJfmLU21fWtQ1Aarr10wUI0OlL9baNVRYx6Yuvq8a1G/U9cVUrdvNl/wCf7DytpHme/uot&#xA;BWO787aq4t/SLuOUWnwoIvhaXdm3qiU3LYq9fxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;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&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV//9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>244.500000</stDim:w>
            <stDim:h>230.845703</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>ArialMT</stFnt:fontName>
                  <stFnt:fontFamily>Arial</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.06</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Arial.ttf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:0A80117407206811910699BC6FBE28DE</stRef:instanceID>
            <stRef:documentID>xmp.did:0A80117407206811910699BC6FBE28DE</stRef:documentID>
            <stRef:originalDocumentID>xmp.did:0A80117407206811910699BC6FBE28DE</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:DocumentID>xmp.did:20E2891E0D206811910699BC6FBE28DE</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:20E2891E0D206811910699BC6FBE28DE</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:0A80117407206811910699BC6FBE28DE</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0A80117407206811910699BC6FBE28DE</stEvt:instanceID>
                  <stEvt:when>2014-04-16T06:31:29+09:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:20E2891E0D206811910699BC6FBE28DE</stEvt:instanceID>
                  <stEvt:when>2014-04-16T06:31:38+09:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -225.846 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 225.846 li
234.809 225.846 li
234.809 0 li
cp
clp
[1 0 0 1 0 0 ]ct
25.5146 197.738 mo
25.5146 198.98 25.6602 199.805 25.9507 200.217 cv
26.2412 200.627 26.5996 200.832 27.0259 200.832 cv
27.4521 200.832 27.8105 200.627 28.1011 200.213 cv
28.3916 199.801 28.5366 198.977 28.5366 197.738 cv
28.5366 196.494 28.3916 195.668 28.1011 195.26 cv
27.8105 194.85 27.4487 194.646 27.0156 194.646 cv
26.5894 194.646 26.2485 194.826 25.9941 195.188 cv
25.6748 195.648 25.5146 196.498 25.5146 197.738 cv
25.5146 197.738 li
cp
24.5605 197.738 mo
24.5605 196.846 24.6528 196.127 24.8364 195.582 cv
25.0205 195.037 25.2939 194.617 25.6567 194.32 cv
26.019 194.025 26.4756 193.877 27.0259 193.877 cv
27.4316 193.877 27.7876 193.959 28.0933 194.123 cv
28.3994 194.285 28.6519 194.521 28.8516 194.828 cv
29.0508 195.137 29.2075 195.512 29.3208 195.953 cv
29.4341 196.395 29.4907 196.99 29.4907 197.738 cv
29.4907 198.625 29.3999 199.342 29.2178 199.887 cv
29.0352 200.432 28.7627 200.852 28.4004 201.148 cv
28.0376 201.447 27.5791 201.596 27.0259 201.596 cv
26.2969 201.596 25.7246 201.334 25.3086 200.813 cv
24.8101 200.184 24.5605 199.158 24.5605 197.738 cv
24.5605 197.738 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 cmyk
f
30.9385 201.467 mo
30.9385 200.41 30.9385 201.467 30.9385 200.41 cv
31.9956 200.41 30.9385 200.41 31.9956 200.41 cv
31.9956 201.467 31.9956 200.41 31.9956 201.467 cv
30.9385 201.467 31.9956 201.467 30.9385 201.467 cv
30.9385 201.467 li
cp
f
34.3481 197.738 mo
34.3481 198.98 34.4937 199.805 34.7842 200.217 cv
35.0747 200.627 35.4331 200.832 35.8594 200.832 cv
36.2856 200.832 36.644 200.627 36.9346 200.213 cv
37.2251 199.801 37.3706 198.977 37.3706 197.738 cv
37.3706 196.494 37.2251 195.668 36.9346 195.26 cv
36.644 194.85 36.2822 194.646 35.8491 194.646 cv
35.4229 194.646 35.0825 194.826 34.8281 195.188 cv
34.5083 195.648 34.3481 196.498 34.3481 197.738 cv
34.3481 197.738 li
cp
33.394 197.738 mo
33.394 196.846 33.4863 196.127 33.6699 195.582 cv
33.854 195.037 34.1274 194.617 34.4902 194.32 cv
34.853 194.025 35.3091 193.877 35.8594 193.877 cv
36.2651 193.877 36.6211 193.959 36.9268 194.123 cv
37.2329 194.285 37.4854 194.521 37.6851 194.828 cv
37.8843 195.137 38.041 195.512 38.1543 195.953 cv
38.2676 196.395 38.3247 196.99 38.3247 197.738 cv
38.3247 198.625 38.2334 199.342 38.0513 199.887 cv
37.8691 200.432 37.5962 200.852 37.2339 201.148 cv
36.8711 201.447 36.4131 201.596 35.8594 201.596 cv
35.1304 201.596 34.5581 201.334 34.1421 200.813 cv
33.6436 200.184 33.394 199.158 33.394 197.738 cv
33.394 197.738 li
cp
f
59.793 197.738 mo
59.793 198.98 59.938 199.805 60.2285 200.217 cv
60.519 200.627 60.8774 200.832 61.3042 200.832 cv
61.7305 200.832 62.0889 200.627 62.3794 200.213 cv
62.6699 199.801 62.8149 198.977 62.8149 197.738 cv
62.8149 196.494 62.6699 195.668 62.3794 195.26 cv
62.0889 194.85 61.7271 194.646 61.2935 194.646 cv
60.8672 194.646 60.5269 194.826 60.2725 195.188 cv
59.9526 195.648 59.793 196.498 59.793 197.738 cv
59.793 197.738 li
cp
58.8389 197.738 mo
58.8389 196.846 58.9307 196.127 59.1147 195.582 cv
59.2988 195.037 59.5723 194.617 59.9346 194.32 cv
60.2974 194.025 60.7539 193.877 61.3042 193.877 cv
61.7095 193.877 62.0654 193.959 62.3716 194.123 cv
62.6772 194.285 62.9302 194.521 63.1294 194.828 cv
63.3291 195.137 63.4854 195.512 63.5991 195.953 cv
63.7124 196.395 63.769 196.99 63.769 197.738 cv
63.769 198.625 63.6782 199.342 63.4956 199.887 cv
63.3135 200.432 63.041 200.852 62.6782 201.148 cv
62.3154 201.447 61.8574 201.596 61.3042 201.596 cv
60.5752 201.596 60.0024 201.334 59.5864 200.813 cv
59.0879 200.184 58.8389 199.158 58.8389 197.738 cv
58.8389 197.738 li
cp
f
65.2168 201.467 mo
65.2168 200.41 65.2168 201.467 65.2168 200.41 cv
66.2739 200.41 65.2168 200.41 66.2739 200.41 cv
66.2739 201.467 66.2739 200.41 66.2739 201.467 cv
65.2168 201.467 66.2739 201.467 65.2168 201.467 cv
65.2168 201.467 li
cp
f
72.5513 200.574 mo
72.5513 201.467 72.5513 200.574 72.5513 201.467 cv
67.5537 201.467 72.5513 201.467 67.5537 201.467 cv
67.5469 201.242 67.583 201.027 67.6621 200.822 cv
67.7896 200.482 67.9932 200.146 68.2734 199.816 cv
68.5532 199.486 68.9585 199.105 69.4878 198.672 cv
70.3096 197.998 70.8647 197.465 71.1533 197.072 cv
71.4424 196.678 71.5869 196.307 71.5869 195.955 cv
71.5869 195.588 71.4551 195.277 71.1924 195.025 cv
70.9292 194.771 70.5864 194.646 70.1636 194.646 cv
69.7163 194.646 69.3589 194.779 69.0908 195.049 cv
68.8223 195.316 68.6865 195.688 68.6831 196.162 cv
67.729 196.064 68.6831 196.162 67.729 196.064 cv
67.7944 195.352 68.0405 194.811 68.4668 194.438 cv
68.8931 194.064 69.4653 193.877 70.1841 193.877 cv
70.9097 193.877 71.4834 194.078 71.9063 194.48 cv
72.3296 194.883 72.541 195.381 72.541 195.977 cv
72.541 196.279 72.479 196.576 72.355 196.867 cv
72.2314 197.16 72.0259 197.467 71.7388 197.791 cv
71.4517 198.113 70.9746 198.557 70.3076 199.121 cv
69.7505 199.588 69.3931 199.904 69.2349 200.072 cv
69.0767 200.238 68.9463 200.406 68.8433 200.574 cv
72.5513 200.574 68.8433 200.574 72.5513 200.574 cv
72.5513 200.574 li
cp
f
94.0713 197.738 mo
94.0713 198.98 94.2163 199.805 94.5068 200.217 cv
94.7974 200.627 95.1558 200.832 95.582 200.832 cv
96.0083 200.832 96.3672 200.627 96.6577 200.213 cv
96.9478 199.801 97.0933 198.977 97.0933 197.738 cv
97.0933 196.494 96.9478 195.668 96.6577 195.26 cv
96.3672 194.85 96.0054 194.646 95.5718 194.646 cv
95.1455 194.646 94.8052 194.826 94.5508 195.188 cv
94.231 195.648 94.0713 196.498 94.0713 197.738 cv
94.0713 197.738 li
cp
93.1172 197.738 mo
93.1172 196.846 93.209 196.127 93.3931 195.582 cv
93.5771 195.037 93.8501 194.617 94.2129 194.32 cv
94.5757 194.025 95.0322 193.877 95.582 193.877 cv
95.9878 193.877 96.3438 193.959 96.6499 194.123 cv
96.9556 194.285 97.2085 194.521 97.4077 194.828 cv
97.6074 195.137 97.7637 195.512 97.877 195.953 cv
97.9907 196.395 98.0474 196.99 98.0474 197.738 cv
98.0474 198.625 97.9561 199.342 97.7739 199.887 cv
97.5918 200.432 97.3193 200.852 96.9565 201.148 cv
96.5938 201.447 96.1357 201.596 95.582 201.596 cv
94.8535 201.596 94.2808 201.334 93.8647 200.813 cv
93.3662 200.184 93.1172 199.158 93.1172 197.738 cv
93.1172 197.738 li
cp
f
99.4951 201.467 mo
99.4951 200.41 99.4951 201.467 99.4951 200.41 cv
100.552 200.41 99.4951 200.41 100.552 200.41 cv
100.552 201.467 100.552 200.41 100.552 201.467 cv
99.4951 201.467 100.552 201.467 99.4951 201.467 cv
99.4951 201.467 li
cp
f
104.926 198.807 mo
104.926 195.398 104.926 198.807 104.926 195.398 cv
102.559 198.807 104.926 195.398 102.559 198.807 cv
104.926 198.807 102.559 198.807 104.926 198.807 cv
104.926 198.807 li
cp
104.926 201.467 mo
104.926 199.656 104.926 201.467 104.926 199.656 cv
101.646 199.656 104.926 199.656 101.646 199.656 cv
101.646 198.807 101.646 199.656 101.646 198.807 cv
105.097 193.908 101.646 198.807 105.097 193.908 cv
105.854 193.908 105.097 193.908 105.854 193.908 cv
105.854 198.807 105.854 193.908 105.854 198.807 cv
106.875 198.807 105.854 198.807 106.875 198.807 cv
106.875 199.656 106.875 198.807 106.875 199.656 cv
105.854 199.656 106.875 199.656 105.854 199.656 cv
105.854 201.467 105.854 199.656 105.854 201.467 cv
104.926 201.467 105.854 201.467 104.926 201.467 cv
104.926 201.467 li
cp
f
128.35 197.738 mo
128.35 198.98 128.494 199.805 128.785 200.217 cv
129.076 200.627 129.434 200.832 129.861 200.832 cv
130.287 200.832 130.645 200.627 130.936 200.213 cv
131.227 199.801 131.371 198.977 131.371 197.738 cv
131.371 196.494 131.227 195.668 130.936 195.26 cv
130.645 194.85 130.283 194.646 129.85 194.646 cv
129.424 194.646 129.084 194.826 128.828 195.188 cv
128.51 195.648 128.35 196.498 128.35 197.738 cv
128.35 197.738 li
cp
127.395 197.738 mo
127.395 196.846 127.486 196.127 127.672 195.582 cv
127.855 195.037 128.129 194.617 128.492 194.32 cv
128.854 194.025 129.311 193.877 129.861 193.877 cv
130.266 193.877 130.621 193.959 130.928 194.123 cv
131.234 194.285 131.486 194.521 131.686 194.828 cv
131.885 195.137 132.041 195.512 132.156 195.953 cv
132.27 196.395 132.326 196.99 132.326 197.738 cv
132.326 198.625 132.234 199.342 132.053 199.887 cv
131.869 200.432 131.598 200.852 131.234 201.148 cv
130.873 201.447 130.414 201.596 129.861 201.596 cv
129.131 201.596 128.559 201.334 128.143 200.813 cv
127.645 200.184 127.395 199.158 127.395 197.738 cv
127.395 197.738 li
cp
f
133.773 201.467 mo
133.773 200.41 133.773 201.467 133.773 200.41 cv
134.83 200.41 133.773 200.41 134.83 200.41 cv
134.83 201.467 134.83 200.41 134.83 201.467 cv
133.773 201.467 134.83 201.467 133.773 201.467 cv
133.773 201.467 li
cp
f
137.256 199.018 mo
137.256 199.338 137.322 199.643 137.459 199.936 cv
137.594 200.227 137.785 200.449 138.029 200.604 cv
138.273 200.756 138.529 200.832 138.797 200.832 cv
139.189 200.832 139.525 200.674 139.809 200.357 cv
140.09 200.041 140.23 199.611 140.23 199.068 cv
140.23 198.547 140.092 198.135 139.813 197.834 cv
139.535 197.533 139.184 197.383 138.762 197.383 cv
138.342 197.383 137.986 197.533 137.693 197.834 cv
137.4 198.135 137.256 198.529 137.256 199.018 cv
137.256 199.018 li
cp
141.045 195.76 mo
140.123 195.832 141.045 195.76 140.123 195.832 cv
140.041 195.467 139.924 195.203 139.771 195.037 cv
139.521 194.773 139.211 194.641 138.844 194.641 cv
138.549 194.641 138.289 194.723 138.064 194.889 cv
137.773 195.102 137.543 195.412 137.373 195.822 cv
137.205 196.23 137.117 196.813 137.111 197.568 cv
137.334 197.229 137.607 196.977 137.932 196.811 cv
138.254 196.646 138.592 196.564 138.947 196.564 cv
139.566 196.564 140.092 196.791 140.527 197.246 cv
140.963 197.703 141.18 198.291 141.18 199.012 cv
141.18 199.486 141.078 199.928 140.873 200.334 cv
140.668 200.742 140.387 201.055 140.029 201.27 cv
139.672 201.486 139.266 201.596 138.813 201.596 cv
138.039 201.596 137.408 201.311 136.92 200.742 cv
136.432 200.174 136.188 199.236 136.188 197.93 cv
136.188 196.469 136.457 195.408 136.998 194.744 cv
137.469 194.166 138.104 193.877 138.9 193.877 cv
139.494 193.877 139.982 194.045 140.363 194.377 cv
140.742 194.711 140.971 195.172 141.045 195.76 cv
141.045 195.76 li
cp
f
162.627 197.738 mo
162.627 198.98 162.773 199.805 163.063 200.217 cv
163.354 200.627 163.713 200.832 164.139 200.832 cv
164.564 200.832 164.924 200.627 165.215 200.213 cv
165.504 199.801 165.65 198.977 165.65 197.738 cv
165.65 196.494 165.504 195.668 165.215 195.26 cv
164.924 194.85 164.563 194.646 164.129 194.646 cv
163.701 194.646 163.361 194.826 163.107 195.188 cv
162.787 195.648 162.627 196.498 162.627 197.738 cv
162.627 197.738 li
cp
161.674 197.738 mo
161.674 196.846 161.766 196.127 161.949 195.582 cv
162.133 195.037 162.406 194.617 162.77 194.32 cv
163.133 194.025 163.588 193.877 164.139 193.877 cv
164.545 193.877 164.9 193.959 165.207 194.123 cv
165.512 194.285 165.766 194.521 165.965 194.828 cv
166.164 195.137 166.32 195.512 166.434 195.953 cv
166.547 196.395 166.604 196.99 166.604 197.738 cv
166.604 198.625 166.514 199.342 166.33 199.887 cv
166.148 200.432 165.875 200.852 165.514 201.148 cv
165.15 201.447 164.691 201.596 164.139 201.596 cv
163.41 201.596 162.838 201.334 162.422 200.813 cv
161.922 200.184 161.674 199.158 161.674 197.738 cv
161.674 197.738 li
cp
f
168.051 201.467 mo
168.051 200.41 168.051 201.467 168.051 200.41 cv
169.109 200.41 168.051 200.41 169.109 200.41 cv
169.109 201.467 169.109 200.41 169.109 201.467 cv
168.051 201.467 169.109 201.467 168.051 201.467 cv
168.051 201.467 li
cp
f
171.451 199.285 mo
171.451 199.551 171.514 199.807 171.639 200.055 cv
171.764 200.301 171.951 200.492 172.199 200.629 cv
172.445 200.764 172.713 200.832 172.998 200.832 cv
173.441 200.832 173.809 200.689 174.096 200.404 cv
174.385 200.119 174.529 199.756 174.529 199.316 cv
174.529 198.869 174.381 198.5 174.084 198.209 cv
173.787 197.916 173.414 197.77 172.967 197.77 cv
172.531 197.77 172.168 197.914 171.881 198.203 cv
171.594 198.492 171.451 198.854 171.451 199.285 cv
171.451 199.285 li
cp
171.75 195.795 mo
171.75 196.152 171.865 196.445 172.096 196.672 cv
172.326 196.898 172.625 197.012 172.992 197.012 cv
173.35 197.012 173.643 196.9 173.873 196.674 cv
174.102 196.449 174.215 196.174 174.215 195.848 cv
174.215 195.508 174.098 195.221 173.861 194.988 cv
173.627 194.758 173.334 194.641 172.982 194.641 cv
172.629 194.641 172.334 194.754 172.102 194.98 cv
171.867 195.207 171.75 195.479 171.75 195.795 cv
171.75 195.795 li
cp
171.936 197.367 mo
171.551 197.227 171.266 197.025 171.08 196.766 cv
170.895 196.504 170.801 196.191 170.801 195.826 cv
170.801 195.277 170.998 194.814 171.395 194.439 cv
171.789 194.064 172.316 193.877 172.973 193.877 cv
173.633 193.877 174.164 194.07 174.566 194.453 cv
174.969 194.836 175.17 195.303 175.17 195.852 cv
175.17 196.203 175.078 196.508 174.893 196.768 cv
174.709 197.027 174.43 197.227 174.055 197.367 cv
174.52 197.52 174.873 197.764 175.115 198.1 cv
175.357 198.438 175.479 198.84 175.479 199.307 cv
175.479 199.953 175.25 200.496 174.793 200.936 cv
174.336 201.375 173.734 201.596 172.988 201.596 cv
172.242 201.596 171.641 201.375 171.184 200.934 cv
170.725 200.49 170.496 199.939 170.496 199.281 cv
170.496 198.789 170.621 198.377 170.871 198.045 cv
171.119 197.715 171.475 197.488 171.936 197.367 cv
171.936 197.367 li
cp
f
199.449 201.467 mo
198.52 201.467 199.449 201.467 198.52 201.467 cv
198.52 195.553 198.52 201.467 198.52 195.553 cv
198.297 195.766 198.004 195.979 197.641 196.193 cv
197.277 196.406 196.953 196.566 196.664 196.672 cv
196.664 195.775 196.664 196.672 196.664 195.775 cv
197.184 195.531 197.637 195.236 198.025 194.889 cv
198.414 194.541 198.689 194.205 198.85 193.877 cv
199.449 193.877 198.85 193.877 199.449 193.877 cv
199.449 201.467 199.449 193.877 199.449 201.467 cv
199.449 201.467 li
cp
f
202.33 201.467 mo
202.33 200.41 202.33 201.467 202.33 200.41 cv
203.387 200.41 202.33 200.41 203.387 200.41 cv
203.387 201.467 203.387 200.41 203.387 201.467 cv
202.33 201.467 203.387 201.467 202.33 201.467 cv
202.33 201.467 li
cp
f
205.74 197.738 mo
205.74 198.98 205.885 199.805 206.176 200.217 cv
206.465 200.627 206.824 200.832 207.25 200.832 cv
207.678 200.832 208.035 200.627 208.326 200.213 cv
208.617 199.801 208.762 198.977 208.762 197.738 cv
208.762 196.494 208.617 195.668 208.326 195.26 cv
208.035 194.85 207.674 194.646 207.24 194.646 cv
206.814 194.646 206.473 194.826 206.219 195.188 cv
205.898 195.648 205.74 196.498 205.74 197.738 cv
205.74 197.738 li
cp
204.785 197.738 mo
204.785 196.846 204.877 196.127 205.061 195.582 cv
205.246 195.037 205.518 194.617 205.881 194.32 cv
206.244 194.025 206.701 193.877 207.25 193.877 cv
207.656 193.877 208.012 193.959 208.318 194.123 cv
208.623 194.285 208.877 194.521 209.076 194.828 cv
209.275 195.137 209.432 195.512 209.545 195.953 cv
209.658 196.395 209.715 196.99 209.715 197.738 cv
209.715 198.625 209.625 199.342 209.441 199.887 cv
209.26 200.432 208.988 200.852 208.625 201.148 cv
208.262 201.447 207.805 201.596 207.25 201.596 cv
206.521 201.596 205.949 201.334 205.533 200.813 cv
205.035 200.184 204.785 199.158 204.785 197.738 cv
204.785 197.738 li
cp
f
19.6567 172.803 mo
19.6567 171.871 19.6567 172.803 19.6567 171.871 cv
22.5083 171.871 19.6567 171.871 22.5083 171.871 cv
22.5083 172.803 22.5083 171.871 22.5083 172.803 cv
19.6567 172.803 22.5083 172.803 19.6567 172.803 cv
19.6567 172.803 li
cp
f
23.3174 173.076 mo
24.2456 172.953 23.3174 173.076 24.2456 172.953 cv
24.3525 173.479 24.5337 173.857 24.79 174.09 cv
25.0459 174.322 25.3579 174.438 25.7261 174.438 cv
26.1626 174.438 26.5313 174.287 26.832 173.984 cv
27.1328 173.682 27.2832 173.307 27.2832 172.859 cv
27.2832 172.434 27.144 172.082 26.8657 171.807 cv
26.5874 171.529 26.2329 171.391 25.8032 171.391 cv
25.6279 171.391 25.4097 171.426 25.1484 171.494 cv
25.2515 170.68 25.1484 171.494 25.2515 170.68 cv
25.3135 170.686 25.3633 170.689 25.4009 170.689 cv
25.7964 170.689 26.1523 170.586 26.4688 170.381 cv
26.7847 170.174 26.9429 169.855 26.9429 169.426 cv
26.9429 169.086 26.8276 168.805 26.5977 168.582 cv
26.3672 168.357 26.0698 168.246 25.7056 168.246 cv
25.3442 168.246 25.0435 168.359 24.8027 168.586 cv
24.562 168.813 24.4072 169.154 24.3389 169.607 cv
23.4102 169.441 24.3389 169.607 23.4102 169.441 cv
23.5239 168.82 23.7817 168.338 24.1841 167.996 cv
24.5864 167.654 25.0864 167.482 25.6846 167.482 cv
26.0972 167.482 26.4771 167.572 26.8242 167.748 cv
27.1719 167.926 27.437 168.168 27.6211 168.473 cv
27.8052 168.779 27.897 169.104 27.897 169.447 cv
27.897 169.773 27.8096 170.07 27.6343 170.34 cv
27.4585 170.607 27.1992 170.82 26.8555 170.979 cv
27.3022 171.082 27.6494 171.295 27.897 171.621 cv
28.1445 171.945 28.2686 172.352 28.2686 172.84 cv
28.2686 173.5 28.0278 174.059 27.5464 174.518 cv
27.0649 174.977 26.4565 175.205 25.7207 175.205 cv
25.0571 175.205 24.5063 175.008 24.0679 174.613 cv
23.6294 174.217 23.3794 173.705 23.3174 173.076 cv
23.3174 173.076 li
cp
f
24.2666 143.895 mo
24.2666 145.135 24.4116 145.961 24.7021 146.371 cv
24.9927 146.781 25.3511 146.986 25.7773 146.986 cv
26.2041 146.986 26.5625 146.781 26.853 146.369 cv
27.1431 145.955 27.2886 145.131 27.2886 143.895 cv
27.2886 142.65 27.1431 141.822 26.853 141.414 cv
26.5625 141.006 26.2002 140.801 25.7671 140.801 cv
25.3408 140.801 25.0005 140.98 24.7461 141.342 cv
24.4263 141.803 24.2666 142.652 24.2666 143.895 cv
24.2666 143.895 li
cp
23.3125 143.895 mo
23.3125 143 23.4043 142.281 23.5884 141.736 cv
23.7725 141.191 24.0454 140.771 24.4082 140.477 cv
24.771 140.18 25.2275 140.033 25.7773 140.033 cv
26.1831 140.033 26.5391 140.113 26.8452 140.277 cv
27.1509 140.441 27.4038 140.676 27.603 140.984 cv
27.8027 141.291 27.959 141.666 28.0723 142.107 cv
28.186 142.549 28.2427 143.145 28.2427 143.895 cv
28.2427 144.781 28.1514 145.496 27.9692 146.041 cv
27.7871 146.586 27.5146 147.006 27.1519 147.305 cv
26.7891 147.602 26.3311 147.75 25.7773 147.75 cv
25.0488 147.75 24.4761 147.488 24.0601 146.967 cv
23.5615 146.338 23.3125 145.313 23.3125 143.895 cv
23.3125 143.895 li
cp
f
23.3174 118.176 mo
24.2456 118.051 23.3174 118.176 24.2456 118.051 cv
24.3525 118.578 24.5337 118.957 24.79 119.188 cv
25.0459 119.42 25.3579 119.537 25.7261 119.537 cv
26.1626 119.537 26.5313 119.385 26.832 119.082 cv
27.1328 118.779 27.2832 118.406 27.2832 117.959 cv
27.2832 117.533 27.144 117.182 26.8657 116.904 cv
26.5874 116.627 26.2329 116.49 25.8032 116.49 cv
25.6279 116.49 25.4097 116.523 25.1484 116.592 cv
25.2515 115.777 25.1484 116.592 25.2515 115.777 cv
25.3135 115.785 25.3633 115.789 25.4009 115.789 cv
25.7964 115.789 26.1523 115.686 26.4688 115.479 cv
26.7847 115.273 26.9429 114.955 26.9429 114.525 cv
26.9429 114.186 26.8276 113.902 26.5977 113.68 cv
26.3672 113.457 26.0698 113.344 25.7056 113.344 cv
25.3442 113.344 25.0435 113.459 24.8027 113.686 cv
24.562 113.912 24.4072 114.252 24.3389 114.705 cv
23.4102 114.541 24.3389 114.705 23.4102 114.541 cv
23.5239 113.918 23.7817 113.438 24.1841 113.094 cv
24.5864 112.752 25.0864 112.582 25.6846 112.582 cv
26.0972 112.582 26.4771 112.67 26.8242 112.848 cv
27.1719 113.023 27.437 113.266 27.6211 113.572 cv
27.8052 113.877 27.897 114.203 27.897 114.545 cv
27.897 114.873 27.8096 115.17 27.6343 115.438 cv
27.4585 115.705 27.1992 115.918 26.8555 116.076 cv
27.3022 116.18 27.6494 116.395 27.897 116.719 cv
28.1445 117.043 28.2686 117.449 28.2686 117.938 cv
28.2686 118.598 28.0278 119.158 27.5464 119.615 cv
27.0649 120.074 26.4565 120.305 25.7207 120.305 cv
25.0571 120.305 24.5063 120.107 24.0679 119.711 cv
23.6294 119.316 23.3794 118.805 23.3174 118.176 cv
23.3174 118.176 li
cp
f
24.3389 90.1748 mo
24.3389 90.4946 24.4067 90.8003 24.5425 91.0923 cv
24.6782 91.3848 24.8682 91.6069 25.1123 91.7603 cv
25.3564 91.9131 25.6123 91.9897 25.8809 91.9897 cv
26.2725 91.9897 26.6094 91.8315 26.8916 91.5151 cv
27.1733 91.1992 27.3145 90.7695 27.3145 90.2266 cv
27.3145 89.7041 27.1753 89.2925 26.8965 88.9917 cv
26.6182 88.6909 26.2676 88.5405 25.8447 88.5405 cv
25.4253 88.5405 25.0693 88.6909 24.7769 88.9917 cv
24.4849 89.2925 24.3389 89.687 24.3389 90.1748 cv
24.3389 90.1748 li
cp
28.1294 86.9165 mo
27.2061 86.9888 28.1294 86.9165 27.2061 86.9888 cv
27.1235 86.6245 27.0068 86.3599 26.8555 86.1948 cv
26.6045 85.9302 26.2949 85.7979 25.9272 85.7979 cv
25.6313 85.7979 25.3716 85.8804 25.1484 86.0454 cv
24.856 86.2588 24.626 86.5698 24.4575 86.9785 cv
24.2886 87.3877 24.2012 87.9702 24.1943 88.7261 cv
24.4175 88.3862 24.6909 88.1333 25.0142 87.9683 cv
25.3374 87.8032 25.6763 87.7212 26.0303 87.7212 cv
26.6489 87.7212 27.1758 87.9487 27.6108 88.4038 cv
28.0459 88.8594 28.2632 89.4478 28.2632 90.1699 cv
28.2632 90.644 28.1611 91.085 27.9565 91.4922 cv
27.752 91.8994 27.4707 92.2114 27.1133 92.4277 cv
26.7559 92.644 26.3501 92.7524 25.896 92.7524 cv
25.1226 92.7524 24.4917 92.4683 24.0034 91.8994 cv
23.5151 91.3306 23.271 90.3931 23.271 89.0869 cv
23.271 87.6265 23.541 86.5645 24.0806 85.9014 cv
24.5518 85.3237 25.186 85.0352 25.9839 85.0352 cv
26.5786 85.0352 27.0659 85.2017 27.4458 85.5352 cv
27.8257 85.8687 28.0537 86.3291 28.1294 86.9165 cv
28.1294 86.9165 li
cp
f
27.2524 60.0898 mo
27.2524 59.5571 27.1108 59.1343 26.8271 58.8218 cv
26.5435 58.5088 26.2021 58.3525 25.8032 58.3525 cv
25.3906 58.3525 25.0313 58.521 24.7256 58.8579 cv
24.4194 59.1948 24.2666 59.6313 24.2666 60.1675 cv
24.2666 60.6484 24.4116 61.0396 24.7021 61.3403 cv
24.9927 61.6406 25.3511 61.791 25.7773 61.791 cv
26.2075 61.791 26.5605 61.6406 26.8374 61.3403 cv
27.1143 61.0396 27.2524 60.6226 27.2524 60.0898 cv
27.2524 60.0898 li
cp
23.4517 63.4253 mo
24.3438 63.3428 23.4517 63.4253 24.3438 63.3428 cv
24.4194 63.7622 24.564 64.0664 24.7769 64.2554 cv
24.9902 64.4443 25.2637 64.5391 25.5972 64.5391 cv
25.8823 64.5391 26.1323 64.4736 26.3472 64.3433 cv
26.5625 64.2124 26.7383 64.0381 26.876 63.8198 cv
27.0137 63.6016 27.1289 63.3066 27.2217 62.9355 cv
27.3145 62.5645 27.3608 62.1865 27.3608 61.8013 cv
27.3608 61.7603 27.3589 61.6982 27.3555 61.6157 cv
27.1699 61.9116 26.9165 62.1509 26.5947 62.335 cv
26.2734 62.519 25.9253 62.6108 25.5508 62.6108 cv
24.9248 62.6108 24.3955 62.3838 23.9624 61.9302 cv
23.5288 61.4766 23.3125 60.8784 23.3125 60.1362 cv
23.3125 59.3696 23.5386 58.7529 23.9907 58.2856 cv
24.4429 57.8184 25.0093 57.5845 25.6899 57.5845 cv
26.1816 57.5845 26.6309 57.7168 27.0386 57.9814 cv
27.4458 58.2461 27.7554 58.623 27.9668 59.1128 cv
28.1782 59.6025 28.2837 60.3115 28.2837 61.2397 cv
28.2837 62.2051 28.1792 62.9741 27.9692 63.5464 cv
27.7598 64.1187 27.4478 64.5542 27.0332 64.8535 cv
26.6191 65.1523 26.1333 65.3018 25.5762 65.3018 cv
24.9849 65.3018 24.502 65.1377 24.1274 64.8096 cv
23.7524 64.4814 23.5273 64.02 23.4517 63.4253 cv
23.4517 63.4253 li
cp
f
20.9517 37.7222 mo
20.0234 37.7222 20.9517 37.7222 20.0234 37.7222 cv
20.0234 31.8091 20.0234 37.7222 20.0234 31.8091 cv
19.8003 32.0225 19.5068 32.2354 19.144 32.4487 cv
18.7817 32.6616 18.4556 32.8213 18.167 32.9282 cv
18.167 32.0308 18.167 32.9282 18.167 32.0308 cv
18.686 31.7871 19.1401 31.4912 19.5283 31.144 cv
19.917 30.7974 20.1919 30.4604 20.3535 30.1338 cv
20.9517 30.1338 20.3535 30.1338 20.9517 30.1338 cv
20.9517 37.7222 20.9517 30.1338 20.9517 37.7222 cv
20.9517 37.7222 li
cp
f
28.1909 36.8306 mo
28.1909 37.7222 28.1909 36.8306 28.1909 37.7222 cv
23.1938 37.7222 28.1909 37.7222 23.1938 37.7222 cv
23.187 37.499 23.2231 37.2842 23.3022 37.0781 cv
23.4292 36.7378 23.6328 36.4028 23.9131 36.0728 cv
24.1934 35.7427 24.5981 35.3613 25.1279 34.9282 cv
25.9492 34.2544 26.5049 33.7212 26.7935 33.3276 cv
27.0825 32.9341 27.2266 32.562 27.2266 32.2114 cv
27.2266 31.8438 27.0952 31.5337 26.832 31.2808 cv
26.5693 31.0283 26.2261 30.9019 25.8032 30.9019 cv
25.3564 30.9019 24.9985 31.0361 24.7305 31.3042 cv
24.4624 31.5723 24.3267 31.9434 24.3232 32.4175 cv
23.3691 32.3198 24.3232 32.4175 23.3691 32.3198 cv
23.4346 31.6084 23.6802 31.0659 24.1064 30.6934 cv
24.5327 30.3203 25.1055 30.1338 25.8237 30.1338 cv
26.5493 30.1338 27.1235 30.335 27.5464 30.7368 cv
27.9692 31.1392 28.1807 31.6372 28.1807 32.2319 cv
28.1807 32.5347 28.1187 32.8315 27.9951 33.124 cv
27.8716 33.416 27.666 33.7236 27.3789 34.0469 cv
27.0918 34.3696 26.6147 34.813 25.9478 35.3765 cv
25.3906 35.8442 25.0332 36.1611 24.875 36.3276 cv
24.7168 36.4946 24.5864 36.6621 24.4829 36.8306 cv
28.1909 36.8306 24.4829 36.8306 28.1909 36.8306 cv
28.1909 36.8306 li
cp
f
.575996 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
31.5156 190.428 mo
31.5156 34.7471 li
31.5156 34.7471 mo
34.1079 34.7471 li
31.5156 48.4722 mo
32.8599 48.4722 li
31.5156 62.1978 mo
34.1079 62.1978 li
31.5156 75.9229 mo
32.8599 75.9229 li
31.5156 89.6484 mo
34.1079 89.6484 li
31.5156 103.47 mo
32.8599 103.47 li
31.5156 117.195 mo
34.1079 117.195 li
31.5156 130.92 mo
32.8599 130.92 li
31.5156 144.645 mo
34.1079 144.645 li
31.5156 158.371 mo
32.8599 158.371 li
31.5156 172.096 mo
34.1079 172.096 li
31.5156 185.822 mo
32.8599 185.822 li
31.5156 190.428 mo
202.906 190.428 li
202.906 190.428 mo
202.906 187.838 li
191.48 190.428 mo
191.48 189.084 li
180.055 190.428 mo
180.055 189.084 li
168.629 190.428 mo
168.629 187.838 li
157.203 190.428 mo
157.203 189.084 li
145.777 190.428 mo
145.777 189.084 li
134.35 190.428 mo
134.35 187.838 li
122.924 190.428 mo
122.924 189.084 li
111.498 190.428 mo
111.498 189.084 li
100.072 190.428 mo
100.072 187.838 li
88.646 190.428 mo
88.646 189.084 li
77.2197 190.428 mo
77.2197 189.084 li
65.7939 190.428 mo
65.7939 187.838 li
54.3677 190.428 mo
54.3677 189.084 li
42.9419 190.428 mo
42.9419 189.084 li
31.5156 190.428 mo
31.5156 187.838 li
@
25.5146 25.9326 mo
25.5146 27.1733 25.6602 27.999 25.9507 28.4097 cv
26.2412 28.8203 26.5996 29.0259 27.0259 29.0259 cv
27.4521 29.0259 27.8105 28.8198 28.1011 28.4072 cv
28.3916 27.9946 28.5366 27.1699 28.5366 25.9326 cv
28.5366 24.6885 28.3916 23.8618 28.1011 23.4531 cv
27.8105 23.0439 27.4487 22.8394 27.0156 22.8394 cv
26.5894 22.8394 26.2485 23.02 25.9941 23.3809 cv
25.6748 23.8413 25.5146 24.6919 25.5146 25.9326 cv
25.5146 25.9326 li
cp
24.5605 25.9326 mo
24.5605 25.0391 24.6528 24.3198 24.8364 23.7754 cv
25.0205 23.2305 25.2939 22.8101 25.6567 22.5146 cv
26.019 22.2192 26.4756 22.0713 27.0259 22.0713 cv
27.4316 22.0713 27.7876 22.1528 28.0933 22.3164 cv
28.3994 22.4795 28.6519 22.7148 28.8516 23.0225 cv
29.0508 23.3301 29.2075 23.7046 29.3208 24.1465 cv
29.4341 24.5879 29.4907 25.1836 29.4907 25.9326 cv
29.4907 26.8193 29.3999 27.5352 29.2178 28.0796 cv
29.0352 28.6245 28.7627 29.0454 28.4004 29.3428 cv
28.0376 29.6401 27.5791 29.7886 27.0259 29.7886 cv
26.2969 29.7886 25.7246 29.5278 25.3086 29.0054 cv
24.8101 28.3765 24.5605 27.3521 24.5605 25.9326 cv
24.5605 25.9326 li
cp
f
30.9385 29.6597 mo
30.9385 28.603 30.9385 29.6597 30.9385 28.603 cv
31.9956 28.603 30.9385 28.603 31.9956 28.603 cv
31.9956 29.6597 31.9956 28.603 31.9956 29.6597 cv
30.9385 29.6597 31.9956 29.6597 30.9385 29.6597 cv
30.9385 29.6597 li
cp
f
34.3481 25.9326 mo
34.3481 27.1733 34.4937 27.999 34.7842 28.4097 cv
35.0747 28.8203 35.4331 29.0259 35.8594 29.0259 cv
36.2856 29.0259 36.644 28.8198 36.9346 28.4072 cv
37.2251 27.9946 37.3706 27.1699 37.3706 25.9326 cv
37.3706 24.6885 37.2251 23.8618 36.9346 23.4531 cv
36.644 23.0439 36.2822 22.8394 35.8491 22.8394 cv
35.4229 22.8394 35.0825 23.02 34.8281 23.3809 cv
34.5083 23.8413 34.3481 24.6919 34.3481 25.9326 cv
34.3481 25.9326 li
cp
33.394 25.9326 mo
33.394 25.0391 33.4863 24.3198 33.6699 23.7754 cv
33.854 23.2305 34.1274 22.8101 34.4902 22.5146 cv
34.853 22.2192 35.3091 22.0713 35.8594 22.0713 cv
36.2651 22.0713 36.6211 22.1528 36.9268 22.3164 cv
37.2329 22.4795 37.4854 22.7148 37.6851 23.0225 cv
37.8843 23.3301 38.041 23.7046 38.1543 24.1465 cv
38.2676 24.5879 38.3247 25.1836 38.3247 25.9326 cv
38.3247 26.8193 38.2334 27.5352 38.0513 28.0796 cv
37.8691 28.6245 37.5962 29.0454 37.2339 29.3428 cv
36.8711 29.6401 36.4131 29.7886 35.8594 29.7886 cv
35.1304 29.7886 34.5581 29.5278 34.1421 29.0054 cv
33.6436 28.3765 33.394 27.3521 33.394 25.9326 cv
33.394 25.9326 li
cp
f
59.793 25.9326 mo
59.793 27.1733 59.938 27.999 60.2285 28.4097 cv
60.519 28.8203 60.8774 29.0259 61.3042 29.0259 cv
61.7305 29.0259 62.0889 28.8198 62.3794 28.4072 cv
62.6699 27.9946 62.8149 27.1699 62.8149 25.9326 cv
62.8149 24.6885 62.6699 23.8618 62.3794 23.4531 cv
62.0889 23.0439 61.7271 22.8394 61.2935 22.8394 cv
60.8672 22.8394 60.5269 23.02 60.2725 23.3809 cv
59.9526 23.8413 59.793 24.6919 59.793 25.9326 cv
59.793 25.9326 li
cp
58.8389 25.9326 mo
58.8389 25.0391 58.9307 24.3198 59.1147 23.7754 cv
59.2988 23.2305 59.5723 22.8101 59.9346 22.5146 cv
60.2974 22.2192 60.7539 22.0713 61.3042 22.0713 cv
61.7095 22.0713 62.0654 22.1528 62.3716 22.3164 cv
62.6772 22.4795 62.9302 22.7148 63.1294 23.0225 cv
63.3291 23.3301 63.4854 23.7046 63.5991 24.1465 cv
63.7124 24.5879 63.769 25.1836 63.769 25.9326 cv
63.769 26.8193 63.6782 27.5352 63.4956 28.0796 cv
63.3135 28.6245 63.041 29.0454 62.6782 29.3428 cv
62.3154 29.6401 61.8574 29.7886 61.3042 29.7886 cv
60.5752 29.7886 60.0024 29.5278 59.5864 29.0054 cv
59.0879 28.3765 58.8389 27.3521 58.8389 25.9326 cv
58.8389 25.9326 li
cp
f
65.2168 29.6597 mo
65.2168 28.603 65.2168 29.6597 65.2168 28.603 cv
66.2739 28.603 65.2168 28.603 66.2739 28.603 cv
66.2739 29.6597 66.2739 28.603 66.2739 29.6597 cv
65.2168 29.6597 66.2739 29.6597 65.2168 29.6597 cv
65.2168 29.6597 li
cp
f
72.5513 28.7681 mo
72.5513 29.6597 72.5513 28.7681 72.5513 29.6597 cv
67.5537 29.6597 72.5513 29.6597 67.5537 29.6597 cv
67.5469 29.4365 67.583 29.2217 67.6621 29.0156 cv
67.7896 28.6753 67.9932 28.3403 68.2734 28.0103 cv
68.5532 27.6802 68.9585 27.2988 69.4878 26.8657 cv
70.3096 26.1919 70.8647 25.6587 71.1533 25.2651 cv
71.4424 24.8716 71.5869 24.4995 71.5869 24.1489 cv
71.5869 23.7813 71.4551 23.4712 71.1924 23.2183 cv
70.9292 22.9658 70.5864 22.8394 70.1636 22.8394 cv
69.7163 22.8394 69.3589 22.9736 69.0908 23.2417 cv
68.8223 23.5098 68.6865 23.8809 68.6831 24.355 cv
67.729 24.2573 68.6831 24.355 67.729 24.2573 cv
67.7944 23.5459 68.0405 23.0034 68.4668 22.6309 cv
68.8931 22.2578 69.4653 22.0713 70.1841 22.0713 cv
70.9097 22.0713 71.4834 22.2725 71.9063 22.6743 cv
72.3296 23.0767 72.541 23.5752 72.541 24.1694 cv
72.541 24.4722 72.479 24.769 72.355 25.0615 cv
72.2314 25.3535 72.0259 25.6611 71.7388 25.9844 cv
71.4517 26.3071 70.9746 26.7505 70.3076 27.3145 cv
69.7505 27.7817 69.3931 28.0986 69.2349 28.2656 cv
69.0767 28.4321 68.9463 28.5996 68.8433 28.7681 cv
72.5513 28.7681 68.8433 28.7681 72.5513 28.7681 cv
72.5513 28.7681 li
cp
f
94.0713 25.9326 mo
94.0713 27.1733 94.2163 27.999 94.5068 28.4097 cv
94.7974 28.8203 95.1558 29.0259 95.582 29.0259 cv
96.0083 29.0259 96.3672 28.8198 96.6577 28.4072 cv
96.9478 27.9946 97.0933 27.1699 97.0933 25.9326 cv
97.0933 24.6885 96.9478 23.8618 96.6577 23.4531 cv
96.3672 23.0439 96.0054 22.8394 95.5718 22.8394 cv
95.1455 22.8394 94.8052 23.02 94.5508 23.3809 cv
94.231 23.8413 94.0713 24.6919 94.0713 25.9326 cv
94.0713 25.9326 li
cp
93.1172 25.9326 mo
93.1172 25.0391 93.209 24.3198 93.3931 23.7754 cv
93.5771 23.2305 93.8501 22.8101 94.2129 22.5146 cv
94.5757 22.2192 95.0322 22.0713 95.582 22.0713 cv
95.9878 22.0713 96.3438 22.1528 96.6499 22.3164 cv
96.9556 22.4795 97.2085 22.7148 97.4077 23.0225 cv
97.6074 23.3301 97.7637 23.7046 97.877 24.1465 cv
97.9907 24.5879 98.0474 25.1836 98.0474 25.9326 cv
98.0474 26.8193 97.9561 27.5352 97.7739 28.0796 cv
97.5918 28.6245 97.3193 29.0454 96.9565 29.3428 cv
96.5938 29.6401 96.1357 29.7886 95.582 29.7886 cv
94.8535 29.7886 94.2808 29.5278 93.8647 29.0054 cv
93.3662 28.3765 93.1172 27.3521 93.1172 25.9326 cv
93.1172 25.9326 li
cp
f
99.4951 29.6597 mo
99.4951 28.603 99.4951 29.6597 99.4951 28.603 cv
100.552 28.603 99.4951 28.603 100.552 28.603 cv
100.552 29.6597 100.552 28.603 100.552 29.6597 cv
99.4951 29.6597 100.552 29.6597 99.4951 29.6597 cv
99.4951 29.6597 li
cp
f
104.926 27 mo
104.926 23.5923 104.926 27 104.926 23.5923 cv
102.559 27 104.926 23.5923 102.559 27 cv
104.926 27 102.559 27 104.926 27 cv
104.926 27 li
cp
104.926 29.6597 mo
104.926 27.8506 104.926 29.6597 104.926 27.8506 cv
101.646 27.8506 104.926 27.8506 101.646 27.8506 cv
101.646 27 101.646 27.8506 101.646 27 cv
105.097 22.1025 101.646 27 105.097 22.1025 cv
105.854 22.1025 105.097 22.1025 105.854 22.1025 cv
105.854 27 105.854 22.1025 105.854 27 cv
106.875 27 105.854 27 106.875 27 cv
106.875 27.8506 106.875 27 106.875 27.8506 cv
105.854 27.8506 106.875 27.8506 105.854 27.8506 cv
105.854 29.6597 105.854 27.8506 105.854 29.6597 cv
104.926 29.6597 105.854 29.6597 104.926 29.6597 cv
104.926 29.6597 li
cp
f
128.35 25.9326 mo
128.35 27.1733 128.494 27.999 128.785 28.4097 cv
129.076 28.8203 129.434 29.0259 129.861 29.0259 cv
130.287 29.0259 130.645 28.8198 130.936 28.4072 cv
131.227 27.9946 131.371 27.1699 131.371 25.9326 cv
131.371 24.6885 131.227 23.8618 130.936 23.4531 cv
130.645 23.0439 130.283 22.8394 129.85 22.8394 cv
129.424 22.8394 129.084 23.02 128.828 23.3809 cv
128.51 23.8413 128.35 24.6919 128.35 25.9326 cv
128.35 25.9326 li
cp
127.395 25.9326 mo
127.395 25.0391 127.486 24.3198 127.672 23.7754 cv
127.855 23.2305 128.129 22.8101 128.492 22.5146 cv
128.854 22.2192 129.311 22.0713 129.861 22.0713 cv
130.266 22.0713 130.621 22.1528 130.928 22.3164 cv
131.234 22.4795 131.486 22.7148 131.686 23.0225 cv
131.885 23.3301 132.041 23.7046 132.156 24.1465 cv
132.27 24.5879 132.326 25.1836 132.326 25.9326 cv
132.326 26.8193 132.234 27.5352 132.053 28.0796 cv
131.869 28.6245 131.598 29.0454 131.234 29.3428 cv
130.873 29.6401 130.414 29.7886 129.861 29.7886 cv
129.131 29.7886 128.559 29.5278 128.143 29.0054 cv
127.645 28.3765 127.395 27.3521 127.395 25.9326 cv
127.395 25.9326 li
cp
f
133.773 29.6597 mo
133.773 28.603 133.773 29.6597 133.773 28.603 cv
134.83 28.603 133.773 28.603 134.83 28.603 cv
134.83 29.6597 134.83 28.603 134.83 29.6597 cv
133.773 29.6597 134.83 29.6597 133.773 29.6597 cv
133.773 29.6597 li
cp
f
137.256 27.2114 mo
137.256 27.5308 137.322 27.8364 137.459 28.1289 cv
137.594 28.4209 137.785 28.6436 138.029 28.7964 cv
138.273 28.9492 138.529 29.0259 138.797 29.0259 cv
139.189 29.0259 139.525 28.8677 139.809 28.5513 cv
140.09 28.2354 140.23 27.8057 140.23 27.2627 cv
140.23 26.7402 140.092 26.3286 139.813 26.0278 cv
139.535 25.7275 139.184 25.5771 138.762 25.5771 cv
138.342 25.5771 137.986 25.7275 137.693 26.0278 cv
137.4 26.3286 137.256 26.7231 137.256 27.2114 cv
137.256 27.2114 li
cp
141.045 23.9531 mo
140.123 24.0254 141.045 23.9531 140.123 24.0254 cv
140.041 23.6606 139.924 23.3965 139.771 23.2314 cv
139.521 22.9668 139.211 22.8345 138.844 22.8345 cv
138.549 22.8345 138.289 22.917 138.064 23.082 cv
137.773 23.2949 137.543 23.606 137.373 24.0151 cv
137.205 24.4238 137.117 25.0063 137.111 25.7627 cv
137.334 25.4224 137.607 25.1694 137.932 25.0049 cv
138.254 24.8398 138.592 24.7573 138.947 24.7573 cv
139.566 24.7573 140.092 24.9849 140.527 25.4404 cv
140.963 25.8955 141.18 26.4844 141.18 27.2061 cv
141.18 27.6802 141.078 28.1211 140.873 28.5283 cv
140.668 28.9355 140.387 29.2476 140.029 29.4639 cv
139.672 29.6807 139.266 29.7886 138.813 29.7886 cv
138.039 29.7886 137.408 29.5044 136.92 28.9355 cv
136.432 28.3667 136.188 27.4292 136.188 26.1235 cv
136.188 24.6626 136.457 23.6006 136.998 22.9375 cv
137.469 22.3599 138.104 22.0713 138.9 22.0713 cv
139.494 22.0713 139.982 22.2378 140.363 22.5713 cv
140.742 22.9048 140.971 23.3652 141.045 23.9531 cv
141.045 23.9531 li
cp
f
162.627 25.9326 mo
162.627 27.1733 162.773 27.999 163.063 28.4097 cv
163.354 28.8203 163.713 29.0259 164.139 29.0259 cv
164.564 29.0259 164.924 28.8198 165.215 28.4072 cv
165.504 27.9946 165.65 27.1699 165.65 25.9326 cv
165.65 24.6885 165.504 23.8618 165.215 23.4531 cv
164.924 23.0439 164.563 22.8394 164.129 22.8394 cv
163.701 22.8394 163.361 23.02 163.107 23.3809 cv
162.787 23.8413 162.627 24.6919 162.627 25.9326 cv
162.627 25.9326 li
cp
161.674 25.9326 mo
161.674 25.0391 161.766 24.3198 161.949 23.7754 cv
162.133 23.2305 162.406 22.8101 162.77 22.5146 cv
163.133 22.2192 163.588 22.0713 164.139 22.0713 cv
164.545 22.0713 164.9 22.1528 165.207 22.3164 cv
165.512 22.4795 165.766 22.7148 165.965 23.0225 cv
166.164 23.3301 166.32 23.7046 166.434 24.1465 cv
166.547 24.5879 166.604 25.1836 166.604 25.9326 cv
166.604 26.8193 166.514 27.5352 166.33 28.0796 cv
166.148 28.6245 165.875 29.0454 165.514 29.3428 cv
165.15 29.6401 164.691 29.7886 164.139 29.7886 cv
163.41 29.7886 162.838 29.5278 162.422 29.0054 cv
161.922 28.3765 161.674 27.3521 161.674 25.9326 cv
161.674 25.9326 li
cp
f
168.051 29.6597 mo
168.051 28.603 168.051 29.6597 168.051 28.603 cv
169.109 28.603 168.051 28.603 169.109 28.603 cv
169.109 29.6597 169.109 28.603 169.109 29.6597 cv
168.051 29.6597 169.109 29.6597 168.051 29.6597 cv
168.051 29.6597 li
cp
f
171.451 27.479 mo
171.451 27.7437 171.514 28 171.639 28.2476 cv
171.764 28.4946 171.951 28.6865 172.199 28.8223 cv
172.445 28.958 172.713 29.0259 172.998 29.0259 cv
173.441 29.0259 173.809 28.8833 174.096 28.5981 cv
174.385 28.3125 174.529 27.9502 174.529 27.5103 cv
174.529 27.0635 174.381 26.6938 174.084 26.4019 cv
173.787 26.1099 173.414 25.9634 172.967 25.9634 cv
172.531 25.9634 172.168 26.1079 171.881 26.3965 cv
171.594 26.6855 171.451 27.0464 171.451 27.479 cv
171.451 27.479 li
cp
171.75 23.9893 mo
171.75 24.3467 171.865 24.6387 172.096 24.8657 cv
172.326 25.0923 172.625 25.2056 172.992 25.2056 cv
173.35 25.2056 173.643 25.0933 173.873 24.8682 cv
174.102 24.6431 174.215 24.3672 174.215 24.0405 cv
174.215 23.7007 174.098 23.4146 173.861 23.1821 cv
173.627 22.9502 173.334 22.8345 172.982 22.8345 cv
172.629 22.8345 172.334 22.9478 172.102 23.1748 cv
171.867 23.4014 171.75 23.6729 171.75 23.9893 cv
171.75 23.9893 li
cp
171.936 25.5615 mo
171.551 25.4204 171.266 25.2197 171.08 24.9585 cv
170.895 24.6973 170.801 24.3843 170.801 24.02 cv
170.801 23.4702 170.998 23.0078 171.395 22.6333 cv
171.789 22.2588 172.316 22.0713 172.973 22.0713 cv
173.633 22.0713 174.164 22.2632 174.566 22.646 cv
174.969 23.0293 175.17 23.4961 175.17 24.0459 cv
175.17 24.3965 175.078 24.7017 174.893 24.9609 cv
174.709 25.2202 174.43 25.4204 174.055 25.5615 cv
174.52 25.7129 174.873 25.9565 175.115 26.2935 cv
175.357 26.6304 175.479 27.0322 175.479 27.5 cv
175.479 28.146 175.25 28.689 174.793 29.1289 cv
174.336 29.5688 173.734 29.7886 172.988 29.7886 cv
172.242 29.7886 171.641 29.5679 171.184 29.1265 cv
170.725 28.6846 170.496 28.1338 170.496 27.4741 cv
170.496 26.9824 170.621 26.5708 170.871 26.2393 cv
171.119 25.9077 171.475 25.6816 171.936 25.5615 cv
171.936 25.5615 li
cp
f
199.449 29.6597 mo
198.52 29.6597 199.449 29.6597 198.52 29.6597 cv
198.52 23.7466 198.52 29.6597 198.52 23.7466 cv
198.297 23.96 198.004 24.1729 197.641 24.3862 cv
197.277 24.5991 196.953 24.7588 196.664 24.8657 cv
196.664 23.9683 196.664 24.8657 196.664 23.9683 cv
197.184 23.7246 197.637 23.4287 198.025 23.082 cv
198.414 22.7349 198.689 22.3979 198.85 22.0713 cv
199.449 22.0713 198.85 22.0713 199.449 22.0713 cv
199.449 29.6597 199.449 22.0713 199.449 29.6597 cv
199.449 29.6597 li
cp
f
202.33 29.6597 mo
202.33 28.603 202.33 29.6597 202.33 28.603 cv
203.387 28.603 202.33 28.603 203.387 28.603 cv
203.387 29.6597 203.387 28.603 203.387 29.6597 cv
202.33 29.6597 203.387 29.6597 202.33 29.6597 cv
202.33 29.6597 li
cp
f
205.74 25.9326 mo
205.74 27.1733 205.885 27.999 206.176 28.4097 cv
206.465 28.8203 206.824 29.0259 207.25 29.0259 cv
207.678 29.0259 208.035 28.8198 208.326 28.4072 cv
208.617 27.9946 208.762 27.1699 208.762 25.9326 cv
208.762 24.6885 208.617 23.8618 208.326 23.4531 cv
208.035 23.0439 207.674 22.8394 207.24 22.8394 cv
206.814 22.8394 206.473 23.02 206.219 23.3809 cv
205.898 23.8413 205.74 24.6919 205.74 25.9326 cv
205.74 25.9326 li
cp
204.785 25.9326 mo
204.785 25.0391 204.877 24.3198 205.061 23.7754 cv
205.246 23.2305 205.518 22.8101 205.881 22.5146 cv
206.244 22.2192 206.701 22.0713 207.25 22.0713 cv
207.656 22.0713 208.012 22.1528 208.318 22.3164 cv
208.623 22.4795 208.877 22.7148 209.076 23.0225 cv
209.275 23.3301 209.432 23.7046 209.545 24.1465 cv
209.658 24.5879 209.715 25.1836 209.715 25.9326 cv
209.715 26.8193 209.625 27.5352 209.441 28.0796 cv
209.26 28.6245 208.988 29.0454 208.625 29.3428 cv
208.262 29.6401 207.805 29.7886 207.25 29.7886 cv
206.521 29.7886 205.949 29.5278 205.533 29.0054 cv
205.035 28.3765 204.785 27.3521 204.785 25.9326 cv
204.785 25.9326 li
cp
f
206.027 172.803 mo
206.027 171.871 206.027 172.803 206.027 171.871 cv
208.879 171.871 206.027 171.871 208.879 171.871 cv
208.879 172.803 208.879 171.871 208.879 172.803 cv
206.027 172.803 208.879 172.803 206.027 172.803 cv
206.027 172.803 li
cp
f
209.688 173.076 mo
210.615 172.953 209.688 173.076 210.615 172.953 cv
210.723 173.479 210.904 173.857 211.16 174.09 cv
211.416 174.322 211.729 174.438 212.096 174.438 cv
212.533 174.438 212.9 174.287 213.201 173.984 cv
213.502 173.682 213.652 173.307 213.652 172.859 cv
213.652 172.434 213.514 172.082 213.236 171.807 cv
212.957 171.529 212.604 171.391 212.174 171.391 cv
211.998 171.391 211.779 171.426 211.518 171.494 cv
211.621 170.68 211.518 171.494 211.621 170.68 cv
211.684 170.686 211.732 170.689 211.771 170.689 cv
212.166 170.689 212.521 170.586 212.838 170.381 cv
213.154 170.174 213.313 169.855 213.313 169.426 cv
213.313 169.086 213.197 168.805 212.967 168.582 cv
212.736 168.357 212.439 168.246 212.076 168.246 cv
211.715 168.246 211.414 168.359 211.172 168.586 cv
210.932 168.813 210.777 169.154 210.709 169.607 cv
209.779 169.441 210.709 169.607 209.779 169.441 cv
209.895 168.82 210.152 168.338 210.555 167.996 cv
210.957 167.654 211.457 167.482 212.055 167.482 cv
212.467 167.482 212.848 167.572 213.193 167.748 cv
213.541 167.926 213.807 168.168 213.99 168.473 cv
214.176 168.779 214.268 169.104 214.268 169.447 cv
214.268 169.773 214.18 170.07 214.004 170.34 cv
213.828 170.607 213.568 170.82 213.225 170.979 cv
213.672 171.082 214.02 171.295 214.268 171.621 cv
214.514 171.945 214.639 172.352 214.639 172.84 cv
214.639 173.5 214.398 174.059 213.916 174.518 cv
213.436 174.977 212.826 175.205 212.09 175.205 cv
211.428 175.205 210.877 175.008 210.438 174.613 cv
210 174.217 209.75 173.705 209.688 173.076 cv
209.688 173.076 li
cp
f
207.084 143.895 mo
207.084 145.135 207.229 145.961 207.52 146.371 cv
207.811 146.781 208.168 146.986 208.596 146.986 cv
209.021 146.986 209.379 146.781 209.67 146.369 cv
209.961 145.955 210.105 145.131 210.105 143.895 cv
210.105 142.65 209.961 141.822 209.67 141.414 cv
209.379 141.006 209.018 140.801 208.584 140.801 cv
208.158 140.801 207.818 140.98 207.563 141.342 cv
207.244 141.803 207.084 142.652 207.084 143.895 cv
207.084 143.895 li
cp
206.129 143.895 mo
206.129 143 206.221 142.281 206.406 141.736 cv
206.59 141.191 206.863 140.771 207.225 140.477 cv
207.588 140.18 208.045 140.033 208.596 140.033 cv
209 140.033 209.355 140.113 209.662 140.277 cv
209.969 140.441 210.221 140.676 210.42 140.984 cv
210.619 141.291 210.775 141.666 210.891 142.107 cv
211.004 142.549 211.061 143.145 211.061 143.895 cv
211.061 144.781 210.969 145.496 210.787 146.041 cv
210.604 146.586 210.332 147.006 209.969 147.305 cv
209.607 147.602 209.148 147.75 208.596 147.75 cv
207.865 147.75 207.293 147.488 206.877 146.967 cv
206.379 146.338 206.129 145.313 206.129 143.895 cv
206.129 143.895 li
cp
f
206.135 118.176 mo
207.063 118.051 206.135 118.176 207.063 118.051 cv
207.17 118.578 207.352 118.957 207.607 119.188 cv
207.863 119.42 208.176 119.537 208.543 119.537 cv
208.98 119.537 209.348 119.385 209.65 119.082 cv
209.951 118.779 210.102 118.406 210.102 117.959 cv
210.102 117.533 209.961 117.182 209.684 116.904 cv
209.404 116.627 209.051 116.49 208.621 116.49 cv
208.445 116.49 208.227 116.523 207.965 116.592 cv
208.068 115.777 207.965 116.592 208.068 115.777 cv
208.131 115.785 208.18 115.789 208.219 115.789 cv
208.613 115.789 208.969 115.686 209.285 115.479 cv
209.602 115.273 209.76 114.955 209.76 114.525 cv
209.76 114.186 209.645 113.902 209.414 113.68 cv
209.184 113.457 208.887 113.344 208.523 113.344 cv
208.162 113.344 207.861 113.459 207.619 113.686 cv
207.379 113.912 207.225 114.252 207.156 114.705 cv
206.229 114.541 207.156 114.705 206.229 114.541 cv
206.342 113.918 206.6 113.438 207.002 113.094 cv
207.404 112.752 207.904 112.582 208.502 112.582 cv
208.914 112.582 209.295 112.67 209.643 112.848 cv
209.988 113.023 210.254 113.266 210.438 113.572 cv
210.623 113.877 210.715 114.203 210.715 114.545 cv
210.715 114.873 210.627 115.17 210.451 115.438 cv
210.275 115.705 210.016 115.918 209.672 116.076 cv
210.119 116.18 210.467 116.395 210.715 116.719 cv
210.963 117.043 211.086 117.449 211.086 117.938 cv
211.086 118.598 210.846 119.158 210.363 119.615 cv
209.883 120.074 209.273 120.305 208.537 120.305 cv
207.875 120.305 207.324 120.107 206.885 119.711 cv
206.447 119.316 206.197 118.805 206.135 118.176 cv
206.135 118.176 li
cp
f
207.156 90.1748 mo
207.156 90.4946 207.225 90.8003 207.359 91.0923 cv
207.496 91.3848 207.686 91.6069 207.93 91.7603 cv
208.174 91.9131 208.43 91.9897 208.697 91.9897 cv
209.09 91.9897 209.428 91.8315 209.709 91.5151 cv
209.99 91.1992 210.131 90.7695 210.131 90.2266 cv
210.131 89.7041 209.992 89.2925 209.715 88.9917 cv
209.436 88.6909 209.084 88.5405 208.662 88.5405 cv
208.242 88.5405 207.887 88.6909 207.594 88.9917 cv
207.303 89.2925 207.156 89.687 207.156 90.1748 cv
207.156 90.1748 li
cp
210.947 86.9165 mo
210.023 86.9888 210.947 86.9165 210.023 86.9888 cv
209.941 86.6245 209.824 86.3599 209.672 86.1948 cv
209.422 85.9302 209.111 85.7979 208.744 85.7979 cv
208.449 85.7979 208.189 85.8804 207.965 86.0454 cv
207.674 86.2588 207.443 86.5698 207.275 86.9785 cv
207.105 87.3877 207.018 87.9702 207.012 88.7261 cv
207.234 88.3862 207.508 88.1333 207.832 87.9683 cv
208.154 87.8032 208.494 87.7212 208.848 87.7212 cv
209.467 87.7212 209.994 87.9487 210.428 88.4038 cv
210.863 88.8594 211.08 89.4478 211.08 90.1699 cv
211.08 90.644 210.979 91.085 210.773 91.4922 cv
210.568 91.8994 210.287 92.2114 209.93 92.4277 cv
209.572 92.644 209.168 92.7524 208.713 92.7524 cv
207.939 92.7524 207.309 92.4683 206.82 91.8994 cv
206.332 91.3306 206.088 90.3931 206.088 89.0869 cv
206.088 87.6265 206.357 86.5645 206.898 85.9014 cv
207.369 85.3237 208.004 85.0352 208.801 85.0352 cv
209.396 85.0352 209.883 85.2017 210.264 85.5352 cv
210.643 85.8687 210.871 86.3291 210.947 86.9165 cv
210.947 86.9165 li
cp
f
210.07 60.0898 mo
210.07 59.5571 209.928 59.1343 209.645 58.8218 cv
209.361 58.5088 209.02 58.3525 208.621 58.3525 cv
208.207 58.3525 207.85 58.521 207.543 58.8579 cv
207.236 59.1948 207.084 59.6313 207.084 60.1675 cv
207.084 60.6484 207.229 61.0396 207.52 61.3403 cv
207.811 61.6406 208.168 61.791 208.596 61.791 cv
209.025 61.791 209.377 61.6406 209.654 61.3403 cv
209.932 61.0396 210.07 60.6226 210.07 60.0898 cv
210.07 60.0898 li
cp
206.27 63.4253 mo
207.16 63.3428 206.27 63.4253 207.16 63.3428 cv
207.236 63.7622 207.381 64.0664 207.594 64.2554 cv
207.807 64.4443 208.08 64.5391 208.414 64.5391 cv
208.699 64.5391 208.949 64.4736 209.164 64.3433 cv
209.379 64.2124 209.557 64.0381 209.693 63.8198 cv
209.83 63.6016 209.945 63.3066 210.039 62.9355 cv
210.131 62.5645 210.178 62.1865 210.178 61.8013 cv
210.178 61.7603 210.176 61.6982 210.174 61.6157 cv
209.986 61.9116 209.734 62.1509 209.412 62.335 cv
209.09 62.519 208.742 62.6108 208.367 62.6108 cv
207.742 62.6108 207.213 62.3838 206.779 61.9302 cv
206.346 61.4766 206.129 60.8784 206.129 60.1362 cv
206.129 59.3696 206.355 58.7529 206.809 58.2856 cv
207.26 57.8184 207.826 57.5845 208.508 57.5845 cv
208.998 57.5845 209.449 57.7168 209.855 57.9814 cv
210.264 58.2461 210.572 58.623 210.783 59.1128 cv
210.996 59.6025 211.102 60.3115 211.102 61.2397 cv
211.102 62.2051 210.996 62.9741 210.787 63.5464 cv
210.576 64.1187 210.266 64.5542 209.85 64.8535 cv
209.436 65.1523 208.951 65.3018 208.395 65.3018 cv
207.803 65.3018 207.318 65.1377 206.945 64.8096 cv
206.57 64.4814 206.344 64.02 206.27 63.4253 cv
206.27 63.4253 li
cp
f
209.627 37.7222 mo
208.697 37.7222 209.627 37.7222 208.697 37.7222 cv
208.697 31.8091 208.697 37.7222 208.697 31.8091 cv
208.475 32.0225 208.182 32.2354 207.818 32.4487 cv
207.455 32.6616 207.131 32.8213 206.842 32.9282 cv
206.842 32.0308 206.842 32.9282 206.842 32.0308 cv
207.361 31.7871 207.814 31.4912 208.203 31.144 cv
208.592 30.7974 208.867 30.4604 209.027 30.1338 cv
209.627 30.1338 209.027 30.1338 209.627 30.1338 cv
209.627 37.7222 209.627 30.1338 209.627 37.7222 cv
209.627 37.7222 li
cp
f
216.865 36.8306 mo
216.865 37.7222 216.865 36.8306 216.865 37.7222 cv
211.867 37.7222 216.865 37.7222 211.867 37.7222 cv
211.861 37.499 211.896 37.2842 211.977 37.0781 cv
212.104 36.7378 212.307 36.4028 212.588 36.0728 cv
212.867 35.7427 213.273 35.3613 213.803 34.9282 cv
214.623 34.2544 215.18 33.7212 215.469 33.3276 cv
215.756 32.9341 215.9 32.562 215.9 32.2114 cv
215.9 31.8438 215.77 31.5337 215.506 31.2808 cv
215.244 31.0283 214.9 30.9019 214.479 30.9019 cv
214.031 30.9019 213.674 31.0361 213.404 31.3042 cv
213.137 31.5723 213 31.9434 212.998 32.4175 cv
212.043 32.3198 212.998 32.4175 212.043 32.3198 cv
212.109 31.6084 212.355 31.0659 212.781 30.6934 cv
213.207 30.3203 213.779 30.1338 214.498 30.1338 cv
215.225 30.1338 215.797 30.335 216.221 30.7368 cv
216.645 31.1392 216.855 31.6372 216.855 32.2319 cv
216.855 32.5347 216.793 32.8315 216.67 33.124 cv
216.545 33.416 216.34 33.7236 216.053 34.0469 cv
215.766 34.3696 215.289 34.813 214.621 35.3765 cv
214.064 35.8442 213.707 36.1611 213.549 36.3276 cv
213.391 36.4946 213.26 36.6621 213.158 36.8306 cv
216.865 36.8306 213.158 36.8306 216.865 36.8306 cv
216.865 36.8306 li
cp
f
202.906 190.428 mo
202.906 34.7471 li
202.906 34.7471 mo
200.314 34.7471 li
202.906 48.4722 mo
201.563 48.4722 li
202.906 62.1978 mo
200.314 62.1978 li
202.906 75.9229 mo
201.563 75.9229 li
202.906 89.6484 mo
200.314 89.6484 li
202.906 103.47 mo
201.563 103.47 li
202.906 117.195 mo
200.314 117.195 li
202.906 130.92 mo
201.563 130.92 li
202.906 144.645 mo
200.314 144.645 li
202.906 158.371 mo
201.563 158.371 li
202.906 172.096 mo
200.314 172.096 li
202.906 185.822 mo
201.563 185.822 li
31.5156 34.7471 mo
202.906 34.7471 li
202.906 34.7471 mo
202.906 37.3384 li
191.48 34.7471 mo
191.48 36.0908 li
180.055 34.7471 mo
180.055 36.0908 li
168.629 34.7471 mo
168.629 37.3384 li
157.203 34.7471 mo
157.203 36.0908 li
145.777 34.7471 mo
145.777 36.0908 li
134.35 34.7471 mo
134.35 37.3384 li
122.924 34.7471 mo
122.924 36.0908 li
111.498 34.7471 mo
111.498 36.0908 li
100.072 34.7471 mo
100.072 37.3384 li
88.646 34.7471 mo
88.646 36.0908 li
77.2197 34.7471 mo
77.2197 36.0908 li
65.7939 34.7471 mo
65.7939 37.3384 li
54.3677 34.7471 mo
54.3677 36.0908 li
42.9419 34.7471 mo
42.9419 36.0908 li
31.5156 34.7471 mo
31.5156 37.3384 li
@
gsave
31.5156 34.7471 mo
203.002 34.7471 li
203.002 190.525 li
31.5156 190.525 li
31.5156 34.7471 li
cp
eclp
.671996 lw
33.2441 181.119 mo
33.6279 181.119 li
34.1079 181.119 li
34.4922 181.119 li
34.9722 181.021 li
35.3564 181.021 li
35.8364 181.021 li
36.2202 180.926 li
36.7007 180.926 li
37.0845 180.926 li
37.4688 180.926 li
37.9487 180.83 li
38.333 180.83 li
38.813 180.83 li
39.1968 180.734 li
39.6772 180.734 li
40.061 180.734 li
40.541 180.639 li
40.9253 180.639 li
41.4053 180.639 li
41.7896 180.543 li
42.2695 180.543 li
42.6538 180.543 li
43.0376 180.447 li
43.5176 180.447 li
43.9019 180.447 li
44.3818 180.35 li
44.7661 180.35 li
45.2461 180.35 li
45.6304 180.254 li
46.1104 180.254 li
46.4941 180.254 li
46.9746 180.158 li
47.3584 180.158 li
47.8384 180.158 li
48.2227 180.063 li
48.7026 180.063 li
49.0869 180.063 li
49.4707 179.967 li
49.9512 179.967 li
50.335 179.967 li
50.8149 179.871 li
51.1992 179.871 li
51.6792 179.871 li
52.0635 179.775 li
52.5435 179.775 li
52.9272 179.775 li
53.4077 179.678 li
53.7915 179.678 li
54.2715 179.582 li
54.6558 179.582 li
55.04 179.582 li
55.52 179.486 li
55.9038 179.486 li
56.3843 179.486 li
56.7681 179.391 li
57.248 179.391 li
57.6323 179.295 li
58.1123 179.295 li
58.4966 179.295 li
58.9766 179.199 li
59.3608 179.199 li
59.8408 179.199 li
60.2246 179.104 li
60.6089 179.104 li
61.0889 179.006 li
61.4731 179.006 li
61.9531 179.006 li
62.3374 178.91 li
62.8174 178.91 li
63.2012 178.814 li
63.6816 178.814 li
64.0654 178.719 li
64.5454 178.719 li
64.9297 178.719 li
65.4097 178.623 li
65.7939 178.623 li
66.1777 178.527 li
66.6582 178.527 li
67.042 178.432 li
67.522 178.432 li
67.9063 178.432 li
68.3862 178.334 li
68.7705 178.334 li
69.2505 178.238 li
69.6343 178.238 li
70.1147 178.143 li
70.4985 178.143 li
70.979 178.047 li
71.3628 178.047 li
71.7471 177.951 li
72.2271 177.951 li
72.6108 177.951 li
73.0913 177.855 li
73.4751 177.855 li
73.9556 177.76 li
74.3394 177.76 li
74.8193 177.662 li
75.2036 177.662 li
75.6836 177.566 li
76.0679 177.566 li
76.5479 177.471 li
76.9316 177.471 li
77.3159 177.375 li
77.7959 177.375 li
78.1802 177.279 li
78.6602 177.279 li
79.0444 177.184 li
79.5244 177.184 li
79.9082 177.088 li
80.3887 176.99 li
80.7725 176.99 li
81.2524 176.895 li
81.6367 176.895 li
82.1167 176.799 li
82.501 176.799 li
82.981 176.703 li
83.3647 176.703 li
83.749 176.607 li
84.229 176.607 li
84.6133 176.512 li
85.0933 176.416 li
85.4775 176.416 li
85.9575 176.318 li
86.3413 176.318 li
86.8218 176.223 li
87.2056 176.223 li
87.686 176.127 li
88.0698 176.031 li
88.5498 176.031 li
88.9341 175.936 li
89.3179 175.936 li
89.7983 175.84 li
90.1821 175.744 li
90.6626 175.744 li
91.0464 175.646 li
91.5264 175.551 li
91.9106 175.551 li
92.3906 175.455 li
92.7749 175.359 li
93.2549 175.359 li
93.6387 175.264 li
94.1191 175.264 li
94.5029 175.168 li
94.8872 175.072 li
95.3672 174.977 li
95.7515 174.977 li
96.2314 174.879 li
96.6152 174.783 li
97.0957 174.783 li
97.4795 174.688 li
97.9595 174.592 li
98.3438 174.592 li
98.8237 174.496 li
99.208 174.4 li
99.688 174.305 li
100.072 174.305 li
100.456 174.207 li
100.936 174.111 li
101.32 174.111 li
101.8 174.016 li
102.185 173.92 li
102.665 173.824 li
103.048 173.729 li
103.529 173.729 li
103.913 173.631 li
104.393 173.535 li
104.777 173.439 li
105.257 173.344 li
105.641 173.344 li
106.025 173.248 li
106.505 173.152 li
106.889 173.057 li
107.37 172.961 li
107.753 172.961 li
108.233 172.863 li
108.618 172.768 li
109.098 172.672 li
109.482 172.576 li
109.962 172.48 li
110.346 172.385 li
110.826 172.289 li
111.21 172.191 li
111.594 172.191 li
112.074 172.096 li
112.458 172 li
112.938 171.904 li
113.322 171.809 li
113.803 171.713 li
114.187 171.617 li
114.667 171.52 li
115.051 171.424 li
115.531 171.328 li
115.915 171.232 li
116.395 171.137 li
116.779 171.041 li
117.259 170.945 li
117.643 170.848 li
118.027 170.752 li
118.508 170.656 li
118.891 170.561 li
119.371 170.465 li
119.756 170.369 li
120.236 170.273 li
120.619 170.08 li
121.1 169.984 li
121.484 169.889 li
121.965 169.793 li
122.348 169.697 li
122.828 169.602 li
123.213 169.504 li
123.596 169.313 li
124.076 169.217 li
124.461 169.121 li
124.941 169.025 li
125.324 168.93 li
125.805 168.736 li
126.189 168.641 li
126.668 168.545 li
127.053 168.449 li
127.533 168.258 li
127.918 168.16 li
128.396 168.064 li
128.781 167.873 li
129.166 167.777 li
129.645 167.682 li
130.029 167.488 li
130.51 167.393 li
130.895 167.201 li
131.373 167.105 li
131.758 167.01 li
132.238 166.816 li
132.621 166.721 li
133.102 166.529 li
133.486 166.434 li
133.967 166.242 li
134.35 166.145 li
134.734 165.953 li
135.215 165.857 li
135.598 165.666 li
136.078 165.473 li
136.463 165.377 li
136.943 165.186 li
137.326 165.09 li
137.807 164.898 li
138.191 164.705 li
138.672 164.514 li
139.055 164.418 li
139.535 164.227 li
139.92 164.033 li
140.303 163.842 li
140.783 163.746 li
141.168 163.555 li
141.648 163.361 li
142.031 163.17 li
142.512 162.979 li
142.896 162.785 li
143.375 162.594 li
143.76 162.402 li
144.24 162.211 li
144.625 162.018 li
145.104 161.826 li
145.488 161.635 li
145.873 161.441 li
146.352 161.25 li
146.736 161.059 li
147.217 160.77 li
147.602 160.578 li
148.08 160.387 li
148.465 160.195 li
148.945 159.906 li
149.328 159.715 li
149.809 159.523 li
150.193 159.234 li
150.674 159.043 li
151.057 158.754 li
151.537 158.563 li
151.922 158.275 li
152.305 158.082 li
152.785 157.795 li
153.17 157.508 li
153.65 157.314 li
154.033 157.027 li
154.514 156.738 li
154.898 156.451 li
155.379 156.164 li
155.762 155.875 li
156.242 155.684 li
156.627 155.395 li
157.105 155.012 li
157.49 154.723 li
157.875 154.436 li
158.355 154.148 li
158.738 153.859 li
159.219 153.477 li
159.604 153.188 li
160.082 152.9 li
160.467 152.516 li
160.947 152.229 li
161.332 151.844 li
161.811 151.461 li
162.195 151.172 li
162.676 150.789 li
163.059 150.404 li
163.443 150.02 li
163.924 149.637 li
164.309 149.252 li
164.787 148.869 li
165.172 148.484 li
165.652 148.004 li
166.035 147.621 li
166.516 147.141 li
166.9 146.758 li
167.381 146.277 li
167.764 145.797 li
168.244 145.414 li
168.629 144.934 li
169.012 144.453 li
169.492 143.975 li
169.877 143.398 li
170.357 142.918 li
170.74 142.438 li
171.221 141.861 li
171.605 141.287 li
172.086 140.807 li
172.469 140.23 li
172.949 139.559 li
173.334 138.982 li
173.814 138.406 li
174.197 137.734 li
174.582 137.158 li
175.063 136.486 li
175.445 135.814 li
175.926 135.143 li
176.311 134.471 li
176.789 133.703 li
177.174 132.936 li
177.654 132.264 li
178.039 131.4 li
178.518 130.633 li
178.902 129.865 li
179.383 129 li
179.766 128.137 li
180.15 127.273 li
180.631 126.313 li
181.016 125.449 li
181.494 124.49 li
181.879 123.434 li
182.359 122.475 li
182.742 121.418 li
183.223 120.361 li
183.607 119.211 li
184.088 118.059 li
184.471 116.906 li
184.951 115.658 li
185.336 114.412 li
185.816 113.068 li
186.199 111.724 li
186.584 110.38 li
187.064 108.94 li
187.447 107.405 li
187.928 105.869 li
188.313 104.237 li
188.793 102.606 li
189.176 100.878 li
189.656 99.0542 li
190.041 97.1348 li
190.521 95.2153 li
190.904 93.1997 li
191.385 91.0879 li
191.77 88.8804 li
192.152 86.5767 li
192.633 84.1772 li
193.018 81.6816 li
193.496 78.9941 li
193.881 76.2109 li
194.361 73.3315 li
194.746 70.2603 li
195.225 66.9966 li
195.609 63.6372 li
196.09 60.0859 li
196.473 56.2466 li
196.953 52.3115 li
197.338 47.9922 li
197.723 43.481 li
198.201 38.6821 li
198.586 33.5952 li
199.066 28.0283 li
199.449 22.1733 li
199.93 15.8384 li
200.314 9.12012 li
200.795 1.72949 li
201.178 -6.23682 li
201.658 -14.8755 li
202.043 -24.2817 li
202.523 -34.6475 li
202.906 -45.9731 li
.374639 3.0518e-05 .0916457 3.0518e-05 cmyk
@
33.916 182.846 mo
114.187 117.387 li
121.291 107.213 mo
124.941 105.965 li
130.414 103.277 mo
133.678 100.782 li
139.631 94.0635 mo
140.111 93.7754 li
147.793 88.2085 mo
180.535 56.6309 li
184.951 52.3115 mo
191.385 45.7847 li
195.801 41.4658 mo
200.699 36.8584 li
.247196 .19559 .200748 3.0518e-05 cmyk
@
202.906 31.8677 mo
205.307 36.1865 li
200.41 36.1865 li
202.906 31.8677 li
cp
ef
.287998 lw
202.906 31.8677 mo
205.307 36.1865 li
200.41 36.1865 li
202.906 31.8677 li
cp
.75021 .679683 .670222 .90164 cmyk
@
grestore
193.594 40.6978 mo
195.994 45.0171 li
191.096 45.0171 li
193.594 40.6978 li
cp
.247196 .19559 .200748 3.0518e-05 cmyk
ef
.287998 lw
193.594 40.6978 mo
195.994 45.0171 li
191.096 45.0171 li
193.594 40.6978 li
cp
.75021 .679683 .670222 .90164 cmyk
@
182.742 51.6396 mo
185.143 55.959 li
180.246 55.959 li
182.742 51.6396 li
cp
.247196 .19559 .200748 3.0518e-05 cmyk
ef
182.742 51.6396 mo
185.143 55.959 li
180.246 55.959 li
182.742 51.6396 li
cp
.75021 .679683 .670222 .90164 cmyk
@
145.584 87.4404 mo
147.984 91.7598 li
143.088 91.7598 li
145.584 87.4404 li
cp
.247196 .19559 .200748 3.0518e-05 cmyk
ef
145.584 87.4404 mo
147.984 91.7598 li
143.088 91.7598 li
145.584 87.4404 li
cp
.75021 .679683 .670222 .90164 cmyk
@
142.992 89.8403 mo
145.393 94.1592 li
140.496 94.1592 li
142.992 89.8403 li
cp
.247196 .19559 .200748 3.0518e-05 cmyk
ef
142.992 89.8403 mo
145.393 94.1592 li
140.496 94.1592 li
142.992 89.8403 li
cp
.75021 .679683 .670222 .90164 cmyk
@
136.75 92.2397 mo
139.15 96.5591 li
134.254 96.5591 li
136.75 92.2397 li
cp
.247196 .19559 .200748 3.0518e-05 cmyk
ef
136.75 92.2397 mo
139.15 96.5591 li
134.254 96.5591 li
136.75 92.2397 li
cp
.75021 .679683 .670222 .90164 cmyk
@
136.174 96.0791 mo
138.574 100.398 li
133.678 100.398 li
136.174 96.0791 li
cp
.247196 .19559 .200748 3.0518e-05 cmyk
ef
136.174 96.0791 mo
138.574 100.398 li
133.678 100.398 li
136.174 96.0791 li
cp
.75021 .679683 .670222 .90164 cmyk
@
127.918 102.222 mo
130.318 106.541 li
125.42 106.541 li
127.918 102.222 li
cp
.247196 .19559 .200748 3.0518e-05 cmyk
ef
127.918 102.222 mo
130.318 106.541 li
125.42 106.541 li
127.918 102.222 li
cp
.75021 .679683 .670222 .90164 cmyk
@
118.315 105.197 mo
120.717 109.516 li
115.819 109.516 li
118.315 105.197 li
cp
.247196 .19559 .200748 3.0518e-05 cmyk
ef
118.315 105.197 mo
120.717 109.516 li
115.819 109.516 li
118.315 105.197 li
cp
.75021 .679683 .670222 .90164 cmyk
@
122.156 107.597 mo
124.557 111.916 li
119.66 111.916 li
122.156 107.597 li
cp
.247196 .19559 .200748 3.0518e-05 cmyk
ef
122.156 107.597 mo
124.557 111.916 li
119.66 111.916 li
122.156 107.597 li
cp
.75021 .679683 .670222 .90164 cmyk
@
118.891 110.476 mo
121.291 114.795 li
116.395 114.795 li
118.891 110.476 li
cp
.247196 .19559 .200748 3.0518e-05 cmyk
ef
118.891 110.476 mo
121.291 114.795 li
116.395 114.795 li
118.891 110.476 li
cp
.75021 .679683 .670222 .90164 cmyk
@
gsave
31.5156 34.7471 mo
203.002 34.7471 li
203.002 190.525 li
31.5156 190.525 li
31.5156 34.7471 li
cp
eclp
116.587 112.588 mo
118.988 116.906 li
114.091 116.906 li
116.587 112.588 li
cp
.247196 .19559 .200748 3.0518e-05 cmyk
ef
116.587 112.588 mo
118.988 116.906 li
114.091 116.906 li
116.587 112.588 li
cp
.75021 .679683 .670222 .90164 cmyk
@
31.5156 181.887 mo
33.916 186.205 li
29.019 186.205 li
31.5156 181.887 li
cp
.247196 .19559 .200748 3.0518e-05 cmyk
ef
31.5156 181.887 mo
33.916 186.205 li
29.019 186.205 li
31.5156 181.887 li
cp
.75021 .679683 .670222 .90164 cmyk
@
.671996 lw
34.6841 179.486 mo
37.9487 179.391 li
41.1172 179.199 li
44.2861 179.104 li
47.5503 178.91 li
50.7192 178.814 li
53.8877 178.623 li
57.1523 178.432 li
60.3208 178.334 li
63.4893 178.143 li
66.7539 177.951 li
69.9224 177.76 li
73.0913 177.566 li
76.356 177.375 li
79.5244 177.088 li
82.6929 176.895 li
85.9575 176.607 li
89.126 176.416 li
92.2944 176.127 li
95.5591 175.84 li
98.728 175.551 li
101.896 175.168 li
105.161 174.879 li
108.33 174.496 li
111.498 174.111 li
114.763 173.729 li
117.932 173.248 li
121.1 172.768 li
124.365 172.289 li
127.533 171.809 li
130.701 171.137 li
133.967 170.561 li
137.135 169.889 li
140.303 169.121 li
143.568 168.258 li
146.736 167.393 li
149.904 166.434 li
153.17 165.281 li
156.338 164.033 li
159.508 162.689 li
162.771 161.059 li
165.939 159.234 li
169.109 157.219 li
172.373 154.82 li
175.541 151.939 li
178.711 148.484 li
181.975 144.262 li
185.143 139.078 li
188.313 132.359 li
191.576 123.434 li
194.746 111.052 li
197.914 92.5278 li
199.547 79.2822 li
201.178 61.8135 li
202.715 37.5303 li
202.906 34.5552 li
0 0 0 1 cmyk
@
205.023 34.7759 mo
205.023 35.9414 204.078 36.8872 202.912 36.8872 cv
201.746 36.8872 200.799 35.9414 200.799 34.7759 cv
200.799 33.6104 201.746 32.6641 202.912 32.6641 cv
204.078 32.6641 205.023 33.6104 205.023 34.7759 cv
205.023 34.7759 li
cp
.374639 3.0518e-05 .0916457 3.0518e-05 cmyk
ef
.287998 lw
205.023 34.7759 mo
205.023 35.9414 204.078 36.8872 202.912 36.8872 cv
201.746 36.8872 200.799 35.9414 200.799 34.7759 cv
200.799 33.6104 201.746 32.6641 202.912 32.6641 cv
204.078 32.6641 205.023 33.6104 205.023 34.7759 cv
205.023 34.7759 li
cp
0 0 0 1 cmyk
@
grestore
201.783 47.7358 mo
201.783 48.9014 200.838 49.8472 199.672 49.8472 cv
198.506 49.8472 197.559 48.9014 197.559 47.7358 cv
197.559 46.5703 198.506 45.624 199.672 45.624 cv
200.838 45.624 201.783 46.5703 201.783 47.7358 cv
201.783 47.7358 li
cp
.374639 3.0518e-05 .0916457 3.0518e-05 cmyk
ef
201.783 47.7358 mo
201.783 48.9014 200.838 49.8472 199.672 49.8472 cv
198.506 49.8472 197.559 48.9014 197.559 47.7358 cv
197.559 46.5703 198.506 45.624 199.672 45.624 cv
200.838 45.624 201.783 46.5703 201.783 47.7358 cv
201.783 47.7358 li
cp
0 0 0 1 cmyk
@
gsave
31.5156 34.7471 mo
203.002 34.7471 li
203.002 190.525 li
31.5156 190.525 li
31.5156 34.7471 li
cp
eclp
200.225 53.376 mo
200.225 54.5415 199.277 55.4873 198.111 55.4873 cv
196.945 55.4873 196 54.5415 196 53.376 cv
196 52.2104 196.945 51.2642 198.111 51.2642 cv
199.277 51.2642 200.225 52.2104 200.225 53.376 cv
200.225 53.376 li
cp
.374639 3.0518e-05 .0916457 3.0518e-05 cmyk
ef
200.225 53.376 mo
200.225 54.5415 199.277 55.4873 198.111 55.4873 cv
196.945 55.4873 196 54.5415 196 53.376 cv
196 52.2104 196.945 51.2642 198.111 51.2642 cv
199.277 51.2642 200.225 52.2104 200.225 53.376 cv
200.225 53.376 li
cp
0 0 0 1 cmyk
@
203.225 58.6558 mo
203.225 59.8213 202.277 60.7676 201.111 60.7676 cv
199.945 60.7676 199 59.8213 199 58.6558 cv
199 57.4902 199.945 56.5444 201.111 56.5444 cv
202.277 56.5444 203.225 57.4902 203.225 58.6558 cv
203.225 58.6558 li
cp
.374639 3.0518e-05 .0916457 3.0518e-05 cmyk
ef
203.225 58.6558 mo
203.225 59.8213 202.277 60.7676 201.111 60.7676 cv
199.945 60.7676 199 59.8213 199 58.6558 cv
199 57.4902 199.945 56.5444 201.111 56.5444 cv
202.277 56.5444 203.225 57.4902 203.225 58.6558 cv
203.225 58.6558 li
cp
0 0 0 1 cmyk
@
grestore
190.744 83.6157 mo
190.744 84.7813 189.797 85.7275 188.631 85.7275 cv
187.465 85.7275 186.52 84.7813 186.52 83.6157 cv
186.52 82.4502 187.465 81.5044 188.631 81.5044 cv
189.797 81.5044 190.744 82.4502 190.744 83.6157 cv
190.744 83.6157 li
cp
.374639 3.0518e-05 .0916457 3.0518e-05 cmyk
ef
190.744 83.6157 mo
190.744 84.7813 189.797 85.7275 188.631 85.7275 cv
187.465 85.7275 186.52 84.7813 186.52 83.6157 cv
186.52 82.4502 187.465 81.5044 188.631 81.5044 cv
189.797 81.5044 190.744 82.4502 190.744 83.6157 cv
190.744 83.6157 li
cp
0 0 0 1 cmyk
@
186.664 96.5757 mo
186.664 97.7412 185.717 98.6875 184.551 98.6875 cv
183.385 98.6875 182.439 97.7412 182.439 96.5757 cv
182.439 95.4102 183.385 94.4644 184.551 94.4644 cv
185.717 94.4644 186.664 95.4102 186.664 96.5757 cv
186.664 96.5757 li
cp
.374639 3.0518e-05 .0916457 3.0518e-05 cmyk
ef
186.664 96.5757 mo
186.664 97.7412 185.717 98.6875 184.551 98.6875 cv
183.385 98.6875 182.439 97.7412 182.439 96.5757 cv
182.439 95.4102 183.385 94.4644 184.551 94.4644 cv
185.717 94.4644 186.664 95.4102 186.664 96.5757 cv
186.664 96.5757 li
cp
0 0 0 1 cmyk
@
186.545 101.016 mo
186.545 102.182 185.598 103.127 184.432 103.127 cv
183.266 103.127 182.318 102.182 182.318 101.016 cv
182.318 99.8501 183.266 98.9043 184.432 98.9043 cv
185.598 98.9043 186.545 99.8501 186.545 101.016 cv
186.545 101.016 li
cp
.374639 3.0518e-05 .0916457 3.0518e-05 cmyk
ef
186.545 101.016 mo
186.545 102.182 185.598 103.127 184.432 103.127 cv
183.266 103.127 182.318 102.182 182.318 101.016 cv
182.318 99.8501 183.266 98.9043 184.432 98.9043 cv
185.598 98.9043 186.545 99.8501 186.545 101.016 cv
186.545 101.016 li
cp
0 0 0 1 cmyk
@
177.305 126.455 mo
177.305 127.621 176.357 128.568 175.191 128.568 cv
174.025 128.568 173.08 127.621 173.08 126.455 cv
173.08 125.291 174.025 124.344 175.191 124.344 cv
176.357 124.344 177.305 125.291 177.305 126.455 cv
177.305 126.455 li
cp
.374639 3.0518e-05 .0916457 3.0518e-05 cmyk
ef
177.305 126.455 mo
177.305 127.621 176.357 128.568 175.191 128.568 cv
174.025 128.568 173.08 127.621 173.08 126.455 cv
173.08 125.291 174.025 124.344 175.191 124.344 cv
176.357 124.344 177.305 125.291 177.305 126.455 cv
177.305 126.455 li
cp
0 0 0 1 cmyk
@
172.023 137.256 mo
172.023 138.422 171.078 139.367 169.912 139.367 cv
168.746 139.367 167.799 138.422 167.799 137.256 cv
167.799 136.09 168.746 135.145 169.912 135.145 cv
171.078 135.145 172.023 136.09 172.023 137.256 cv
172.023 137.256 li
cp
.374639 3.0518e-05 .0916457 3.0518e-05 cmyk
ef
172.023 137.256 mo
172.023 138.422 171.078 139.367 169.912 139.367 cv
168.746 139.367 167.799 138.422 167.799 137.256 cv
167.799 136.09 168.746 135.145 169.912 135.145 cv
171.078 135.145 172.023 136.09 172.023 137.256 cv
172.023 137.256 li
cp
0 0 0 1 cmyk
@
166.023 145.775 mo
166.023 146.941 165.078 147.887 163.912 147.887 cv
162.746 147.887 161.799 146.941 161.799 145.775 cv
161.799 144.609 162.746 143.664 163.912 143.664 cv
165.078 143.664 166.023 144.609 166.023 145.775 cv
166.023 145.775 li
cp
.374639 3.0518e-05 .0916457 3.0518e-05 cmyk
ef
166.023 145.775 mo
166.023 146.941 165.078 147.887 163.912 147.887 cv
162.746 147.887 161.799 146.941 161.799 145.775 cv
161.799 144.609 162.746 143.664 163.912 143.664 cv
165.078 143.664 166.023 144.609 166.023 145.775 cv
166.023 145.775 li
cp
0 0 0 1 cmyk
@
160.385 151.896 mo
160.385 153.061 159.438 154.008 158.271 154.008 cv
157.105 154.008 156.16 153.061 156.16 151.896 cv
156.16 150.73 157.105 149.785 158.271 149.785 cv
159.438 149.785 160.385 150.73 160.385 151.896 cv
160.385 151.896 li
cp
.374639 3.0518e-05 .0916457 3.0518e-05 cmyk
ef
160.385 151.896 mo
160.385 153.061 159.438 154.008 158.271 154.008 cv
157.105 154.008 156.16 153.061 156.16 151.896 cv
156.16 150.73 157.105 149.785 158.271 149.785 cv
159.438 149.785 160.385 150.73 160.385 151.896 cv
160.385 151.896 li
cp
0 0 0 1 cmyk
@
156.424 154.775 mo
156.424 155.941 155.479 156.887 154.313 156.887 cv
153.146 156.887 152.199 155.941 152.199 154.775 cv
152.199 153.609 153.146 152.664 154.313 152.664 cv
155.479 152.664 156.424 153.609 156.424 154.775 cv
156.424 154.775 li
cp
.374639 3.0518e-05 .0916457 3.0518e-05 cmyk
ef
156.424 154.775 mo
156.424 155.941 155.479 156.887 154.313 156.887 cv
153.146 156.887 152.199 155.941 152.199 154.775 cv
152.199 153.609 153.146 152.664 154.313 152.664 cv
155.479 152.664 156.424 153.609 156.424 154.775 cv
156.424 154.775 li
cp
0 0 0 1 cmyk
@
151.504 159.096 mo
151.504 160.262 150.559 161.207 149.393 161.207 cv
148.227 161.207 147.279 160.262 147.279 159.096 cv
147.279 157.93 148.227 156.984 149.393 156.984 cv
150.559 156.984 151.504 157.93 151.504 159.096 cv
151.504 159.096 li
cp
.374639 3.0518e-05 .0916457 3.0518e-05 cmyk
ef
151.504 159.096 mo
151.504 160.262 150.559 161.207 149.393 161.207 cv
148.227 161.207 147.279 160.262 147.279 159.096 cv
147.279 157.93 148.227 156.984 149.393 156.984 cv
150.559 156.984 151.504 157.93 151.504 159.096 cv
151.504 159.096 li
cp
0 0 0 1 cmyk
@
140.824 163.656 mo
140.824 164.822 139.877 165.768 138.711 165.768 cv
137.545 165.768 136.6 164.822 136.6 163.656 cv
136.6 162.49 137.545 161.545 138.711 161.545 cv
139.877 161.545 140.824 162.49 140.824 163.656 cv
140.824 163.656 li
cp
.374639 3.0518e-05 .0916457 3.0518e-05 cmyk
ef
140.824 163.656 mo
140.824 164.822 139.877 165.768 138.711 165.768 cv
137.545 165.768 136.6 164.822 136.6 163.656 cv
136.6 162.49 137.545 161.545 138.711 161.545 cv
139.877 161.545 140.824 162.49 140.824 163.656 cv
140.824 163.656 li
cp
0 0 0 1 cmyk
@
113.104 169.775 mo
113.104 170.941 112.158 171.887 110.992 171.887 cv
109.826 171.887 108.879 170.941 108.879 169.775 cv
108.879 168.609 109.826 167.664 110.992 167.664 cv
112.158 167.664 113.104 168.609 113.104 169.775 cv
113.104 169.775 li
cp
.374639 3.0518e-05 .0916457 3.0518e-05 cmyk
ef
113.104 169.775 mo
113.104 170.941 112.158 171.887 110.992 171.887 cv
109.826 171.887 108.879 170.941 108.879 169.775 cv
108.879 168.609 109.826 167.664 110.992 167.664 cv
112.158 167.664 113.104 168.609 113.104 169.775 cv
113.104 169.775 li
cp
0 0 0 1 cmyk
@
110.344 170.256 mo
110.344 171.422 109.397 172.367 108.231 172.367 cv
107.065 172.367 106.119 171.422 106.119 170.256 cv
106.119 169.09 107.065 168.145 108.231 168.145 cv
109.397 168.145 110.344 169.09 110.344 170.256 cv
110.344 170.256 li
cp
.374639 3.0518e-05 .0916457 3.0518e-05 cmyk
ef
110.344 170.256 mo
110.344 171.422 109.397 172.367 108.231 172.367 cv
107.065 172.367 106.119 171.422 106.119 170.256 cv
106.119 169.09 107.065 168.145 108.231 168.145 cv
109.397 168.145 110.344 169.09 110.344 170.256 cv
110.344 170.256 li
cp
0 0 0 1 cmyk
@
107.704 170.375 mo
107.704 171.541 106.758 172.488 105.592 172.488 cv
104.426 172.488 103.479 171.541 103.479 170.375 cv
103.479 169.211 104.426 168.264 105.592 168.264 cv
106.758 168.264 107.704 169.211 107.704 170.375 cv
107.704 170.375 li
cp
.374639 3.0518e-05 .0916457 3.0518e-05 cmyk
ef
107.704 170.375 mo
107.704 171.541 106.758 172.488 105.592 172.488 cv
104.426 172.488 103.479 171.541 103.479 170.375 cv
103.479 169.211 104.426 168.264 105.592 168.264 cv
106.758 168.264 107.704 169.211 107.704 170.375 cv
107.704 170.375 li
cp
0 0 0 1 cmyk
@
105.304 170.977 mo
105.304 172.141 104.358 173.088 103.191 173.088 cv
102.025 173.088 101.079 172.141 101.079 170.977 cv
101.079 169.811 102.025 168.863 103.191 168.863 cv
104.358 168.863 105.304 169.811 105.304 170.977 cv
105.304 170.977 li
cp
.374639 3.0518e-05 .0916457 3.0518e-05 cmyk
ef
105.304 170.977 mo
105.304 172.141 104.358 173.088 103.191 173.088 cv
102.025 173.088 101.079 172.141 101.079 170.977 cv
101.079 169.811 102.025 168.863 103.191 168.863 cv
104.358 168.863 105.304 169.811 105.304 170.977 cv
105.304 170.977 li
cp
0 0 0 1 cmyk
@
gsave
31.5156 34.7471 mo
203.002 34.7471 li
203.002 190.525 li
31.5156 190.525 li
31.5156 34.7471 li
cp
eclp
103.384 171.455 mo
103.384 172.621 102.438 173.568 101.271 173.568 cv
100.105 173.568 99.1592 172.621 99.1592 171.455 cv
99.1592 170.291 100.105 169.344 101.271 169.344 cv
102.438 169.344 103.384 170.291 103.384 171.455 cv
103.384 171.455 li
cp
.374639 3.0518e-05 .0916457 3.0518e-05 cmyk
ef
103.384 171.455 mo
103.384 172.621 102.438 173.568 101.271 173.568 cv
100.105 173.568 99.1592 172.621 99.1592 171.455 cv
99.1592 170.291 100.105 169.344 101.271 169.344 cv
102.438 169.344 103.384 170.291 103.384 171.455 cv
103.384 171.455 li
cp
0 0 0 1 cmyk
@
33.6641 184.775 mo
33.6641 185.941 32.7178 186.887 31.5518 186.887 cv
30.3857 186.887 29.439 185.941 29.439 184.775 cv
29.439 183.609 30.3857 182.664 31.5518 182.664 cv
32.7178 182.664 33.6641 183.609 33.6641 184.775 cv
33.6641 184.775 li
cp
.374639 3.0518e-05 .0916457 3.0518e-05 cmyk
ef
33.6641 184.775 mo
33.6641 185.941 32.7178 186.887 31.5518 186.887 cv
30.3857 186.887 29.439 185.941 29.439 184.775 cv
29.439 183.609 30.3857 182.664 31.5518 182.664 cv
32.7178 182.664 33.6641 183.609 33.6641 184.775 cv
33.6641 184.775 li
cp
0 0 0 1 cmyk
@
grestore
55.9038 180.639 mo
55.9038 183.709 li
58.9766 183.709 li
58.9766 180.639 li
55.9038 180.639 li
cp
1 .976715 .0217899 .0373541 cmyk
f
55.9038 180.639 mo
58.9766 180.639 li
58.9766 183.709 li
55.9038 183.709 li
55.9038 180.639 li
cp
.75021 .679683 .670222 .90164 cmyk
@
70.4985 178.334 mo
70.4985 181.406 li
73.5713 181.406 li
73.5713 178.334 li
70.4985 178.334 li
cp
1 .976715 .0217899 .0373541 cmyk
f
70.4985 178.334 mo
73.5713 178.334 li
73.5713 181.406 li
70.4985 181.406 li
70.4985 178.334 li
cp
.75021 .679683 .670222 .90164 cmyk
@
72.707 177.76 mo
72.707 180.83 li
75.7798 180.83 li
75.7798 177.76 li
72.707 177.76 li
cp
1 .976715 .0217899 .0373541 cmyk
f
72.707 177.76 mo
75.7798 177.76 li
75.7798 180.83 li
72.707 180.83 li
72.707 177.76 li
cp
.75021 .679683 .670222 .90164 cmyk
@
80.5806 176.318 mo
80.5806 179.391 li
83.6528 179.391 li
83.6528 176.318 li
80.5806 176.318 li
cp
1 .976715 .0217899 .0373541 cmyk
f
80.5806 176.318 mo
83.6528 176.318 li
83.6528 179.391 li
80.5806 179.391 li
80.5806 176.318 li
cp
.75021 .679683 .670222 .90164 cmyk
@
83.9409 175.551 mo
83.9409 178.623 li
87.0137 178.623 li
87.0137 175.551 li
83.9409 175.551 li
cp
1 .976715 .0217899 .0373541 cmyk
f
83.9409 175.551 mo
87.0137 175.551 li
87.0137 178.623 li
83.9409 178.623 li
83.9409 175.551 li
cp
.75021 .679683 .670222 .90164 cmyk
@
90.6626 174.4 mo
90.6626 177.471 li
93.7349 177.471 li
93.7349 174.4 li
90.6626 174.4 li
cp
1 .976715 .0217899 .0373541 cmyk
f
90.6626 174.4 mo
93.7349 174.4 li
93.7349 177.471 li
90.6626 177.471 li
90.6626 174.4 li
cp
.75021 .679683 .670222 .90164 cmyk
@
96.9033 172.961 mo
96.9033 176.031 li
99.9761 176.031 li
99.9761 172.961 li
96.9033 172.961 li
cp
1 .976715 .0217899 .0373541 cmyk
f
96.9033 172.961 mo
99.9761 172.961 li
99.9761 176.031 li
96.9033 176.031 li
96.9033 172.961 li
cp
.75021 .679683 .670222 .90164 cmyk
@
103.145 171.328 mo
103.145 174.4 li
106.217 174.4 li
106.217 171.328 li
103.145 171.328 li
cp
1 .976715 .0217899 .0373541 cmyk
f
103.145 171.328 mo
106.217 171.328 li
106.217 174.4 li
103.145 174.4 li
103.145 171.328 li
cp
.75021 .679683 .670222 .90164 cmyk
@
109.482 169.602 mo
109.482 172.672 li
112.554 172.672 li
112.554 169.602 li
109.482 169.602 li
cp
1 .976715 .0217899 .0373541 cmyk
f
109.482 169.602 mo
112.554 169.602 li
112.554 172.672 li
109.482 172.672 li
109.482 169.602 li
cp
.75021 .679683 .670222 .90164 cmyk
@
116.299 167.682 mo
116.299 170.752 li
119.371 170.752 li
119.371 167.682 li
116.299 167.682 li
cp
1 .976715 .0217899 .0373541 cmyk
f
116.299 167.682 mo
119.371 167.682 li
119.371 170.752 li
116.299 170.752 li
116.299 167.682 li
cp
.75021 .679683 .670222 .90164 cmyk
@
120.332 166.625 mo
120.332 169.697 li
123.404 169.697 li
123.404 166.625 li
120.332 166.625 li
cp
1 .976715 .0217899 .0373541 cmyk
f
120.332 166.625 mo
123.404 166.625 li
123.404 169.697 li
120.332 169.697 li
120.332 166.625 li
cp
.75021 .679683 .670222 .90164 cmyk
@
126.957 164.514 mo
126.957 167.586 li
130.029 167.586 li
130.029 164.514 li
126.957 164.514 li
cp
1 .976715 .0217899 .0373541 cmyk
f
126.957 164.514 mo
130.029 164.514 li
130.029 167.586 li
126.957 167.586 li
126.957 164.514 li
cp
.75021 .679683 .670222 .90164 cmyk
@
132.045 162.979 mo
132.045 166.049 li
135.119 166.049 li
135.119 162.979 li
132.045 162.979 li
cp
1 .976715 .0217899 .0373541 cmyk
f
132.045 162.979 mo
135.119 162.979 li
135.119 166.049 li
132.045 166.049 li
132.045 162.979 li
cp
.75021 .679683 .670222 .90164 cmyk
@
134.734 162.018 mo
134.734 165.09 li
137.807 165.09 li
137.807 162.018 li
134.734 162.018 li
cp
1 .976715 .0217899 .0373541 cmyk
f
134.734 162.018 mo
137.807 162.018 li
137.807 165.09 li
134.734 165.09 li
134.734 162.018 li
cp
.75021 .679683 .670222 .90164 cmyk
@
140.4 159.811 mo
140.4 162.883 li
143.473 162.883 li
143.473 159.811 li
140.4 159.811 li
cp
1 .976715 .0217899 .0373541 cmyk
f
140.4 159.811 mo
143.473 159.811 li
143.473 162.883 li
140.4 162.883 li
140.4 159.811 li
cp
.75021 .679683 .670222 .90164 cmyk
@
147.697 156.643 mo
147.697 159.715 li
150.77 159.715 li
150.77 156.643 li
147.697 156.643 li
cp
1 .976715 .0217899 .0373541 cmyk
f
147.697 156.643 mo
150.77 156.643 li
150.77 159.715 li
147.697 159.715 li
147.697 156.643 li
cp
.75021 .679683 .670222 .90164 cmyk
@
152.979 153.859 mo
152.979 156.932 li
156.051 156.932 li
156.051 153.859 li
152.979 153.859 li
cp
1 .976715 .0217899 .0373541 cmyk
f
gsave
31.5156 34.7471 mo
203.002 34.7471 li
203.002 190.525 li
31.5156 190.525 li
31.5156 34.7471 li
cp
eclp
152.979 153.859 mo
156.051 153.859 li
156.051 156.932 li
152.979 156.932 li
152.979 153.859 li
cp
.75021 .679683 .670222 .90164 cmyk
@
.671996 lw
33.2441 181.791 mo
33.6279 181.791 li
34.1079 181.693 li
34.4922 181.693 li
34.9722 181.693 li
35.3564 181.598 li
35.8364 181.598 li
36.2202 181.598 li
36.7007 181.502 li
37.0845 181.502 li
37.4688 181.406 li
37.9487 181.406 li
38.333 181.406 li
38.813 181.311 li
39.1968 181.311 li
39.6772 181.311 li
40.061 181.215 li
40.541 181.215 li
40.9253 181.119 li
41.4053 181.119 li
41.7896 181.119 li
42.2695 181.021 li
42.6538 181.021 li
43.0376 181.021 li
43.5176 180.926 li
43.9019 180.926 li
44.3818 180.83 li
44.7661 180.83 li
45.2461 180.83 li
45.6304 180.734 li
46.1104 180.734 li
46.4941 180.639 li
46.9746 180.639 li
47.3584 180.639 li
47.8384 180.543 li
48.2227 180.543 li
48.7026 180.447 li
49.0869 180.447 li
49.4707 180.35 li
49.9512 180.35 li
50.335 180.35 li
50.8149 180.254 li
51.1992 180.254 li
51.6792 180.158 li
52.0635 180.158 li
52.5435 180.158 li
52.9272 180.063 li
53.4077 180.063 li
53.7915 179.967 li
54.2715 179.967 li
54.6558 179.871 li
55.04 179.871 li
55.52 179.775 li
55.9038 179.775 li
56.3843 179.775 li
56.7681 179.678 li
57.248 179.678 li
57.6323 179.582 li
58.1123 179.582 li
58.4966 179.486 li
58.9766 179.486 li
59.3608 179.391 li
59.8408 179.391 li
60.2246 179.295 li
60.6089 179.295 li
61.0889 179.199 li
61.4731 179.199 li
61.9531 179.104 li
62.3374 179.104 li
62.8174 179.006 li
63.2012 179.006 li
63.6816 178.91 li
64.0654 178.91 li
64.5454 178.814 li
64.9297 178.814 li
65.4097 178.719 li
65.7939 178.719 li
66.1777 178.623 li
66.6582 178.623 li
67.042 178.527 li
67.522 178.527 li
67.9063 178.432 li
68.3862 178.432 li
68.7705 178.334 li
69.2505 178.334 li
69.6343 178.238 li
70.1147 178.238 li
70.4985 178.143 li
70.979 178.143 li
71.3628 178.047 li
71.7471 177.951 li
72.2271 177.951 li
72.6108 177.855 li
73.0913 177.855 li
73.4751 177.76 li
73.9556 177.76 li
74.3394 177.662 li
74.8193 177.662 li
75.2036 177.566 li
75.6836 177.471 li
76.0679 177.471 li
76.5479 177.375 li
76.9316 177.375 li
77.3159 177.279 li
77.7959 177.184 li
78.1802 177.184 li
78.6602 177.088 li
79.0444 177.088 li
79.5244 176.99 li
79.9082 176.895 li
80.3887 176.895 li
80.7725 176.799 li
81.2524 176.703 li
81.6367 176.703 li
82.1167 176.607 li
82.501 176.607 li
82.981 176.512 li
83.3647 176.416 li
83.749 176.416 li
84.229 176.318 li
84.6133 176.223 li
85.0933 176.223 li
85.4775 176.127 li
85.9575 176.031 li
86.3413 176.031 li
86.8218 175.936 li
87.2056 175.84 li
87.686 175.84 li
88.0698 175.744 li
88.5498 175.646 li
88.9341 175.551 li
89.3179 175.551 li
89.7983 175.455 li
90.1821 175.359 li
90.6626 175.359 li
91.0464 175.264 li
91.5264 175.168 li
91.9106 175.072 li
92.3906 175.072 li
92.7749 174.977 li
93.2549 174.879 li
93.6387 174.783 li
94.1191 174.783 li
94.5029 174.688 li
94.8872 174.592 li
95.3672 174.496 li
95.7515 174.4 li
96.2314 174.4 li
96.6152 174.305 li
97.0957 174.207 li
97.4795 174.111 li
97.9595 174.016 li
98.3438 174.016 li
98.8237 173.92 li
99.208 173.824 li
99.688 173.729 li
100.072 173.631 li
100.456 173.535 li
100.936 173.535 li
101.32 173.439 li
101.8 173.344 li
102.185 173.248 li
102.665 173.152 li
103.048 173.057 li
103.529 172.961 li
103.913 172.863 li
104.393 172.863 li
104.777 172.768 li
105.257 172.672 li
105.641 172.576 li
106.025 172.48 li
106.505 172.385 li
106.889 172.289 li
107.37 172.191 li
107.753 172.096 li
108.233 172 li
108.618 171.904 li
109.098 171.809 li
109.482 171.713 li
109.962 171.617 li
110.346 171.52 li
110.826 171.424 li
111.21 171.328 li
111.594 171.232 li
112.074 171.137 li
112.458 171.041 li
112.938 170.945 li
113.322 170.848 li
113.803 170.752 li
114.187 170.656 li
114.667 170.561 li
115.051 170.369 li
115.531 170.273 li
115.915 170.176 li
116.395 170.08 li
116.779 169.984 li
117.259 169.889 li
117.643 169.793 li
118.027 169.697 li
118.508 169.504 li
118.891 169.408 li
119.371 169.313 li
119.756 169.217 li
120.236 169.121 li
120.619 168.93 li
121.1 168.832 li
121.484 168.736 li
121.965 168.641 li
122.348 168.449 li
122.828 168.354 li
123.213 168.258 li
123.596 168.064 li
124.076 167.969 li
124.461 167.873 li
124.941 167.682 li
125.324 167.586 li
125.805 167.488 li
126.189 167.297 li
126.668 167.201 li
127.053 167.105 li
127.533 166.914 li
127.918 166.816 li
128.396 166.625 li
128.781 166.529 li
129.166 166.338 li
129.645 166.242 li
130.029 166.049 li
130.51 165.953 li
130.895 165.762 li
131.373 165.666 li
131.758 165.473 li
132.238 165.377 li
132.621 165.186 li
133.102 164.994 li
133.486 164.898 li
133.967 164.705 li
134.35 164.514 li
134.734 164.418 li
135.215 164.227 li
135.598 164.033 li
136.078 163.938 li
136.463 163.746 li
136.943 163.555 li
137.326 163.361 li
137.807 163.266 li
138.191 163.074 li
138.672 162.883 li
139.055 162.689 li
139.535 162.498 li
139.92 162.307 li
140.303 162.113 li
140.783 162.018 li
141.168 161.826 li
141.648 161.635 li
142.031 161.441 li
142.512 161.25 li
142.896 161.059 li
143.375 160.867 li
143.76 160.578 li
144.24 160.387 li
144.625 160.195 li
145.104 160.002 li
145.488 159.811 li
145.873 159.619 li
146.352 159.33 li
146.736 159.139 li
147.217 158.947 li
147.602 158.754 li
148.08 158.467 li
148.465 158.275 li
148.945 157.986 li
149.328 157.795 li
149.809 157.604 li
150.193 157.314 li
150.674 157.123 li
151.057 156.836 li
151.537 156.547 li
151.922 156.355 li
152.305 156.066 li
152.785 155.779 li
153.17 155.588 li
153.65 155.299 li
154.033 155.012 li
154.514 154.723 li
154.898 154.436 li
155.379 154.244 li
155.762 153.955 li
156.242 153.668 li
156.627 153.379 li
157.105 153.092 li
157.49 152.707 li
157.875 152.42 li
158.355 152.133 li
158.738 151.844 li
159.219 151.557 li
159.604 151.172 li
160.082 150.885 li
160.467 150.596 li
160.947 150.213 li
161.332 149.924 li
161.811 149.541 li
162.195 149.156 li
162.676 148.869 li
163.059 148.484 li
163.443 148.102 li
163.924 147.717 li
164.309 147.332 li
164.787 146.949 li
165.172 146.564 li
165.652 146.182 li
166.035 145.797 li
166.516 145.414 li
166.9 145.029 li
167.381 144.549 li
167.764 144.166 li
168.244 143.686 li
168.629 143.303 li
169.012 142.822 li
169.492 142.342 li
169.877 141.861 li
170.357 141.383 li
170.74 140.902 li
171.221 140.422 li
171.605 139.943 li
172.086 139.463 li
172.469 138.982 li
172.949 138.406 li
173.334 137.83 li
173.814 137.352 li
174.197 136.775 li
174.582 136.199 li
175.063 135.623 li
175.445 135.047 li
175.926 134.471 li
176.311 133.799 li
176.789 133.225 li
177.174 132.553 li
177.654 131.977 li
178.039 131.305 li
178.518 130.633 li
178.902 129.865 li
179.383 129.193 li
179.766 128.521 li
180.15 127.752 li
180.631 126.984 li
181.016 126.217 li
181.494 125.449 li
181.879 124.682 li
182.359 123.818 li
182.742 122.953 li
183.223 122.09 li
183.607 121.227 li
184.088 120.361 li
184.471 119.402 li
184.951 118.443 li
185.336 117.482 li
185.816 116.523 li
186.199 115.467 li
186.584 114.412 li
187.064 113.355 li
187.447 112.3 li
187.928 111.148 li
188.313 109.996 li
188.793 108.749 li
189.176 107.597 li
189.656 106.349 li
190.041 105.005 li
190.521 103.662 li
190.904 102.318 li
191.385 100.878 li
191.77 99.4385 li
192.152 97.9028 li
192.633 96.3667 li
193.018 94.7354 li
193.496 93.1035 li
193.881 91.376 li
194.361 89.6484 li
194.746 87.8247 li
195.225 85.9048 li
195.609 83.9854 li
196.09 81.9697 li
196.473 79.8579 li
196.953 77.6504 li
197.338 75.3472 li
197.723 73.0435 li
198.201 70.5479 li
198.586 68.0522 li
199.066 65.3647 li
199.449 62.5815 li
199.93 59.7021 li
200.314 56.7266 li
200.795 53.5591 li
201.178 50.2959 li
201.658 46.8403 li
202.043 43.1934 li
202.523 39.4502 li
202.906 35.4189 li
1 .976715 .0217899 .0373541 cmyk
@
33.2441 181.693 mo
33.6279 181.693 li
34.1079 181.693 li
34.4922 181.693 li
34.9722 181.598 li
35.3564 181.598 li
35.8364 181.598 li
36.2202 181.598 li
36.7007 181.598 li
37.0845 181.502 li
37.4688 181.502 li
37.9487 181.502 li
38.333 181.502 li
38.813 181.502 li
39.1968 181.406 li
39.6772 181.406 li
40.061 181.406 li
40.541 181.406 li
40.9253 181.406 li
41.4053 181.311 li
41.7896 181.311 li
42.2695 181.311 li
42.6538 181.311 li
43.0376 181.215 li
43.5176 181.215 li
43.9019 181.215 li
44.3818 181.215 li
44.7661 181.215 li
45.2461 181.119 li
45.6304 181.119 li
46.1104 181.119 li
46.4941 181.119 li
46.9746 181.021 li
47.3584 181.021 li
47.8384 181.021 li
48.2227 181.021 li
48.7026 181.021 li
49.0869 180.926 li
49.4707 180.926 li
49.9512 180.926 li
50.335 180.926 li
50.8149 180.83 li
51.1992 180.83 li
51.6792 180.83 li
52.0635 180.83 li
52.5435 180.734 li
52.9272 180.734 li
53.4077 180.734 li
53.7915 180.734 li
54.2715 180.639 li
54.6558 180.639 li
55.04 180.639 li
55.52 180.639 li
55.9038 180.543 li
56.3843 180.543 li
56.7681 180.543 li
57.248 180.543 li
57.6323 180.447 li
58.1123 180.447 li
58.4966 180.447 li
58.9766 180.447 li
59.3608 180.35 li
59.8408 180.35 li
60.2246 180.35 li
60.6089 180.35 li
61.0889 180.254 li
61.4731 180.254 li
61.9531 180.254 li
62.3374 180.158 li
62.8174 180.158 li
63.2012 180.158 li
63.6816 180.158 li
64.0654 180.063 li
64.5454 180.063 li
64.9297 180.063 li
65.4097 179.967 li
65.7939 179.967 li
66.1777 179.967 li
66.6582 179.967 li
67.042 179.871 li
67.522 179.871 li
67.9063 179.871 li
68.3862 179.775 li
68.7705 179.775 li
69.2505 179.775 li
69.6343 179.678 li
70.1147 179.678 li
70.4985 179.678 li
70.979 179.678 li
71.3628 179.582 li
71.7471 179.582 li
72.2271 179.582 li
72.6108 179.486 li
73.0913 179.486 li
73.4751 179.486 li
73.9556 179.391 li
74.3394 179.391 li
74.8193 179.391 li
75.2036 179.295 li
75.6836 179.295 li
76.0679 179.295 li
76.5479 179.199 li
76.9316 179.199 li
77.3159 179.199 li
77.7959 179.104 li
78.1802 179.104 li
78.6602 179.104 li
79.0444 179.006 li
79.5244 179.006 li
79.9082 179.006 li
80.3887 178.91 li
80.7725 178.91 li
81.2524 178.814 li
81.6367 178.814 li
82.1167 178.814 li
82.501 178.719 li
82.981 178.719 li
83.3647 178.719 li
83.749 178.623 li
84.229 178.623 li
84.6133 178.527 li
85.0933 178.527 li
85.4775 178.527 li
85.9575 178.432 li
86.3413 178.432 li
86.8218 178.432 li
87.2056 178.334 li
87.686 178.334 li
88.0698 178.238 li
88.5498 178.238 li
88.9341 178.143 li
89.3179 178.143 li
89.7983 178.143 li
90.1821 178.047 li
90.6626 178.047 li
91.0464 177.951 li
91.5264 177.951 li
91.9106 177.951 li
92.3906 177.855 li
92.7749 177.855 li
93.2549 177.76 li
93.6387 177.76 li
94.1191 177.662 li
94.5029 177.662 li
94.8872 177.566 li
95.3672 177.566 li
95.7515 177.566 li
96.2314 177.471 li
96.6152 177.471 li
97.0957 177.375 li
97.4795 177.375 li
97.9595 177.279 li
98.3438 177.279 li
98.8237 177.184 li
99.208 177.184 li
99.688 177.088 li
100.072 177.088 li
100.456 176.99 li
100.936 176.99 li
101.32 176.895 li
101.8 176.895 li
102.185 176.799 li
102.665 176.799 li
103.048 176.703 li
103.529 176.703 li
103.913 176.607 li
104.393 176.607 li
104.777 176.512 li
105.257 176.512 li
105.641 176.416 li
106.025 176.318 li
106.505 176.318 li
106.889 176.223 li
107.37 176.223 li
107.753 176.127 li
108.233 176.127 li
108.618 176.031 li
109.098 175.936 li
109.482 175.936 li
109.962 175.84 li
110.346 175.84 li
110.826 175.744 li
111.21 175.646 li
111.594 175.646 li
112.074 175.551 li
112.458 175.551 li
112.938 175.455 li
113.322 175.359 li
113.803 175.359 li
114.187 175.264 li
114.667 175.168 li
115.051 175.168 li
115.531 175.072 li
115.915 174.977 li
116.395 174.977 li
116.779 174.879 li
117.259 174.783 li
117.643 174.783 li
118.027 174.688 li
118.508 174.592 li
118.891 174.496 li
119.371 174.496 li
119.756 174.4 li
120.236 174.305 li
120.619 174.305 li
121.1 174.207 li
121.484 174.111 li
121.965 174.016 li
122.348 174.016 li
122.828 173.92 li
123.213 173.824 li
123.596 173.729 li
124.076 173.631 li
124.461 173.631 li
124.941 173.535 li
125.324 173.439 li
125.805 173.344 li
126.189 173.248 li
126.668 173.152 li
127.053 173.152 li
127.533 173.057 li
127.918 172.961 li
128.396 172.863 li
128.781 172.768 li
129.166 172.672 li
129.645 172.576 li
130.029 172.48 li
130.51 172.385 li
130.895 172.289 li
131.373 172.191 li
131.758 172.096 li
132.238 172 li
132.621 172 li
133.102 171.904 li
133.486 171.809 li
133.967 171.617 li
134.35 171.52 li
134.734 171.424 li
135.215 171.328 li
135.598 171.232 li
136.078 171.137 li
136.463 171.041 li
136.943 170.945 li
137.326 170.848 li
137.807 170.752 li
138.191 170.656 li
138.672 170.561 li
139.055 170.369 li
139.535 170.273 li
139.92 170.176 li
140.303 170.08 li
140.783 169.984 li
141.168 169.793 li
141.648 169.697 li
142.031 169.602 li
142.512 169.504 li
142.896 169.313 li
143.375 169.217 li
143.76 169.121 li
144.24 168.93 li
144.625 168.832 li
145.104 168.736 li
145.488 168.545 li
145.873 168.449 li
146.352 168.258 li
146.736 168.16 li
147.217 167.969 li
147.602 167.873 li
148.08 167.682 li
148.465 167.586 li
148.945 167.393 li
149.328 167.297 li
149.809 167.105 li
150.193 166.914 li
150.674 166.816 li
151.057 166.625 li
151.537 166.434 li
151.922 166.338 li
152.305 166.145 li
152.785 165.953 li
153.17 165.762 li
153.65 165.666 li
154.033 165.473 li
154.514 165.281 li
154.898 165.09 li
155.379 164.898 li
155.762 164.705 li
156.242 164.514 li
156.627 164.322 li
157.105 164.129 li
157.49 163.938 li
157.875 163.746 li
158.355 163.555 li
158.738 163.361 li
159.219 163.074 li
159.604 162.883 li
160.082 162.689 li
160.467 162.402 li
160.947 162.211 li
161.332 162.018 li
161.811 161.73 li
162.195 161.539 li
162.676 161.25 li
163.059 161.059 li
163.443 160.77 li
163.924 160.482 li
164.309 160.291 li
164.787 160.002 li
165.172 159.715 li
165.652 159.426 li
166.035 159.139 li
166.516 158.852 li
166.9 158.563 li
167.381 158.275 li
167.764 157.986 li
168.244 157.699 li
168.629 157.314 li
169.012 157.027 li
169.492 156.738 li
169.877 156.355 li
170.357 156.066 li
170.74 155.684 li
171.221 155.299 li
171.605 154.916 li
172.086 154.627 li
172.469 154.244 li
172.949 153.859 li
173.334 153.379 li
173.814 152.996 li
174.197 152.611 li
174.582 152.229 li
175.063 151.748 li
175.445 151.268 li
175.926 150.885 li
176.311 150.404 li
176.789 149.924 li
177.174 149.445 li
177.654 148.869 li
178.039 148.389 li
178.518 147.908 li
178.902 147.332 li
179.383 146.758 li
179.766 146.182 li
180.15 145.605 li
180.631 145.029 li
181.016 144.357 li
181.494 143.781 li
181.879 143.109 li
182.359 142.438 li
182.742 141.766 li
183.223 140.998 li
183.607 140.326 li
184.088 139.559 li
184.471 138.791 li
184.951 137.928 li
185.336 137.158 li
185.816 136.295 li
186.199 135.432 li
186.584 134.471 li
187.064 133.512 li
187.447 132.553 li
187.928 131.496 li
188.313 130.439 li
188.793 129.385 li
189.176 128.232 li
189.656 127.08 li
190.041 125.834 li
190.521 124.586 li
190.904 123.242 li
191.385 121.803 li
191.77 120.361 li
192.152 118.922 li
192.633 117.291 li
193.018 115.658 li
193.496 113.932 li
193.881 112.204 li
194.361 110.284 li
194.746 108.269 li
195.225 106.253 li
195.609 104.045 li
196.09 101.742 li
196.473 99.2466 li
196.953 96.751 li
197.338 93.9673 li
197.723 91.0879 li
198.201 88.0166 li
198.586 84.7534 li
199.066 81.2017 li
199.449 77.4585 li
199.93 73.5234 li
200.314 69.2041 li
200.795 64.5972 li
201.178 59.606 li
201.658 54.1353 li
202.043 48.2803 li
202.523 41.8496 li
202.906 34.7471 li
.627649 3.0518e-05 1 3.0518e-05 cmyk
@
grestore
62.6255 180.83 mo
62.6255 184.67 li
66.4658 184.67 li
66.4658 180.83 li
62.6255 180.83 li
cp
.627649 3.0518e-05 1 3.0518e-05 cmyk
f
62.6255 180.83 mo
66.4658 180.83 li
66.4658 184.67 li
62.6255 184.67 li
62.6255 180.83 li
cp
.75021 .679683 .670222 .90164 cmyk
@
71.1709 179.967 mo
71.1709 183.807 li
75.0117 183.807 li
75.0117 179.967 li
71.1709 179.967 li
cp
.627649 3.0518e-05 1 3.0518e-05 cmyk
f
71.1709 179.967 mo
75.0117 179.967 li
75.0117 183.807 li
71.1709 183.807 li
71.1709 179.967 li
cp
.75021 .679683 .670222 .90164 cmyk
@
79.1401 179.104 mo
79.1401 182.941 li
82.981 182.941 li
82.981 179.104 li
79.1401 179.104 li
cp
.627649 3.0518e-05 1 3.0518e-05 cmyk
f
79.1401 179.104 mo
82.981 179.104 li
82.981 182.941 li
79.1401 182.941 li
79.1401 179.104 li
cp
.75021 .679683 .670222 .90164 cmyk
@
88.646 178.143 mo
88.646 181.982 li
92.4868 181.982 li
92.4868 178.143 li
88.646 178.143 li
cp
.627649 3.0518e-05 1 3.0518e-05 cmyk
f
88.646 178.143 mo
92.4868 178.143 li
92.4868 181.982 li
88.646 181.982 li
88.646 178.143 li
cp
.75021 .679683 .670222 .90164 cmyk
@
97.2876 177.184 mo
97.2876 181.021 li
101.128 181.021 li
101.128 177.184 li
97.2876 177.184 li
cp
.627649 3.0518e-05 1 3.0518e-05 cmyk
f
97.2876 177.184 mo
101.128 177.184 li
101.128 181.021 li
97.2876 181.021 li
97.2876 177.184 li
cp
.75021 .679683 .670222 .90164 cmyk
@
105.449 176.031 mo
105.449 179.871 li
109.29 179.871 li
109.29 176.031 li
105.449 176.031 li
cp
.627649 3.0518e-05 1 3.0518e-05 cmyk
f
105.449 176.031 mo
109.29 176.031 li
109.29 179.871 li
105.449 179.871 li
105.449 176.031 li
cp
.75021 .679683 .670222 .90164 cmyk
@
113.322 174.496 mo
113.322 178.334 li
117.163 178.334 li
117.163 174.496 li
113.322 174.496 li
cp
.627649 3.0518e-05 1 3.0518e-05 cmyk
f
113.322 174.496 mo
117.163 174.496 li
117.163 178.334 li
113.322 178.334 li
113.322 174.496 li
cp
.75021 .679683 .670222 .90164 cmyk
@
120.619 172.863 mo
120.619 176.703 li
124.461 176.703 li
124.461 172.863 li
120.619 172.863 li
cp
.627649 3.0518e-05 1 3.0518e-05 cmyk
f
120.619 172.863 mo
124.461 172.863 li
124.461 176.703 li
120.619 176.703 li
120.619 172.863 li
cp
.75021 .679683 .670222 .90164 cmyk
@
129.357 170.945 mo
129.357 174.783 li
133.197 174.783 li
133.197 170.945 li
129.357 170.945 li
cp
.627649 3.0518e-05 1 3.0518e-05 cmyk
f
129.357 170.945 mo
133.197 170.945 li
133.197 174.783 li
129.357 174.783 li
129.357 170.945 li
cp
.75021 .679683 .670222 .90164 cmyk
@
137.998 168.736 mo
137.998 172.576 li
141.84 172.576 li
141.84 168.736 li
137.998 168.736 li
cp
.627649 3.0518e-05 1 3.0518e-05 cmyk
f
137.998 168.736 mo
141.84 168.736 li
141.84 172.576 li
137.998 172.576 li
137.998 168.736 li
cp
.75021 .679683 .670222 .90164 cmyk
@
147.889 166.049 mo
147.889 169.889 li
151.729 169.889 li
151.729 166.049 li
147.889 166.049 li
cp
.627649 3.0518e-05 1 3.0518e-05 cmyk
f
147.889 166.049 mo
151.729 166.049 li
151.729 169.889 li
147.889 169.889 li
147.889 166.049 li
cp
.75021 .679683 .670222 .90164 cmyk
@
149.041 165.57 mo
149.041 169.408 li
152.881 169.408 li
152.881 165.57 li
149.041 165.57 li
cp
.627649 3.0518e-05 1 3.0518e-05 cmyk
f
149.041 165.57 mo
152.881 165.57 li
152.881 169.408 li
149.041 169.408 li
149.041 165.57 li
cp
.75021 .679683 .670222 .90164 cmyk
@
150.865 164.994 mo
150.865 168.832 li
154.705 168.832 li
154.705 164.994 li
150.865 164.994 li
cp
.627649 3.0518e-05 1 3.0518e-05 cmyk
f
150.865 164.994 mo
154.705 164.994 li
154.705 168.832 li
150.865 168.832 li
150.865 164.994 li
cp
.75021 .679683 .670222 .90164 cmyk
@
154.705 163.65 mo
154.705 167.488 li
158.547 167.488 li
158.547 163.65 li
154.705 163.65 li
cp
.627649 3.0518e-05 1 3.0518e-05 cmyk
f
154.705 163.65 mo
158.547 163.65 li
158.547 167.488 li
154.705 167.488 li
154.705 163.65 li
cp
.75021 .679683 .670222 .90164 cmyk
@
158.258 162.113 mo
158.258 165.953 li
162.1 165.953 li
162.1 162.113 li
158.258 162.113 li
cp
.627649 3.0518e-05 1 3.0518e-05 cmyk
f
158.258 162.113 mo
162.1 162.113 li
162.1 165.953 li
158.258 165.953 li
158.258 162.113 li
cp
.75021 .679683 .670222 .90164 cmyk
@
158.451 162.113 mo
158.451 165.953 li
162.291 165.953 li
162.291 162.113 li
158.451 162.113 li
cp
.627649 3.0518e-05 1 3.0518e-05 cmyk
f
158.451 162.113 mo
162.291 162.113 li
162.291 165.953 li
158.451 165.953 li
158.451 162.113 li
cp
.75021 .679683 .670222 .90164 cmyk
@
164.404 159.043 mo
164.404 162.883 li
168.244 162.883 li
168.244 159.043 li
164.404 159.043 li
cp
.627649 3.0518e-05 1 3.0518e-05 cmyk
f
164.404 159.043 mo
168.244 159.043 li
168.244 162.883 li
164.404 162.883 li
164.404 159.043 li
cp
.75021 .679683 .670222 .90164 cmyk
@
164.5 158.947 mo
164.5 162.785 li
168.34 162.785 li
168.34 158.947 li
164.5 158.947 li
cp
.627649 3.0518e-05 1 3.0518e-05 cmyk
f
164.5 158.947 mo
168.34 158.947 li
168.34 162.785 li
164.5 162.785 li
164.5 158.947 li
cp
.75021 .679683 .670222 .90164 cmyk
@
168.148 156.547 mo
168.148 160.387 li
171.988 160.387 li
171.988 156.547 li
168.148 156.547 li
cp
.627649 3.0518e-05 1 3.0518e-05 cmyk
f
168.148 156.547 mo
171.988 156.547 li
171.988 160.387 li
168.148 160.387 li
168.148 156.547 li
cp
.75021 .679683 .670222 .90164 cmyk
@
169.012 154.916 mo
169.012 158.754 li
172.854 158.754 li
172.854 154.916 li
169.012 154.916 li
cp
.627649 3.0518e-05 1 3.0518e-05 cmyk
f
169.012 154.916 mo
172.854 154.916 li
172.854 158.754 li
169.012 158.754 li
169.012 154.916 li
cp
.75021 .679683 .670222 .90164 cmyk
@
170.164 153.764 mo
170.164 157.604 li
174.006 157.604 li
174.006 153.764 li
170.164 153.764 li
cp
.627649 3.0518e-05 1 3.0518e-05 cmyk
f
170.164 153.764 mo
174.006 153.764 li
174.006 157.604 li
170.164 157.604 li
170.164 153.764 li
cp
.75021 .679683 .670222 .90164 cmyk
@
171.316 152.516 mo
171.316 156.355 li
175.158 156.355 li
175.158 152.516 li
171.316 152.516 li
cp
.627649 3.0518e-05 1 3.0518e-05 cmyk
f
171.316 152.516 mo
175.158 152.516 li
175.158 156.355 li
171.316 156.355 li
171.316 152.516 li
cp
.75021 .679683 .670222 .90164 cmyk
@
172.564 150.98 mo
172.564 154.82 li
176.406 154.82 li
176.406 150.98 li
172.564 150.98 li
cp
.627649 3.0518e-05 1 3.0518e-05 cmyk
f
172.564 150.98 mo
176.406 150.98 li
176.406 154.82 li
172.564 154.82 li
172.564 150.98 li
cp
.75021 .679683 .670222 .90164 cmyk
@
173.814 149.924 mo
173.814 153.764 li
177.654 153.764 li
177.654 149.924 li
173.814 149.924 li
cp
.627649 3.0518e-05 1 3.0518e-05 cmyk
f
173.814 149.924 mo
177.654 149.924 li
177.654 153.764 li
173.814 153.764 li
173.814 149.924 li
cp
.75021 .679683 .670222 .90164 cmyk
@
48.6641 182.855 mo
48.6641 184.021 47.7178 184.967 46.5518 184.967 cv
45.3857 184.967 44.4395 184.021 44.4395 182.855 cv
44.4395 181.689 45.3857 180.744 46.5518 180.744 cv
47.7178 180.744 48.6641 181.689 48.6641 182.855 cv
48.6641 182.855 li
cp
.147219 .532677 3.0518e-05 3.0518e-05 cmyk
ef
48.6641 182.855 mo
48.6641 184.021 47.7178 184.967 46.5518 184.967 cv
45.3857 184.967 44.4395 184.021 44.4395 182.855 cv
44.4395 181.689 45.3857 180.744 46.5518 180.744 cv
47.7178 180.744 48.6641 181.689 48.6641 182.855 cv
48.6641 182.855 li
cp
0 0 0 1 cmyk
@
55.5039 181.656 mo
55.5039 182.822 54.5576 183.768 53.3916 183.768 cv
52.2256 183.768 51.2793 182.822 51.2793 181.656 cv
51.2793 180.49 52.2256 179.545 53.3916 179.545 cv
54.5576 179.545 55.5039 180.49 55.5039 181.656 cv
55.5039 181.656 li
cp
.147219 .532677 3.0518e-05 3.0518e-05 cmyk
ef
55.5039 181.656 mo
55.5039 182.822 54.5576 183.768 53.3916 183.768 cv
52.2256 183.768 51.2793 182.822 51.2793 181.656 cv
51.2793 180.49 52.2256 179.545 53.3916 179.545 cv
54.5576 179.545 55.5039 180.49 55.5039 181.656 cv
55.5039 181.656 li
cp
0 0 0 1 cmyk
@
66.6641 181.535 mo
66.6641 182.701 65.7178 183.646 64.5518 183.646 cv
63.3857 183.646 62.4395 182.701 62.4395 181.535 cv
62.4395 180.371 63.3857 179.424 64.5518 179.424 cv
65.7178 179.424 66.6641 180.371 66.6641 181.535 cv
66.6641 181.535 li
cp
.147219 .532677 3.0518e-05 3.0518e-05 cmyk
ef
66.6641 181.535 mo
66.6641 182.701 65.7178 183.646 64.5518 183.646 cv
63.3857 183.646 62.4395 182.701 62.4395 181.535 cv
62.4395 180.371 63.3857 179.424 64.5518 179.424 cv
65.7178 179.424 66.6641 180.371 66.6641 181.535 cv
66.6641 181.535 li
cp
0 0 0 1 cmyk
@
85.5039 178.535 mo
85.5039 179.701 84.5576 180.646 83.3916 180.646 cv
82.2256 180.646 81.2793 179.701 81.2793 178.535 cv
81.2793 177.371 82.2256 176.424 83.3916 176.424 cv
84.5576 176.424 85.5039 177.371 85.5039 178.535 cv
85.5039 178.535 li
cp
.147219 .532677 3.0518e-05 3.0518e-05 cmyk
ef
85.5039 178.535 mo
85.5039 179.701 84.5576 180.646 83.3916 180.646 cv
82.2256 180.646 81.2793 179.701 81.2793 178.535 cv
81.2793 177.371 82.2256 176.424 83.3916 176.424 cv
84.5576 176.424 85.5039 177.371 85.5039 178.535 cv
85.5039 178.535 li
cp
0 0 0 1 cmyk
@
99.5439 177.096 mo
99.5439 178.262 98.5977 179.207 97.4316 179.207 cv
96.2656 179.207 95.3193 178.262 95.3193 177.096 cv
95.3193 175.93 96.2656 174.984 97.4316 174.984 cv
98.5977 174.984 99.5439 175.93 99.5439 177.096 cv
99.5439 177.096 li
cp
.147219 .532677 3.0518e-05 3.0518e-05 cmyk
ef
99.5439 177.096 mo
99.5439 178.262 98.5977 179.207 97.4316 179.207 cv
96.2656 179.207 95.3193 178.262 95.3193 177.096 cv
95.3193 175.93 96.2656 174.984 97.4316 174.984 cv
98.5977 174.984 99.5439 175.93 99.5439 177.096 cv
99.5439 177.096 li
cp
0 0 0 1 cmyk
@
118.863 175.057 mo
118.863 176.221 117.918 177.168 116.751 177.168 cv
115.585 177.168 114.639 176.221 114.639 175.057 cv
114.639 173.891 115.585 172.943 116.751 172.943 cv
117.918 172.943 118.863 173.891 118.863 175.057 cv
118.863 175.057 li
cp
.147219 .532677 3.0518e-05 3.0518e-05 cmyk
ef
118.863 175.057 mo
118.863 176.221 117.918 177.168 116.751 177.168 cv
115.585 177.168 114.639 176.221 114.639 175.057 cv
114.639 173.891 115.585 172.943 116.751 172.943 cv
117.918 172.943 118.863 173.891 118.863 175.057 cv
118.863 175.057 li
cp
0 0 0 1 cmyk
@
145.623 169.656 mo
145.623 170.822 144.678 171.768 143.512 171.768 cv
142.346 171.768 141.398 170.822 141.398 169.656 cv
141.398 168.49 142.346 167.545 143.512 167.545 cv
144.678 167.545 145.623 168.49 145.623 169.656 cv
145.623 169.656 li
cp
.147219 .532677 3.0518e-05 3.0518e-05 cmyk
ef
145.623 169.656 mo
145.623 170.822 144.678 171.768 143.512 171.768 cv
142.346 171.768 141.398 170.822 141.398 169.656 cv
141.398 168.49 142.346 167.545 143.512 167.545 cv
144.678 167.545 145.623 168.49 145.623 169.656 cv
145.623 169.656 li
cp
0 0 0 1 cmyk
@
162.904 164.375 mo
162.904 165.541 161.957 166.488 160.791 166.488 cv
159.625 166.488 158.68 165.541 158.68 164.375 cv
158.68 163.211 159.625 162.264 160.791 162.264 cv
161.957 162.264 162.904 163.211 162.904 164.375 cv
162.904 164.375 li
cp
.147219 .532677 3.0518e-05 3.0518e-05 cmyk
ef
162.904 164.375 mo
162.904 165.541 161.957 166.488 160.791 166.488 cv
159.625 166.488 158.68 165.541 158.68 164.375 cv
158.68 163.211 159.625 162.264 160.791 162.264 cv
161.957 162.264 162.904 163.211 162.904 164.375 cv
162.904 164.375 li
cp
0 0 0 1 cmyk
@
172.744 157.057 mo
172.744 158.221 171.797 159.168 170.631 159.168 cv
169.465 159.168 168.52 158.221 168.52 157.057 cv
168.52 155.891 169.465 154.943 170.631 154.943 cv
171.797 154.943 172.744 155.891 172.744 157.057 cv
172.744 157.057 li
cp
.147219 .532677 3.0518e-05 3.0518e-05 cmyk
ef
172.744 157.057 mo
172.744 158.221 171.797 159.168 170.631 159.168 cv
169.465 159.168 168.52 158.221 168.52 157.057 cv
168.52 155.891 169.465 154.943 170.631 154.943 cv
171.797 154.943 172.744 155.891 172.744 157.057 cv
172.744 157.057 li
cp
0 0 0 1 cmyk
@
178.023 151.416 mo
178.023 152.582 177.078 153.527 175.912 153.527 cv
174.746 153.527 173.799 152.582 173.799 151.416 cv
173.799 150.25 174.746 149.305 175.912 149.305 cv
177.078 149.305 178.023 150.25 178.023 151.416 cv
178.023 151.416 li
cp
.147219 .532677 3.0518e-05 3.0518e-05 cmyk
ef
178.023 151.416 mo
178.023 152.582 177.078 153.527 175.912 153.527 cv
174.746 153.527 173.799 152.582 173.799 151.416 cv
173.799 150.25 174.746 149.305 175.912 149.305 cv
177.078 149.305 178.023 150.25 178.023 151.416 cv
178.023 151.416 li
cp
0 0 0 1 cmyk
@
183.545 146.855 mo
183.545 148.021 182.598 148.967 181.432 148.967 cv
180.266 148.967 179.318 148.021 179.318 146.855 cv
179.318 145.689 180.266 144.744 181.432 144.744 cv
182.598 144.744 183.545 145.689 183.545 146.855 cv
183.545 146.855 li
cp
.147219 .532677 3.0518e-05 3.0518e-05 cmyk
ef
183.545 146.855 mo
183.545 148.021 182.598 148.967 181.432 148.967 cv
180.266 148.967 179.318 148.021 179.318 146.855 cv
179.318 145.689 180.266 144.744 181.432 144.744 cv
182.598 144.744 183.545 145.689 183.545 146.855 cv
183.545 146.855 li
cp
0 0 0 1 cmyk
@
229.215 139.809 mo
219.111 139.809 229.215 139.809 219.111 139.809 cv
219.111 138.568 219.111 139.809 219.111 138.568 cv
229.215 138.568 219.111 138.568 229.215 138.568 cv
229.215 139.809 229.215 138.568 229.215 139.809 cv
229.215 139.809 li
cp
f
225.557 135.801 mo
226.494 135.801 227.195 135.596 227.662 135.188 cv
228.127 134.777 228.361 134.264 228.361 133.645 cv
228.361 133.027 228.127 132.516 227.658 132.107 cv
227.189 131.699 226.475 131.494 225.514 131.494 cv
224.609 131.494 223.924 131.699 223.457 132.111 cv
222.99 132.521 222.758 133.033 222.758 133.645 cv
222.758 134.264 222.99 134.777 223.453 135.188 cv
223.918 135.596 224.619 135.801 225.557 135.801 cv
225.557 135.801 li
cp
225.557 137.074 mo
224.201 137.074 223.197 136.697 222.545 135.945 cv
222.002 135.314 221.73 134.549 221.73 133.645 cv
221.73 132.639 222.061 131.816 222.721 131.178 cv
223.379 130.539 224.291 130.219 225.453 130.219 cv
226.395 130.219 227.135 130.361 227.676 130.643 cv
228.215 130.926 228.635 131.336 228.934 131.877 cv
229.232 132.416 229.381 133.006 229.381 133.645 cv
229.381 134.668 229.053 135.496 228.395 136.127 cv
227.738 136.758 226.791 137.074 225.557 137.074 cv
225.557 137.074 li
cp
f
225.426 127.943 mo
226.385 127.943 227.086 127.752 227.527 127.371 cv
227.969 126.99 228.189 126.512 228.189 125.939 cv
228.189 125.369 227.969 124.891 227.531 124.506 cv
227.092 124.119 226.404 123.928 225.467 123.928 cv
224.57 123.928 223.895 124.125 223.439 124.523 cv
222.984 124.92 222.758 125.398 222.758 125.959 cv
222.758 126.51 222.982 126.979 223.43 127.365 cv
223.877 127.75 224.543 127.943 225.426 127.943 cv
225.426 127.943 li
cp
229.822 128.971 mo
230.002 127.764 229.822 128.971 230.002 127.764 cv
230.373 127.713 230.645 127.574 230.814 127.344 cv
231.045 127.037 231.158 126.615 231.158 126.084 cv
231.158 125.51 231.045 125.066 230.814 124.754 cv
230.584 124.441 230.264 124.23 229.85 124.119 cv
229.598 124.055 229.066 124.025 228.258 124.029 cv
228.896 124.572 229.215 125.248 229.215 126.057 cv
229.215 127.063 228.854 127.84 228.127 128.391 cv
227.4 128.941 226.529 129.219 225.514 129.219 cv
224.816 129.219 224.172 129.092 223.582 128.84 cv
222.99 128.586 222.535 128.221 222.213 127.74 cv
221.893 127.26 221.73 126.697 221.73 126.049 cv
221.73 125.186 222.08 124.473 222.779 123.914 cv
221.896 123.914 222.779 123.914 221.896 123.914 cv
221.896 122.77 221.896 123.914 221.896 122.77 cv
228.223 122.77 221.896 122.77 228.223 122.77 cv
229.363 122.77 230.17 122.885 230.646 123.117 cv
231.121 123.35 231.496 123.717 231.771 124.219 cv
232.049 124.723 232.186 125.342 232.186 126.076 cv
232.186 126.949 231.99 127.654 231.598 128.191 cv
231.203 128.729 230.613 128.988 229.822 128.971 cv
229.822 128.971 li
cp
f
234.689 118.752 mo
234.689 119.494 234.689 118.752 234.689 119.494 cv
229.957 119.494 234.689 119.494 229.957 119.494 cv
230.127 119.672 230.297 119.906 230.469 120.197 cv
230.639 120.486 230.766 120.748 230.852 120.979 cv
230.133 120.979 230.852 120.979 230.133 120.979 cv
229.938 120.563 229.701 120.199 229.424 119.889 cv
229.146 119.578 228.877 119.359 228.615 119.23 cv
228.615 118.752 228.615 119.23 228.615 118.752 cv
234.689 118.752 228.615 118.752 234.689 118.752 cv
234.689 118.752 li
cp
f
231.705 116.082 mo
232.699 116.082 233.359 115.965 233.688 115.732 cv
234.018 115.5 234.182 115.215 234.182 114.873 cv
234.182 114.531 234.016 114.246 233.686 114.014 cv
233.355 113.781 232.695 113.664 231.705 113.664 cv
230.711 113.664 230.049 113.781 229.721 114.014 cv
229.395 114.246 229.23 114.535 229.23 114.881 cv
229.23 115.223 229.375 115.494 229.664 115.697 cv
230.031 115.953 230.713 116.082 231.705 116.082 cv
231.705 116.082 li
cp
231.705 116.844 mo
230.99 116.844 230.414 116.771 229.979 116.623 cv
229.543 116.477 229.207 116.258 228.971 115.969 cv
228.734 115.678 228.615 115.313 228.615 114.873 cv
228.615 114.549 228.682 114.264 228.811 114.02 cv
228.941 113.775 229.131 113.572 229.377 113.412 cv
229.623 113.254 229.922 113.129 230.275 113.037 cv
230.629 112.947 231.105 112.902 231.705 112.902 cv
232.416 112.902 232.988 112.975 233.424 113.121 cv
233.859 113.266 234.197 113.484 234.436 113.773 cv
234.672 114.064 234.791 114.43 234.791 114.873 cv
234.791 115.455 234.582 115.914 234.164 116.246 cv
233.662 116.645 232.842 116.844 231.705 116.844 cv
231.705 116.844 li
cp
f
223.418 103.701 mo
224.348 103.701 223.418 103.701 224.348 103.701 cv
224.348 105.675 224.348 103.701 224.348 105.675 cv
225.736 105.818 226.688 105.89 227.203 105.89 cv
227.611 105.89 227.908 105.813 228.092 105.659 cv
228.275 105.505 228.367 105.312 228.367 105.08 cv
228.367 104.907 228.309 104.757 228.189 104.631 cv
228.072 104.504 227.869 104.412 227.582 104.353 cv
227.582 104.131 227.582 104.353 227.582 104.131 cv
228.275 104.203 228.752 104.356 229.016 104.593 cv
229.279 104.829 229.412 105.105 229.412 105.421 cv
229.412 105.755 229.262 106.033 228.959 106.257 cv
228.658 106.48 228.119 106.592 227.342 106.592 cv
226.73 106.592 225.732 106.516 224.348 106.364 cv
224.348 106.959 224.348 106.364 224.348 106.959 cv
224.348 107.301 224.41 107.568 224.535 107.763 cv
224.66 107.957 224.895 108.148 225.24 108.338 cv
225.24 108.572 225.24 108.338 225.24 108.572 cv
224.43 108.269 223.924 107.997 223.723 107.756 cv
223.52 107.516 223.418 107.174 223.418 106.731 cv
223.418 103.701 223.418 106.731 223.418 103.701 cv
223.418 103.701 li
cp
f
232.803 100.314 mo
232.287 100.449 231.928 100.623 231.725 100.835 cv
231.52 101.048 231.418 101.264 231.418 101.484 cv
231.418 101.729 231.553 101.933 231.82 102.095 cv
232.09 102.257 232.518 102.339 233.105 102.339 cv
233.453 102.339 233.727 102.304 233.926 102.234 cv
234.125 102.164 234.277 102.058 234.387 101.917 cv
234.496 101.776 234.549 101.626 234.549 101.469 cv
234.549 101.276 234.461 101.1 234.283 100.94 cv
234.043 100.723 233.549 100.514 232.803 100.314 cv
232.803 100.314 li
cp
231.252 99.8604 mo
231.252 99.2383 231.252 99.8604 231.252 99.2383 cv
232.959 99.7256 231.252 99.2383 232.959 99.7256 cv
233.066 99.7583 233.236 99.8091 233.467 99.8794 cv
233.852 99.7842 234.08 99.7129 234.156 99.6655 cv
234.293 99.5757 234.361 99.4619 234.361 99.3242 cv
234.361 99.2241 234.32 99.1318 234.238 99.0469 cv
234.156 98.9619 234.027 98.9058 233.852 98.8784 cv
233.852 98.728 233.852 98.8784 233.852 98.728 cv
234.213 98.7632 234.461 98.8389 234.598 98.9551 cv
234.736 99.0713 234.805 99.2056 234.805 99.3579 cv
234.805 99.5005 234.744 99.6299 234.625 99.7461 cv
234.504 99.8623 234.248 99.9668 233.852 100.059 cv
234.07 100.169 234.234 100.277 234.348 100.382 cv
234.502 100.529 234.617 100.689 234.693 100.862 cv
234.77 101.034 234.809 101.23 234.809 101.45 cv
234.809 102.002 234.625 102.409 234.258 102.668 cv
233.891 102.929 233.471 103.059 233 103.059 cv
232.451 103.059 232.006 102.906 231.664 102.601 cv
231.322 102.296 231.152 101.939 231.152 101.529 cv
231.152 101.244 231.238 100.993 231.412 100.775 cv
231.586 100.558 231.91 100.36 232.383 100.183 cv
231.252 99.8604 232.383 100.183 231.252 99.8604 cv
231.252 99.8604 li
cp
f
229.389 98.8623 mo
218.939 95.9346 229.389 98.8623 218.939 95.9346 cv
218.939 94.9424 218.939 95.9346 218.939 94.9424 cv
229.389 97.8633 218.939 94.9424 229.389 97.8633 cv
229.389 98.8623 229.389 97.8633 229.389 98.8623 cv
229.389 98.8623 li
cp
f
223.418 89.8794 mo
224.348 89.8794 223.418 89.8794 224.348 89.8794 cv
224.348 91.8535 224.348 89.8794 224.348 91.8535 cv
225.736 91.9966 226.688 92.0684 227.203 92.0684 cv
227.611 92.0684 227.908 91.9917 228.092 91.8374 cv
228.275 91.6836 228.367 91.4907 228.367 91.2588 cv
228.367 91.0859 228.309 90.936 228.189 90.8096 cv
228.072 90.6831 227.869 90.5903 227.582 90.5313 cv
227.582 90.3096 227.582 90.5313 227.582 90.3096 cv
228.275 90.3813 228.752 90.5352 229.016 90.7715 cv
229.279 91.0078 229.412 91.2842 229.412 91.6001 cv
229.412 91.9336 229.262 92.2119 228.959 92.4355 cv
228.658 92.6592 228.119 92.771 227.342 92.771 cv
226.73 92.771 225.732 92.6948 224.348 92.543 cv
224.348 93.1377 224.348 92.543 224.348 93.1377 cv
224.348 93.4795 224.41 93.7471 224.535 93.9414 cv
224.66 94.1353 224.895 94.3271 225.24 94.5171 cv
225.24 94.751 225.24 94.5171 225.24 94.751 cv
224.43 94.4473 223.924 94.1753 223.723 93.9351 cv
223.52 93.6943 223.418 93.353 223.418 92.9102 cv
223.418 89.8794 223.418 92.9102 223.418 89.8794 cv
223.418 89.8794 li
cp
f
231.705 88.439 mo
232.699 88.439 233.359 88.3228 233.688 88.0903 cv
234.018 87.8579 234.182 87.5713 234.182 87.2305 cv
234.182 86.8892 234.016 86.6025 233.686 86.3706 cv
233.355 86.1382 232.695 86.022 231.705 86.022 cv
230.711 86.022 230.049 86.1382 229.721 86.3706 cv
229.395 86.6025 229.23 86.8921 229.23 87.2388 cv
229.23 87.5796 229.375 87.8516 229.664 88.0552 cv
230.031 88.311 230.713 88.439 231.705 88.439 cv
231.705 88.439 li
cp
231.705 89.2017 mo
230.99 89.2017 230.414 89.1284 229.979 88.981 cv
229.543 88.834 229.207 88.6152 228.971 88.3252 cv
228.734 88.0352 228.615 87.6704 228.615 87.2305 cv
228.615 86.9058 228.682 86.6211 228.811 86.3765 cv
228.941 86.1318 229.131 85.9297 229.377 85.7705 cv
229.623 85.6108 229.922 85.4858 230.275 85.395 cv
230.629 85.3042 231.105 85.2588 231.705 85.2588 cv
232.416 85.2588 232.988 85.332 233.424 85.4775 cv
233.859 85.623 234.197 85.8413 234.436 86.1313 cv
234.672 86.4214 234.791 86.7876 234.791 87.2305 cv
234.791 87.813 234.582 88.271 234.164 88.6035 cv
233.662 89.0024 232.842 89.2017 231.705 89.2017 cv
231.705 89.2017 li
cp
f
112.399 1.69238 mo
106.76 9.75293 112.399 1.69238 106.76 9.75293 cv
110.279 9.75293 106.76 9.75293 110.279 9.75293 cv
110.819 9.75293 111.234 9.63477 111.523 9.39844 cv
111.812 9.1626 112.068 8.68359 112.292 7.9624 cv
112.501 8.00049 112.292 7.9624 112.501 8.00049 cv
112.096 10.2715 112.501 8.00049 112.096 10.2715 cv
105.108 10.2715 112.096 10.2715 105.108 10.2715 cv
105.108 10.0376 105.108 10.2715 105.108 10.0376 cv
110.615 2.20508 105.108 10.0376 110.615 2.20508 cv
107.868 2.20508 110.615 2.20508 107.868 2.20508 cv
107.412 2.20508 107.082 2.25439 106.877 2.35352 cv
106.672 2.45264 106.517 2.59619 106.409 2.78369 cv
106.301 2.97168 106.203 3.32275 106.115 3.8374 cv
105.874 3.8374 106.115 3.8374 105.874 3.8374 cv
106.051 1.69238 105.874 3.8374 106.051 1.69238 cv
112.399 1.69238 106.051 1.69238 112.399 1.69238 cv
112.399 1.69238 li
cp
f
112.842 10.4438 mo
115.771 0 112.842 10.4438 115.771 0 cv
116.764 0 115.771 0 116.764 0 cv
113.842 10.4438 116.764 0 113.842 10.4438 cv
112.842 10.4438 113.842 10.4438 112.842 10.4438 cv
112.842 10.4438 li
cp
f
124.209 1.69238 mo
118.57 9.75293 124.209 1.69238 118.57 9.75293 cv
122.09 9.75293 118.57 9.75293 122.09 9.75293 cv
122.629 9.75293 123.045 9.63477 123.334 9.39844 cv
123.623 9.1626 123.879 8.68359 124.102 7.9624 cv
124.311 8.00049 124.102 7.9624 124.311 8.00049 cv
123.906 10.2715 124.311 8.00049 123.906 10.2715 cv
116.918 10.2715 123.906 10.2715 116.918 10.2715 cv
116.918 10.0376 116.918 10.2715 116.918 10.0376 cv
122.426 2.20508 116.918 10.0376 122.426 2.20508 cv
119.678 2.20508 122.426 2.20508 119.678 2.20508 cv
119.223 2.20508 118.893 2.25439 118.688 2.35352 cv
118.482 2.45264 118.326 2.59619 118.219 2.78369 cv
118.111 2.97168 118.014 3.32275 117.925 3.8374 cv
117.684 3.8374 117.925 3.8374 117.684 3.8374 cv
117.861 1.69238 117.684 3.8374 117.861 1.69238 cv
124.209 1.69238 117.861 1.69238 124.209 1.69238 cv
124.209 1.69238 li
cp
f
125.688 13.5703 mo
125.688 14.145 125.803 14.5645 126.031 14.8281 cv
126.26 15.0923 126.545 15.2241 126.889 15.2241 cv
127.23 15.2241 127.516 15.0928 127.746 14.8301 cv
127.979 14.5679 128.094 14.1558 128.094 13.5952 cv
128.094 13.0591 127.975 12.6548 127.736 12.3823 cv
127.498 12.1104 127.211 11.9741 126.877 11.9741 cv
126.547 11.9741 126.266 12.1084 126.035 12.3765 cv
125.803 12.6445 125.688 13.0425 125.688 13.5703 cv
125.688 13.5703 li
cp
125.074 16.2017 mo
125.795 16.3086 125.074 16.2017 125.795 16.3086 cv
125.826 16.5317 125.91 16.6938 126.047 16.7954 cv
126.23 16.9331 126.482 17.0015 126.803 17.0015 cv
127.146 17.0015 127.412 16.9331 127.598 16.7954 cv
127.785 16.6582 127.912 16.4653 127.979 16.2183 cv
128.016 16.0669 128.035 15.7495 128.031 15.2651 cv
127.707 15.6475 127.303 15.8384 126.818 15.8384 cv
126.217 15.8384 125.75 15.6216 125.42 15.187 cv
125.09 14.7524 124.926 14.2314 124.926 13.624 cv
124.926 13.2061 125 12.8203 125.152 12.4673 cv
125.303 12.1138 125.521 11.8408 125.811 11.6484 cv
126.098 11.4561 126.436 11.3599 126.822 11.3599 cv
127.34 11.3599 127.766 11.5688 128.102 11.9868 cv
128.102 11.4585 128.102 11.9868 128.102 11.4585 cv
128.787 11.4585 128.102 11.4585 128.787 11.4585 cv
128.787 15.2446 128.787 11.4585 128.787 15.2446 cv
128.787 15.9268 128.717 16.4097 128.578 16.6943 cv
128.439 16.979 128.219 17.2036 127.918 17.3687 cv
127.617 17.5337 127.246 17.6162 126.807 17.6162 cv
126.283 17.6162 125.861 17.4985 125.539 17.2637 cv
125.219 17.0283 125.063 16.6743 125.074 16.2017 cv
125.074 16.2017 li
cp
f
10.1035 147.295 mo
0 147.295 10.1035 147.295 0 147.295 cv
0 146.055 0 147.295 0 146.055 cv
10.1035 146.055 0 146.055 10.1035 146.055 cv
10.1035 147.295 10.1035 146.055 10.1035 147.295 cv
10.1035 147.295 li
cp
f
6.44385 143.287 mo
7.38135 143.287 8.08301 143.082 8.5498 142.674 cv
9.01611 142.264 9.24902 141.75 9.24902 141.131 cv
9.24902 140.516 9.01465 140.002 8.5459 139.594 cv
8.07764 139.186 7.36279 138.98 6.40283 138.98 cv
5.49756 138.98 4.81201 139.186 4.3457 139.598 cv
3.87939 140.008 3.646 140.52 3.646 141.131 cv
3.646 141.75 3.87793 142.264 4.34229 142.674 cv
4.80615 143.082 5.50684 143.287 6.44385 143.287 cv
6.44385 143.287 li
cp
6.44385 144.561 mo
5.08887 144.561 4.08496 144.184 3.43213 143.432 cv
2.89014 142.803 2.61914 142.035 2.61914 141.131 cv
2.61914 140.125 2.94873 139.303 3.60791 138.664 cv
4.26758 138.025 5.17822 137.707 6.34082 137.707 cv
7.28271 137.707 8.02344 137.848 8.56348 138.129 cv
9.10303 138.412 9.52246 138.824 9.82129 139.363 cv
10.1196 139.902 10.269 140.492 10.269 141.131 cv
10.269 142.154 9.94043 142.982 9.28369 143.613 cv
8.62646 144.246 7.68018 144.561 6.44385 144.561 cv
6.44385 144.561 li
cp
f
6.31299 135.43 mo
7.27344 135.43 7.97412 135.24 8.41504 134.857 cv
8.85645 134.477 9.07666 134 9.07666 133.426 cv
9.07666 132.855 8.85742 132.379 8.41846 131.992 cv
7.97998 131.605 7.29199 131.414 6.35449 131.414 cv
5.4585 131.414 4.7832 131.611 4.32813 132.01 cv
3.87354 132.406 3.646 132.885 3.646 133.445 cv
3.646 133.996 3.87012 134.465 4.31787 134.852 cv
4.76611 135.236 5.43115 135.43 6.31299 135.43 cv
6.31299 135.43 li
cp
10.71 136.457 mo
10.8892 135.25 10.71 136.457 10.8892 135.25 cv
11.2617 135.201 11.5327 135.061 11.7026 134.83 cv
11.9321 134.523 12.0474 134.102 12.0474 133.57 cv
12.0474 132.996 11.9321 132.553 11.7026 132.24 cv
11.4731 131.928 11.1514 131.717 10.7378 131.605 cv
10.4849 131.543 9.95459 131.512 9.14551 131.518 cv
9.78418 132.059 10.1035 132.734 10.1035 133.543 cv
10.1035 134.549 9.74072 135.326 9.01465 135.877 cv
8.28906 136.43 7.41797 136.705 6.40283 136.705 cv
5.70459 136.705 5.06006 136.578 4.46973 136.326 cv
3.87939 136.072 3.42334 135.707 3.10156 135.227 cv
2.77979 134.746 2.61914 134.184 2.61914 133.535 cv
2.61914 132.672 2.96826 131.959 3.6665 131.4 cv
2.78467 131.4 3.6665 131.4 2.78467 131.4 cv
2.78467 130.256 2.78467 131.4 2.78467 130.256 cv
9.11133 130.256 2.78467 130.256 9.11133 130.256 cv
10.2505 130.256 11.0581 130.371 11.5337 130.604 cv
12.0093 130.836 12.3848 131.203 12.6606 131.707 cv
12.936 132.209 13.0742 132.828 13.0742 133.563 cv
13.0742 134.436 12.8774 135.141 12.4849 135.678 cv
12.0918 136.215 11.5005 136.475 10.71 136.457 cv
10.71 136.457 li
cp
f
15.5767 126.238 mo
15.5767 126.98 15.5767 126.238 15.5767 126.98 cv
10.8442 126.98 15.5767 126.98 10.8442 126.98 cv
11.0151 127.158 11.1855 127.393 11.356 127.684 cv
11.5264 127.973 11.6543 128.234 11.7397 128.465 cv
11.022 128.465 11.7397 128.465 11.022 128.465 cv
10.8267 128.049 10.5898 127.688 10.312 127.377 cv
10.0347 127.064 9.76465 126.846 9.50342 126.717 cv
9.50342 126.238 9.50342 126.717 9.50342 126.238 cv
15.5767 126.238 9.50342 126.238 15.5767 126.238 cv
15.5767 126.238 li
cp
f
12.5938 123.568 mo
13.5869 123.568 14.2476 123.451 14.5762 123.219 cv
14.9048 122.986 15.0693 122.701 15.0693 122.359 cv
15.0693 122.02 14.9043 121.732 14.5742 121.5 cv
14.2441 121.268 13.584 121.15 12.5938 121.15 cv
11.5981 121.15 10.9365 121.268 10.6094 121.5 cv
10.2817 121.732 10.1182 122.021 10.1182 122.367 cv
10.1182 122.709 10.2627 122.98 10.5513 123.184 cv
10.9199 123.439 11.6011 123.568 12.5938 123.568 cv
12.5938 123.568 li
cp
12.5938 124.33 mo
11.8784 124.33 11.3032 124.258 10.8672 124.109 cv
10.4312 123.963 10.0947 123.744 9.8584 123.455 cv
9.62207 123.164 9.50342 122.799 9.50342 122.359 cv
9.50342 122.035 9.56885 121.75 9.69971 121.506 cv
9.83008 121.262 10.0186 121.059 10.2646 120.9 cv
10.5107 120.74 10.8105 120.615 11.1641 120.523 cv
11.5176 120.434 11.9941 120.389 12.5938 120.389 cv
13.3032 120.389 13.876 120.461 14.312 120.607 cv
14.748 120.752 15.085 120.971 15.3228 121.26 cv
15.561 121.551 15.6797 121.916 15.6797 122.359 cv
15.6797 122.941 15.4707 123.4 15.0527 123.732 cv
14.5493 124.131 13.7295 124.33 12.5938 124.33 cv
12.5938 124.33 li
cp
f
10.1035 114.609 mo
5.86328 113.17 10.1035 114.609 5.86328 113.17 cv
5.49609 113.045 5.24365 112.982 5.10693 112.982 cv
4.96973 112.982 4.87158 113.012 4.8125 113.068 cv
4.75342 113.127 4.72363 113.211 4.72363 113.32 cv
4.72363 113.469 4.78516 113.617 4.90723 113.768 cv
5.02979 113.92 5.28271 114.09 5.66699 114.279 cv
5.66699 114.539 5.66699 114.279 5.66699 114.539 cv
5.10986 114.283 4.71533 113.998 4.4834 113.688 cv
4.25098 113.377 4.13525 113.037 4.13525 112.672 cv
4.13525 112.321 4.23535 112.087 4.43604 111.97 cv
4.63623 111.852 5.00635 111.871 5.54639 112.024 cv
4.93066 111.271 4.5415 110.718 4.37891 110.365 cv
4.21631 110.013 4.13525 109.678 4.13525 109.362 cv
4.13525 108.966 4.23242 108.673 4.42627 108.483 cv
4.62061 108.294 4.87061 108.208 5.17627 108.223 cv
5.48242 108.238 6.01904 108.376 6.78711 108.637 cv
10.6289 109.942 6.78711 108.637 10.6289 109.942 cv
11.2661 110.159 11.7178 110.297 11.9834 110.358 cv
12.2495 110.419 12.5552 110.459 12.9014 110.48 cv
12.9014 111.562 12.9014 110.48 12.9014 111.562 cv
12.5005 111.519 12.2388 111.484 12.1162 111.46 cv
11.7915 111.387 11.4834 111.302 11.1924 111.203 cv
6.55322 109.626 11.1924 111.203 6.55322 109.626 cv
5.9751 109.43 5.59277 109.353 5.40723 109.396 cv
5.07813 109.465 4.91357 109.694 4.91357 110.082 cv
4.91357 110.344 4.99072 110.63 5.14453 110.942 cv
5.29883 111.254 5.58643 111.667 6.00879 112.181 cv
10.1035 113.572 6.00879 112.181 10.1035 113.572 cv
10.1035 114.609 10.1035 113.572 10.1035 114.609 cv
10.1035 114.609 li
cp
f
4.80371 102.292 mo
4.80371 99.6812 4.80371 102.292 4.80371 99.6812 cv
4.80371 98.8179 4.64307 98.2046 4.32129 97.8418 cv
4 97.479 3.54736 97.2974 2.96387 97.2974 cv
2.54102 97.2974 2.1792 97.4043 1.87842 97.6177 cv
1.57715 97.8315 1.37842 98.1128 1.28223 98.4619 cv
1.22217 98.687 1.19238 99.1025 1.19238 99.709 cv
1.19238 102.292 1.19238 99.709 1.19238 102.292 cv
4.80371 102.292 1.19238 102.292 4.80371 102.292 cv
4.80371 102.292 li
cp
10.1035 103.629 mo
0 103.629 10.1035 103.629 0 103.629 cv
0 99.8188 0 103.629 0 99.8188 cv
0 99.1484 .0322266 98.6362 .0966797 98.2827 cv
.179199 97.7866 .336914 97.3711 .568848 97.0356 cv
.800781 96.7007 1.12598 96.4307 1.54395 96.2261 cv
1.96191 96.022 2.42139 95.9194 2.92236 95.9194 cv
3.78174 95.9194 4.50879 96.1929 5.10352 96.7397 cv
5.69873 97.2861 5.99609 98.2734 5.99609 99.7017 cv
5.99609 102.292 5.99609 99.7017 5.99609 102.292 cv
10.1035 102.292 5.99609 102.292 10.1035 102.292 cv
10.1035 103.629 10.1035 102.292 10.1035 103.629 cv
10.1035 103.629 li
cp
f
6.43018 89.7104 mo
6.61426 90.1602 6.77051 90.8354 6.89893 91.7358 cv
6.97266 92.2456 7.05518 92.606 7.14697 92.8174 cv
7.23877 93.0288 7.37354 93.1919 7.55029 93.3066 cv
7.72705 93.4214 7.92334 93.4785 8.13965 93.4785 cv
8.47021 93.4785 8.74609 93.3535 8.96631 93.103 cv
9.18701 92.853 9.29736 92.4868 9.29736 92.0044 cv
9.29736 91.5269 9.19287 91.1021 8.98389 90.73 cv
8.7749 90.3579 8.48877 90.0845 8.12549 89.9102 cv
7.84521 89.7769 7.43213 89.7104 6.88525 89.7104 cv
6.43018 89.7104 6.88525 89.7104 6.43018 89.7104 cv
6.43018 89.7104 li
cp
9.20068 89.6069 mo
9.59131 90.0664 9.86719 90.5083 10.0278 90.9331 cv
10.1885 91.3579 10.269 91.814 10.269 92.3008 cv
10.269 93.1045 10.0728 93.7222 9.67969 94.1538 cv
9.28711 94.5854 8.78516 94.8013 8.17383 94.8013 cv
7.81543 94.8013 7.48828 94.7202 7.19189 94.5571 cv
6.89551 94.394 6.65771 94.1802 6.47852 93.916 cv
6.29932 93.6523 6.16357 93.355 6.07178 93.0239 cv
6.00781 92.7808 5.9458 92.4131 5.88574 91.9219 cv
5.7666 90.9204 5.62402 90.1836 5.4585 89.7104 cv
5.28857 89.7056 5.18066 89.7036 5.13477 89.7036 cv
4.62939 89.7036 4.27295 89.8203 4.06641 90.0547 cv
3.78613 90.3716 3.646 90.8423 3.646 91.4673 cv
3.646 92.0503 3.74805 92.481 3.95264 92.7588 cv
4.15723 93.0366 4.51904 93.2422 5.03809 93.3755 cv
4.87256 94.5879 5.03809 93.3755 4.87256 94.5879 cv
4.35352 94.4775 3.93408 94.2964 3.61475 94.0435 cv
3.2959 93.791 3.0498 93.4258 2.87744 92.9482 cv
2.70508 92.4707 2.61914 91.917 2.61914 91.2881 cv
2.61914 90.6631 2.69287 90.1558 2.83984 89.7656 cv
2.98682 89.375 3.17139 89.0879 3.39453 88.9043 cv
3.61719 88.7207 3.89893 88.5918 4.23877 88.5186 cv
4.4502 88.4771 4.83154 88.4565 5.38281 88.4565 cv
7.03662 88.4565 5.38281 88.4565 7.03662 88.4565 cv
8.18994 88.4565 8.91943 88.4302 9.2251 88.3774 cv
9.53027 88.3242 9.82324 88.2197 10.1035 88.064 cv
10.1035 89.3589 10.1035 88.064 10.1035 89.3589 cv
9.84619 89.4878 9.54541 89.5703 9.20068 89.6069 cv
9.20068 89.6069 li
cp
f
7.91895 83.0718 mo
7.72607 81.8452 7.91895 83.0718 7.72607 81.8452 cv
8.21777 81.7764 8.59424 81.5845 8.85645 81.27 cv
9.11816 80.9556 9.24902 80.5156 9.24902 79.9507 cv
9.24902 79.3813 9.1333 78.9585 8.90088 78.6831 cv
8.66895 78.4077 8.39697 78.27 8.08447 78.27 cv
7.8042 78.27 7.5835 78.3916 7.42285 78.6348 cv
7.3125 78.8052 7.17236 79.2275 7.00244 79.9028 cv
6.77246 80.812 6.57373 81.4424 6.40625 81.7935 cv
6.23877 82.145 6.00635 82.4116 5.70996 82.5928 cv
5.41357 82.7744 5.08643 82.8647 4.72803 82.8647 cv
4.40186 82.8647 4.09961 82.7905 3.82178 82.6411 cv
3.54395 82.4917 3.31299 82.2886 3.12891 82.0313 cv
2.98682 81.8384 2.86621 81.5757 2.76709 81.2427 cv
2.66846 80.9097 2.61914 80.5522 2.61914 80.1714 cv
2.61914 79.5972 2.70166 79.0933 2.86719 78.6592 cv
3.03271 78.2251 3.25635 77.9048 3.53906 77.6978 cv
3.82178 77.4912 4.19971 77.3491 4.67285 77.271 cv
4.83838 78.4834 4.67285 77.271 4.83838 78.4834 cv
4.46143 78.5386 4.16748 78.6982 3.95605 78.9624 cv
3.74463 79.2261 3.63916 79.5996 3.63916 80.0815 cv
3.63916 80.6514 3.7334 81.0576 3.92188 81.3013 cv
4.10986 81.5444 4.33057 81.6665 4.5835 81.6665 cv
4.74414 81.6665 4.88867 81.6157 5.01758 81.5146 cv
5.15088 81.4136 5.26123 81.2554 5.34814 81.0396 cv
5.39404 80.9155 5.5 80.5503 5.66553 79.9438 cv
5.8999 79.0669 6.09131 78.4546 6.24072 78.1079 cv
6.39014 77.7612 6.60742 77.4893 6.89209 77.2915 cv
7.17676 77.0942 7.53076 76.9951 7.95361 76.9951 cv
8.3667 76.9951 8.75635 77.1157 9.12158 77.3569 cv
9.48682 77.5981 9.76953 77.9458 9.96924 78.4009 cv
10.1689 78.8555 10.269 79.3696 10.269 79.9438 cv
10.269 80.8945 10.0713 81.6191 9.67627 82.1177 cv
9.28125 82.6157 8.69531 82.9341 7.91895 83.0718 cv
7.91895 83.0718 li
cp
f
113.985 209.24 mo
114.087 211.4 113.985 209.24 114.087 211.4 cv
113.829 211.4 114.087 211.4 113.829 211.4 cv
113.779 211.021 113.71 210.748 113.625 210.586 cv
113.484 210.322 113.297 210.129 113.064 210.004 cv
112.831 209.881 112.523 209.818 112.143 209.818 cv
110.844 209.818 112.143 209.818 110.844 209.818 cv
110.844 216.857 110.844 209.818 110.844 216.857 cv
110.844 217.424 110.905 217.777 111.028 217.918 cv
111.2 218.109 111.465 218.203 111.823 218.203 cv
112.143 218.203 111.823 218.203 112.143 218.203 cv
112.143 218.455 112.143 218.203 112.143 218.455 cv
108.234 218.455 112.143 218.455 108.234 218.455 cv
108.234 218.203 108.234 218.455 108.234 218.203 cv
108.56 218.203 108.234 218.203 108.56 218.203 cv
108.95 218.203 109.226 218.086 109.389 217.85 cv
109.489 217.705 109.539 217.375 109.539 216.857 cv
109.539 209.818 109.539 216.857 109.539 209.818 cv
108.431 209.818 109.539 209.818 108.431 209.818 cv
108 209.818 107.694 209.85 107.513 209.914 cv
107.277 210 107.076 210.164 106.908 210.41 cv
106.74 210.654 106.641 210.984 106.609 211.4 cv
106.351 211.4 106.609 211.4 106.351 211.4 cv
106.459 209.24 106.351 211.4 106.459 209.24 cv
113.985 209.24 106.459 209.24 113.985 209.24 cv
113.985 209.24 li
cp
f
115.708 224.021 mo
115.579 224.162 115.481 224.293 115.416 224.414 cv
115.349 224.535 115.316 224.646 115.316 224.748 cv
115.316 224.879 115.396 224.996 115.556 225.094 cv
115.831 225.266 116.228 225.35 116.748 225.35 cv
117.243 225.35 117.608 225.264 117.844 225.088 cv
118.078 224.914 118.196 224.727 118.196 224.529 cv
118.196 224.387 118.126 224.285 117.986 224.225 cv
117.843 224.164 117.56 224.127 117.136 224.117 cv
116.517 224.1 116.041 224.068 115.708 224.021 cv
115.708 224.021 li
cp
116.467 220.33 mo
116.264 220.33 116.093 220.412 115.956 220.574 cv
115.818 220.736 115.75 220.984 115.75 221.32 cv
115.75 221.756 115.843 222.092 116.03 222.332 cv
116.173 222.512 116.354 222.604 116.575 222.604 cv
116.784 222.604 116.956 222.525 117.09 222.369 cv
117.225 222.211 117.292 221.965 117.292 221.631 cv
117.292 221.193 117.198 220.85 117.008 220.604 cv
116.868 220.422 116.688 220.33 116.467 220.33 cv
116.467 220.33 li
cp
115.75 222.645 mo
115.519 222.531 115.341 222.375 115.217 222.172 cv
115.094 221.971 115.032 221.746 115.032 221.502 cv
115.032 221.129 115.172 220.807 115.455 220.537 cv
115.736 220.268 116.098 220.133 116.538 220.133 cv
116.898 220.133 117.21 220.221 117.474 220.396 cv
118.274 220.396 117.474 220.396 118.274 220.396 cv
118.393 220.396 118.461 220.4 118.48 220.406 cv
118.5 220.414 118.514 220.426 118.521 220.441 cv
118.539 220.467 118.547 220.512 118.547 220.574 cv
118.547 220.646 118.539 220.695 118.525 220.723 cv
118.518 220.736 118.504 220.748 118.482 220.756 cv
118.463 220.764 118.393 220.768 118.274 220.768 cv
117.783 220.768 118.274 220.768 117.783 220.768 cv
117.938 220.967 118.015 221.219 118.015 221.527 cv
118.015 221.879 117.88 222.18 117.61 222.43 cv
117.341 222.68 116.979 222.805 116.525 222.805 cv
116.338 222.805 116.147 222.777 115.952 222.723 cv
115.831 222.828 115.749 222.918 115.706 222.998 cv
115.664 223.076 115.642 223.143 115.642 223.197 cv
115.642 223.244 115.665 223.289 115.71 223.334 cv
115.756 223.377 115.844 223.408 115.977 223.428 cv
116.053 223.439 116.246 223.449 116.554 223.457 cv
117.121 223.471 117.488 223.49 117.656 223.516 cv
117.912 223.551 118.115 223.645 118.268 223.799 cv
118.422 223.953 118.498 224.143 118.498 224.369 cv
118.498 224.68 118.352 224.971 118.061 225.242 cv
117.631 225.645 117.071 225.846 116.381 225.846 cv
115.85 225.846 115.402 225.725 115.036 225.486 cv
114.83 225.35 114.727 225.205 114.727 225.057 cv
114.727 224.992 114.742 224.926 114.772 224.859 cv
114.818 224.758 114.915 224.615 115.061 224.434 cv
115.08 224.41 115.22 224.262 115.481 223.988 cv
115.338 223.904 115.237 223.828 115.178 223.76 cv
115.119 223.693 115.089 223.617 115.089 223.531 cv
115.089 223.436 115.128 223.322 115.207 223.193 cv
115.286 223.064 115.466 222.881 115.75 222.645 cv
115.75 222.645 li
cp
f
122.41 208.791 mo
119.072 218.645 122.41 208.791 119.072 218.645 cv
118.527 218.645 119.072 218.645 118.527 218.645 cv
121.865 208.791 118.527 218.645 121.865 208.791 cv
122.41 208.791 121.865 208.791 122.41 208.791 cv
122.41 208.791 li
cp
f
130.404 209.24 mo
130.506 211.4 130.404 209.24 130.506 211.4 cv
130.248 211.4 130.506 211.4 130.248 211.4 cv
130.197 211.021 130.129 210.748 130.043 210.586 cv
129.902 210.322 129.717 210.129 129.482 210.004 cv
129.25 209.881 128.941 209.818 128.563 209.818 cv
127.264 209.818 128.563 209.818 127.264 209.818 cv
127.264 216.857 127.264 209.818 127.264 216.857 cv
127.264 217.424 127.324 217.777 127.447 217.918 cv
127.619 218.109 127.885 218.203 128.242 218.203 cv
128.563 218.203 128.242 218.203 128.563 218.203 cv
128.563 218.455 128.563 218.203 128.563 218.455 cv
124.652 218.455 128.563 218.455 124.652 218.455 cv
124.652 218.203 124.652 218.455 124.652 218.203 cv
124.979 218.203 124.652 218.203 124.979 218.203 cv
125.369 218.203 125.645 218.086 125.809 217.85 cv
125.908 217.705 125.957 217.375 125.957 216.857 cv
125.957 209.818 125.957 216.857 125.957 209.818 cv
124.85 209.818 125.957 209.818 124.85 209.818 cv
124.42 209.818 124.113 209.85 123.932 209.914 cv
123.697 210 123.494 210.164 123.326 210.41 cv
123.16 210.654 123.061 210.984 123.027 211.4 cv
122.77 211.4 123.027 211.4 122.77 211.4 cv
122.879 209.24 122.77 211.4 122.879 209.24 cv
130.404 209.24 122.879 209.24 130.404 209.24 cv
130.404 209.24 li
cp
f
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: ArialMT Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /ArialMT def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 50 /two putdup 65 /A putdup 72 /H putdup 75 /K putdup 79 /O putdup 80 /P putdup 83 /S putdup 84 /T putdup 87 /W putdup 97 /a putdup 104 /h putdup 105 /i putdup 110 /n putdef/FontBBox {-665 -325 2000 1006} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings14 dict dup begin/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7C8A936AA182F5809A9> |-/two <1C60D8A8C9B7EF322B3EBC745A0BBBAC411180C089B13E648172E07912D1BA378FD965B994D86994B65582FD434477626CA0A7A4AA353654D41B127367E2BE1B714FF63CE28DAC81B61A78F94AD3218D524244E3D9732CC5A4165C96E7ADC9605690D1ECC190DFB9D5017E24EDE1D6B83BBD5FCE6B540AFB666DD6E17D0C90E5976007C04DC3CD2FBFFCA768526960F8706ECECD> |-/A <1C60D8A8C9B64EDFED26B9E21A4F64848088903AC9891CF791BDBC4AB29ACC8B3E8D13924A7DDE35F09AC5F4A8229C87124C732743268600EF8D4582208BD16D82> |-/H <1C60D8A8C9B6079F62EE7568E8B09CBA01F57B4ACE6DA24AC6EA79287DF31270F7DC42D147A6FAB1DABB6C> |-/K <1C60D8A8C9B64EDFF4E9C0F6048EB723B0CED8EE1109108A02369C8B45382285654732A05ADDD12E99CCD504BC058489833BA3AE060EFA> |-/O <1C60D8A8C9B6FF86E621E1FAD9CC02A23AF5AAF7451327A9277DAE8170AAC8E603A02E3EEFF561DDADE9FD6F6F16B77EE709DD797791A73F1C532C58482F9C51E1EAE7EA6E4D820E6AA1026E7BE345B1C97C5D9EBBEF4840C4188F96B5380E7625249BBAD172254404F6F1CB17CABA1F131B17AAAB56C5D3B94E3AC2C2E9F0A0D079C435D0249DF6C47E18FCF00E7FFE3C519BB35DF797EF47286BDCA762289BE1> |-/P <1C60D8A8C9B64EDFF4950CC53012D47AE97D5586315BA2F5162B63CEC117C5379A1B3DB174CB2C739C68916A1E99A346AFF71DBF25658867D9AEF1BF3C47CE1BA73978E8D0D40E52B85A56E08A1369D85E15B0A0C517291916FF6E61D0EFBF59B4862165C7DEA15B42BE3811C2CAA25C54> |-/S <1C60D8A8C9B64EDFE3D078722A65C31955939D63AA5C8A4945719B5E558E3B73A676CC12D1E18D93A8DC67C074D6E352D426981DE76F8EC4CFE5DAE051BE47753A7C234C4B8D7D9F50292A61882B5500CC701F878FE626CDC6D4C322BB391537921D673F5AEE3EC19E36E7EFEC0F06A0EA4EAAB6BBA94DDCD11A6A564B13B510F8C915848233B82F046D854DCD4F1639F149305DC73D3C68DF8AEB47A96A30E55CF8BAD07FA2825BCE0D675F1CC2EBE61B07B772130E23119250F1EBF8FE12A2098D9F09F3F21BDC41666CA4A0BB70D5F0A750B44BB93A5FBFDD2BF8DE450B277265536F77D5BD6F44FB72FF2E708C60107653AE44BFFB26AFF8> |-/T <1C60D8A8C9B7D8BE16D2C1CA7ED2E06F707C0E9530AE37D06FF7501A595D3927> |-/W <1C60D8A8C9B5D6EF420A3AC101C9354A948DB23A64166EB3D55EEB13F0DE3A88231C2286900994060E46C1096C7ABFBA281AAEB86123AF398A1FE8A551414253B8F3844EF59084BCE1B4D5AF071FD672A0C8C15E821130EADB430FA7E525278C31C213B6FF1A25> |-/a <1C60D8A8C9B7EF32244AC11AA6BAAA29EE8C78E0E7206F4A2776A2D1EA7DC8D9A28C62ADE3B609CF5E2EE23C64D0B75055BD249ADFEC7B4224D040D883CA6747571955349CF8AD17E94E6FE5D0259F4D55623D4DC5C3CB4AC64A7A87DBBA48B7420D7990F3C261DB9838C5B90BF72B82C8238A1A58FE8E6137AAFE2405FD710F7ADB95B4F576668A6DB104942C88ED8D01E4E58188F5E32A24B5B964D5CEC10C08F76C0F472E84A0FB6EB5E37AAEE233DE54C212B0A012D3E20F864B2D53463E221F81B784B6F7BE81FBFCAE6785C2430454DD81C436E0A516BF8C8307B2879FF86378629C5EA7E586D83C83550D2E732930F7FE3BAD07B86C81E024D177B5D88A> |-/h <1C60D8A8C9B7EF322B3BE19FB964E037672C8A279BC86F7B9BF0C8203E131450D56E388301CEAE43162551FBE05CABF94DC3B5DDFBB4DA55D11470EBD41AC970CEE2D2EFA88D51157B4EF5536CB673423CDDB06FA774D27105AD2B1AC2DFA8> |-/i <1C60D8A8C9B88C087228DFC7C7ABCC71B868F57EDB285655227000619B171C8A80AB> |-/n <1C60D8A8C9B7EF322B3BE19FB964E04D2DB06D4930CA5D8F41D2EF3A285C0BD536CD2C57668EB9E30311BF9A2872DFB44F2BF2A4683B5D66FA01BB1CCDADE9C8A9EE2CB010715D3D6DFF0E843CF77C87A07D1DBD0482675E3CA1DAA2A5203A8015DD09B7CE> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/OIBCDY+ArialMT /ArialMT findfont ct_VMDictPut/OIBCDY+ArialMT*1 [50{/.notdef}rp /two 14{/.notdef}rp /A 6{/.notdef}rp /H 2{/.notdef}rp /K 3{/.notdef}rp /O /P 2{/.notdef}rp /S /T 2{/.notdef}rp /W 9{/.notdef}rp /a 6{/.notdef}rp /h /i 4{/.notdef}rp /n 145{/.notdef}rp]OIBCDY+ArialMT nfOIBCDY+ArialMT*1 [8 0 0 -8 0 0 ]msf127.092 115.59 mo(SiO)shOIBCDY+ArialMT*1 [5 0 0 -5 0 0 ]msf140.428 116.59 mo(2)shOIBCDY+ArialMT*1 [8 0 0 -8 0 0 ]msf163.862 103.717 mo(OTP)sh130.1 182.764 mo(W)sh137.354 182.764 mo(ahn)sh135.16 156.217 mo(KA)[5.33594 0 ]xsh185.075 149.557 mo(HS)[5.77734 0 ]xsh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/OIBCDY+ArialMT*1 uf/OIBCDY+ArialMT uf/ArialMT ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 14.0.0%%For: (Christopher Royall) ()%%Title: (angelHSZnoExp.eps)%%CreationDate: 16/04/2014 06:31%%Canvassize: 16383%AI9_DataStream%Gb!R&H!_LPZ7u3*!PX2mO?hHE<HeO:n=#H#5Q]V?@iKA@2Xth5AH$g;qcetN;S/E0k2-!)q`L9,@*5<DWDk?IQ.0)tMm^rKf^02F%CSQAq<r=eT"DL\hJuB</l,)H>oD[M$U^UnlO/!6t_tDMPQ,[^#3jXb$E-a2ZFaB6CI5De#-_$CtTD#M[WdP63Zn%bpK>Hd?8o;rC%S3'GKUYun`X5eYUnES*jic''d3U$4Ko*En&pd_ALkd<n?MtXNPeie\?5H*%T'Bfld`m5(M*HhXnDXRS:m<*V+i9L\uOo1luLV;pd%"pjjLkdpcYdn=ljRh]j)M7p][h^Z`I)U\jD#Qjd_H+o.c94-QL:A^7>\395?L>S;J9QaDk2i#)i2T)41kQ:am"CG1J]p&/+0P*-m%((3<$QRb=0V6YT-J-e)2'p%&M)u>'^Q_,1Hr,9j#s')ki-i=r`?j<U"K7aAO&b,P;X$e[i)eaX!$MmE:,RX:EGB#WV:OAl[TpJ`q%/6S&$-]J;972S=r*lJd8^.8mO&uQ*:9KeI9AmDB.]taEW^GeH,3rS#Z1c]'.*qVOq!nHi5Yl@LdlQD(Xb96H.djRudbI=fDDu=M*%8&YcGP]?"jUMb!8F0/$@#&TlX=%MtI&WYT*e(tcS_ItX@l.AC9q5`,RMnShVhKYcoAO#lAHc)W+HX^0tPrKsJqFOL\ISpId93B#P%B$MB2EnD4u$;DAXiW89+rj[I3+)YhROrr#irN=[RTUkWa@X:1[rla@ejphSVSb@f,><hm[Iq@l[%(nX^%Z\hH(WXF:+/KYO>qcPo%^h]V'_a]",#-\p>;<<)l+-kQP.4uqXre2Np<!n+e)?-_h"WE-j3t1Z60Z7nIOM>Y?YVimf$F,i4^Q_&9V%?;!<_I+<)<,0EiahNh%>A"g_AJnt9-iAg'of?R4le&LLa)C6c`+cXKgK$rrCu&jbpT54?@?-a_k(e<EDm?-d+,1/]p_0oO9_]:+E(i#brXMGO57n,jKKjJ3%+pi.FA&=l5(QJcN+siNg;oTF.:E2=m7OX9'qdaD]s+lBh_OlY5C*?:5#<?E7ZP6P7pleqQaI.D;SU'8PO`Qp8_;Kg!L#^(C8;Uu@%8'Tr]N8\]n_XY_VZW+FdNXpX!?T:*<J,IEY,6WK?(6/oTngq)4Y["_glqqj)3>_XV3Fi%jlA3E"'=mVRR=""bq;QjkZHO+pa?RVZ%d>;Jpkccq*R_Qi3iD7C$rPnB49Xl\R6l[3&_P1_PX<!THpV>K73\7idg4l-(VQ_\o\r\p`\MJF\FmbUXL7HGGaOll(`0/uF3k+;@%q&a\'/!IB/kF?,$'O(-ip"-?iDR6PqX4=@(Od"=Deo&l^X+/dUlB&)h43JgZ3tKDp8.o-2BaCoZYOp"[\Y\bAoFHGX<V5t!+Q.2)%DuLPAr3uXLrtZC1Qm)/^s%="(g]$>bC!(q'WUubHJ(6#u@t4*b>)iQj^\Qd(@\^aNqj[UCS,Bboc2TotO6nsQ*WG,FjhKn1rXIlq%U3[N_)I^&(Wi";\U"(t0n0e1d87MLf1m1<9+S\#.WbIP?%@EPQP-eEf\^a"pILg9%)@&e:^W#n46F7G9+GBX3G2+#8URmi6s(%SJ%F!LA=],(CJ>>qR,e!+b^MP'2@oC)9Q)IB4h;eu6L0?5d93qpbV^cnteYD*spHYi43):"jCL+l5OTer/=IU]9">go1;5k<C68AVKd%'NcF/2bKHaj8Z49]rI$`.0k^K7G,I$9AJWrs21Ha5!)7_'860]gGe_t5;g*4[6pl8hZVQ$#VNRJ3V'1FH^]BAgnfWC&tJ(aB+09b%L'g.-1C1nUG+:Z"3!.80cF:Ub43OCq6DL-I_OLu]a;^.3B`!X*/c*8(_-0<L!&F:XlE)B`9JhE:>+"')@F^ULV'TthNKFVnQ6(+(%&EU1R=W"U@6fCngNReZ'"ofs"]>%3Ib.kL3Df/kSc#nHkgijZ:>J)#&9XID9)&9>(So<AH,TE4K;9>`'2%+p"q0!l>[<#b5A%B%b%GL?b,i>gu',n5`WSs`gDSE<jVTHKi48G#!h[/Pl(U@l=f]@F]8X7U8U":>1q<LanaNd?AcIB=<F=@m;dKQktfBrRIerXM9,B!ErB%o4gpDb*09T(\3_YBe>;,H5'R'0s<>,#XQAm;ifO'E,SNfEJ@;f]dGq9N-W.dRe"@Pq@P1uitI_F:9%G6V.%'W[[gJ+\$l(CB9YO(%<AU_q`ca_]9KpY&"knRVcb`j(g&2L:;mG=u2%UN\2"aP@6Ne!(X$Z2/ZQl[_R<g,/fVOV^_E.a<&rD<N>=8&CVR.T9Rp%RIPfCRL%)HLqN'$9?Agcj#`Ut\A51jYP:%/Zp1SnY5F*<hJ`/.HZ;'B(ALdnoMK>//`K&sYFHV,[s:4%X[`B'BL+Y7f]k*6PBuPK3.X4f>Nr%1a5*?>#+97<cq2P'f`?S8PT:jFL)?H:D)nQBaK`\>>UBSZ.n\[4P.JIM+VI:+G4DZeoSZK_Q0=*5^V<Z8XlZ>At%C1VKZpk]<^7t%CINCn*aRFJ]uN6-iZ.iM).7@,cC'OX,2O7;O/OT!<1%aX^9Fbc8'X@,eHX)<&;keQAVS5@n"JaG0hpMu=AE:!<[ps@N-$l<<'1])%Do^k4'(:s-$[O@\lj_0KLjQ(d+5:8<H9`+I$=Nl"mV99g]Z/rV=J%nNS-[H\.uDBf[+IDqFZnVQ.@%T<krKl^eq>`^*:f\>3To:6%"?PUXl/6A7N@/.X""erLe<]cMlLTCE^LGBr-0kQbEULG-11C^BHrhU4&5SXp(J2>La!(>h5^D-/.r:.@K'52e&b9&.%JWUkm=hF=%NI"Q)qI4;(=Ztd#Z(FXoo$SFSkF#`S1ks6.GT!u]ETinji^OcBh<*843p#d7+sEVO<K0E_5%SR<TDU-OC<o`B,ABo2ob!qjR`qds%2sUeGVTQn4A6U!bLMO/UCi$E$>j1Z^Fo6="EI_>sgmY0VY>eQ+Gb3omk]icCo>]SV.M:D_X,nofN>.1pdol!_matm1]p`#89"pJ4%S"B#/itOQZSo;4GMF9iZ@VI)'eNKQa&1<ofgP<CB8n9/m/p(Z@]L2:<#7\"[SN^2*fUdIIN/=T=RS?qYX>P>&A.npi>W;2^GeVNp%c0>[@5h:#H"DM2`b=T'@YUdjcY]a9m3ROkMaMah[oGe&\V(-h]N[BU<D03m'HHhj.J+9hOp/a-77(qkVUoJ!(S-*Pb=Utu)g6Mqh%4lbB&]3?TrdEaV\,PInGH_*O`F6gSsP4jA,MOF*#T-ekIK!'1\fX2r;SR?iEh(N>(&<2`9_Vgt3.:iuWU;3Jq1fHJ:fni6EPcPsD%'eQ>G*Ad*jkhCtGED=m6F*qHpbqZBX-^fSV=GTlrH,A9QfeF]nApmb"X0k#&^f-PLBJF:MT^sW6B2"bNT&DYoeLS?OdaP<CM/nRk%iOHjM86giI7n\o:8ZO:[V9%<tVPEl?g'?:QPl4KqV"W1;MH/<'_f)9/qmTl$Q9)EIh-F:SF]IfFBmU"=cg:SVpg]>u][Z5Cm(5##%m!WSB2*7D5]fB7^YX?I]37@G<D49#5V.(0N?aDqZfr5Y\>L,D!3gpu1P@a/m*Ah\t>nREI<io6=YHtjUDdj?dOYM/PRV,:BY'[UB%*#kRLe'XB49uQ@m=Ge<0'QtWm2%=8R[Ua$UA(8n*bM#'p@J:B(J2e=GRbWqc*C^(7D$!=9P80S;l`oNB`-R<D3@hT_H\J_6F8i/B%2)f3s%\/4ooms.G51Ea['tsJ]M_B,?)pB\kHF/0Pl_L@5'!aEG#0Vj6?B86\Fggs(#'P2b)nAP)`iCaNIQhfZ&\l1"\8'V?n6M*W%fBGbl^=Y$G%=0\DH01^aYZcWZk_6;'29^G$_47h(H\A_%Ek0n5RnS]1b"KAI8?lG1@TY$e7QX>^XAI*0fIPR^21mFij!]Fk6tRKQ%-,d=0po-13@59bef-#-\:ZEd_6aU(g%a9Jh`>5/)`Z_]"dl7Qd/iF#[i\5.J(DaoI=$HMs<[oj_hTb%6aAAU;5SOp9E0NA/#[mqE%m)Ub+138=)GLH,20CX?O;WXDqGo.,7#K8CLXDU2.*&$;EE#,b$\q[TOC?WV[H2hKJ_j6qQfO4`:.8(o=!0d;a;A1,kA'heN]`9S;%j9Q1W%A`I5&_P3?/:B?(k7M7t"Jk01pg5%Q.-o^cjkA&2;3aOd`[Z#K%<S5;N)0[3=4I_e%J1r=,M=$!#*+RX"`W<,_mi-V<jat8%rgt9jB?Zs>Z+Pqg9Kq.'ZpljO?qt-XBoJJ!Wq"a382[3E$&T_:6-;p1MT,_+FP^!%*DDuGPt#']lVHJUUQ5i;T96T!d/$&^&=9Gr%<E51T0?JG0NGg588<2L!D)6?]GL3BK%^@*\/O:.0,+(Hta(an84U8%EA0$:^Zl84#MnF5UOBS]`B<?('!CToH'd6YWaU.9Scq;*.%6_=^/E;1pfRok;d&BQe0'N,VLIDbnPP'RRI?lLEEI')6U>''#-<=QmaL;"Qc6SP5GrrZJl;L]i^f#*_$XR?kS1@u5-$201gdr#.b%I"fs,b+$%)N/05.KCJ;]];5AF]<:pE]FN=9a"=M>5W;/ZQGj`%(Ab3Z4oC8F(oP(TZ]ra?OUII+p<=J*&E]O[cZ@BoZL".K[;^;L%oJpR_;q1^N="*Dr0UL-2n:iFqk8f!;,g#=OMV^YI<Rf9>/T-`bDK-pM.u%kmRfe\h/)e!k=,MrD-/p#rCX?E_CI=sDGOQKG#@*r\%#>&bq>g'Ct#ag$Qmc9IZdgC63d;bZL02^'j>f$@j^(kC@KaNce2qGInVcY_S64L7:H$XO21nNQJN>GIB=UXsWf>ktMbAd#lk]Qoj%j36\rDF'+i.d&+tAt$AJ2&31GEq3PVf;qVLH`B'_2Rea92(r,ZB=+c'm`At5cZ@pDZ\@0*7J;ii.aOad$4Z`gQK&i1qd7n:^lE'n%T#^+96;+h&3@D_MLUuZDf"3cdiS<+*bLpqs>Jn+37f'Yo?1D#K5;ogtHL>BmFfsSA;aRBs@t09.3L,lbLtS7rM99*!8k_'k5&=#M%*Gm9&Z(,#JAt>@=@67,fnjBa5P>g((SD+da(WtWl\Vjj6'$(rtA?V0Cm\`P'F_$]SB#Z(K)>1PT\R/dY%]^[CCi=."hm%#iAB19G%V8Q*NEh^khS(3hN]'kC3o-V&Q\C_dEnKK3-WfJe%[cp2_3$+#KK@),tB0Od'LV;s=EoG2.Qu2bmNMaB\Is=$<<ALt%3c=uJ_qU=n%eS`,\L2SCXeM2Hb;=F.grP>/?d;4#=e)&+1Bn+LsD<qYa_T"[dU<P*'U:/J;oZ*NU`Q=eIO,^TeiV%+4h@\a1C:URrj/+u;C!SX'%1\j5poGsI9_&3m]KoH])NYm!$i/S66Lfp-#lASSQ(3O%qAoPBLe'm/uUC.M(H5dldpVpat)\6m%P?nK4enuJR#(tcS")gL.Xin$[%BQ;E@G)lkNV(pf1#&;tRcKOiF\:8f_h3a5Wh;1SII(mEZR-rO\UM72]Z;GIVlq[iQak;7H>n1J1MuI[-OlZ8/hJhLa2@j+Bi5tH8%\9lX+;Z1#75@:cFS_4#C&;2sWFmm(X]a51S48O<6dJHFHd(Z06TO%LkHN4LKX-:@*-F_(9kmXH#G;5NrH7)Yg(JCJ])"]J$jHIc1%VmfObaf&rce%_=j,Lhia(KfDT?-k6&A.UI-Ps:W_rFOprm.UJEUOj>V)4>t0T2*CCT$c\:4<dO7V&6r20-[m0ERKUCC\<4L2_Ler%;&9t#k1ZuEj7]9](o0@rFa>s79gD,_2QDdp2P&/oer6J7Y0!EkAb`F/Y.FmPQ]^tZC#>U3j5+F-GDu(;-1d/3lJbK3-N+CO2,D.Z%]/)p)+86VSh4Y"g9:ArS_T(8FGhO4b/dC^r'\;5VfK8!S[%Z<m;3NVka"Ml]9kG3Tc,shsP-</pR;*3n,CF$3ZgpIJ0k$ZDpp)'9%%JbnM]cVZ7!atVqH0&^%lQ,r7ln*U9?r\l9$:MuT+G/J==aL-uW/^fG"I?jqO0c'0fRs6JZ.I!P`'5%8eAq4cl[&tEGP`a8)o2IW%4nc+"3?E<U*E`8gTK#A%2Sd@-2YJeMVsVWYT>_bRfQ"#mr%-N7?UBBpBJ-T4UX:#SgQfR8["?03qIa_kg8b@=LWBQofcQ!!/riGS%*uk,>2tE>)pB*g/!:t`-iYPp.i]$+_K>@u1H8Zhh/pE'uUP5OZGBDUBn_dm`Vj75@?XU[8.n^dg598&Ge)#D_J%9qYU"5l"mT'$T%BM<oun!dN?H7,KXKl,,^k4#S2@!(Xp2%WkBPn39PjisS3#45iG>TpVN][qq0m[t"EZEu4M(.?p+ZV#'7<bPrUnt12R%(hqa@0`E>%(ftJ4g#T5T1`?f3g&+p+\crf^nc*h*EBjtfqa2,qYpYMbhc"Y[rEn.a?sh^lI/1OFHG'bl.JY(a:0@fJhj^54]738Sa:e.n(KR.J%a8oJecCfCV#<\W:l_pL6^^PEQ&]s6=DFYM0p]Oscn>q&k,F[)f(1A7&Jh`^BfCZ2I?#LB4rW]"0Rf3>'^Td6K#i6!g;;$W=%7_P$%NS!QU?=e7fj04"6#$AV4.f0T45?#VBq."cf5(`Lu&,br!55YK/hj(/2Wq,8@=6TeYj'0Ct#`\nSVQGOZlj5'/H]GKeqSBd^2t0=5%![31tIc15<LMq)qT^&WajBjVaP!;X-Q2ZbAGgHZ8)WCkco\fMqbg&H)85H=8r9$E*H,kQ__ElGN+hdh).^THAgrV"(Oq@U5?1gA[%MAI%kq>W8g#gECR+Kg!Tk7Tdsr37DpK?iC^II_[<j$31FMW6CnD!]$j90f0P9DNh^*d9+THJm8U*"QYc*`iBmX)-;$=s0F*=1U`k%HoUD]O(Qk`.IY%'T_9`XHit*rp?5pj7eU=WJ(n`LR"JI'0NE&G(e"&saj6F0`u;KW*(3)=2:Fhp?,54SK)<i\TpOeLIl=un;-hL>%i(sV@)a[X_mL;7-J:i<[1?nhFG=sQiQuAK,B5ffhR_eg1)**6:Tf30gkc"6:Ba'*KC&>D)!:SQ6T-alS7XZ\e:t]Up:M4P6=:[lf%1>PT1?9pP)]5Y]@G3a+)TgCaWrK&CC"N8KjJjuoaW`M28LmQ!Nkc`k<&iG/:e2Fc:-mcmDPpm.4HI@BO[UO@8Rp;$0JIiS"N4/L'%'o_lW6errkF-15m-66:e$iFq1Q/adtWuX@Uq=PS=$8@%k3Ar4NUZpQagTUeGY!j#9Qi2'/cUu^_ZJFon[Cg0Kc5F!ClrL-ml,`(7%EPZ:Q9A#TOT[=R^6/1\>J#2]R'$LEeah@*`7+Uh]7alc#Jl*<cU*0.&n?;QHcu?8[n^ZL^;7BVA^4?$/>RZAVobn*_gcpNA=%`Z?%a)RTRrhi?c2pccQ3bK"PO*bp`7_Zh`dm'1&3(jd:P95:^a-/)f]t((k=`G+&EWt=H/3hD$,kopjV:#DEY'18i$t'<-6[?"K"S9B"%1&p'L*VX:JoPZHB:_'_>CgCs#T8W[*2#[GC8bgn0i`>+.\&%%5NT/hTX8h.4hO.*8UPo/OV>bt.(#/ZPeq6?>gT0oFS/uQCg?:;b%<t7mi[d*WP^+SV40)o]hq0uh<:/:ff?b@?XLR5hfd-pniDMs.#?7hG"DgU#:c['hZFIO]pbl=a^%`4%ZP]amRrpG!.B=AbE7f3dX%8mVXD_l3RiAjh.Je"a`\S)#c[J)&2Fr5T$d_<"\73$(f1ftic4h^io>;&.j`0A-*Bj;j7mj%bZl;YM9jqI,$Q:U>#fS$ore$2ms$%aSq*FglpOSD7%JP?7jonEk6AF)a&%7)l(\2?4kh,9^(4dXYZ>kUJ?/dZ'UC7+rm;CKY;-grFk"kpDhc1X1PLe?m)G5pV$)"hrm!N%c,L`_/tHNHrjs(#Uas3/MqaNgm1t0*)3)8ADG`6UNRsq>mVC]S/.G*-Ti^Ih.C1q$d,>NFo#BHo:oWm>2P3OMF\L`DFTV%!<=(cS%jc%j3Hd:Esgrs%VD9^_ZnE:s8S9T5%H0i(hEA#;UNV5'rLrY)!M"7hBNGaqdD&s\R<X+M1[1J5*q`6ldkb^jU=Y\Vf_TIq/d;L(N%?GtXaAf9L!I(?"0Ol;&N(cFFM_18_8jlApAFn$g-_0VG>On/4co2]KF>GG>rEXh;FpB'^-@!HH&0"X'ijRe!hoSit=,$nT9fDG?W%d<3),FZ[h3807uQ8THuVf_W.Xk?j:nS,&TMa\<K/r]N;&RIm@8Tq0H%'h%k5F:=n6oM:6;H98V<OXBX$Ds#YK,fJ)%J'be2?@-_J%T3elXY=E/onXS$o@<Vq9p!.4V`c[/O#M62;R)TCRj(iS:_&[aO7q5eUm2NVA`"T@1B;=u][<c)/7J>T7<AKE`.r[I]?`p$W'(<$)%H+Q2P3+%Hs*VRrtQOVpD]!7HD%4Y&uZp-FSNA$8Cdr@d0Fc/`>M34rOoFdHWIs<`[!H%1nG2IgB7l89Rn`1Tc'&kW`pTSf\CN'Yl%@h<O/l^3?0@(Slo?&=ScD'sV3Dh2`7^'1[Woe!CRY060VIZ1U)%m2gl['!Q<-c>1pGAoQ+)%EcRg6\"GoVfcS`Ud9@R&kpg`&#R[%TK9].!V7D"lf39^6T]E.k36^k(#WdfPrl"Z#*0:0YGO;IN[OYq?+S]#R[hi%-<Krs\QG3YkK_&=l`?jM*)4b*j(ec-]+S>6C\.[I%o_u!FBNB"IE$M`E,`RDVYhVq$&i`3cJ\%-,5F'6urtf][DVCbWF[WCcMfZ>nWh$Yd>OY&f+qi_.\B`gf:7,OjFAG7?lDDg8I!YC=%!]YK^n\$HX-4ml`K[u--f5+3@F?/R_\OI_KV_aiJ-V;+Ap'9`Sc'>oW"E,pKJ4%oPVHmaa(:9$32H[L=.E._!Nb)0u\Y0r6rosrq%2.agVFT8O5)>6g6Vu5klEMMb$pMG.<cG2pPgD6*u-Q^Ou=hBUdp91_kQY_Y_/P=/j-8:(_4![mq9(9Ns[CN'Uc8@3X+\]$V3[&TX%[u+&Gg0MI6fdb=&Sa-[a+gm(m\J'#nekK0\Cpqm:V0D6\l]i!o@gJ+L;_X5=QOZ7H++.@sr"WHO0VZg9SG][k!H9adlV$e^bM:%Q%Zq"+-.lP$2Y?o*:?$qO`kH7AknfXc;]lt4BOkH1A#dCKjf]^A-@6_FpDf%0b(gN+Z3U^<AW%u"t1Ia3KG\'#%+a`8(FY!3RDVT^E%d2CA4>[U=#4meNZrJT&X?B02@hO-s,JSX\cjV'J[Sti,8]7[qYJq_U^o'[hl8f^*+kb->_$5SWKha9U!0&2m(b08QSNN)\EolqaJ%>2@]8DVa-8rF,Hc8\_:URp"M&KtMl-cc5?:s6_l<D<H\"*Q-P#8q*sXpM)N)FjA"%Mk9=fMQ#=b^TQu%Gb]%cKbU[2Dfi%o9BW`?%!0akgPkSlXj6CmcpLnrgGC<#,A\6YjOlqu]hqenp?J4g]FLqphA]/[G(r#0DY[+hAGUU&8oB^"!kM+nRmWPR"F8Pj?=/bl\mcWH$%nPqN!YLH:W8mMV`pUEBJW]8Tg$b.'7$rld([J=2ek[3NA907!k0F7YZRdn>U;&!$E_QH`Zgu_\<drbe2h\:>';Nbt-$RGQrIG'Y(%I!f^tdBW,+h+]Qgl.r.*Hg6_,oNZ0%EQV]o2O/ruaeP5G"hG#s+]^k>jj$b9CP2E%D%''7fiuf^D$OXC>h?sM(33X)YhAC]P7GBu%h(73REW>#5-Hp?sIG6is,pl3hk2n\-?HB>mm9Z8m[7d*OEKGl!F4P_=Y'5>>+*om,4/IM=0n3E_\,QfoUMDZm3RlalaicfaI<!?3%5`H=Td[O"7j@Z_5ZX_c*+V9-]43Gfq(jGckMj`u3On7YZ[>f'O]&ZK4F?"+J]+?LJN7l!*0^p78mEMudkhe5?[qVQYVu-)^g@/CP%6)p9<1<3$XB<Y04n-S[M=g+Q`R[&^^lrNrZX>d4Sg4*Pgm9p0nP@\PW+UW*HQ1b?qdglF;>3<Z,oa4fMU^KC7e1=,`cY-@i"<X?>%mRRjY$[j-29_5XI+'/5*C0#>KU=BTmCYB:b>:\/7dcpBRICcE)Xpj%6ljl;ZL/7:447)T5At:a=G'DT3,=P7`qrQ[Be]iX)d>?t^%5H2k]kP-=dqUPS9b]mdU^FVR+F.JNS%'Rd)W4+GUdBC8D3tRrL'6Y;[-M#WlBP#KqGi1I=qN(671*E`bdZDaCKT0/B@aaOMI<RW0%)\A?ZnbLbTkir)!0.Yd!*^AFpIp@C651j5Cm>RZCS8Fi-n%<>i=^?>Un$gmrpXQn=9m(AqkM<HlYG.qaHX@l/g)83t8ZN`A8f.FS%]'"@&`imDHWcrr*lhgORSaFtNaj/sYYd(FBZaG!i/4_Fk[F=;Wp3*m>hI4+tpdqBg^AdW/d+)Is'D.VJ>)Sllk@`8`YA^i4o@dsP%@^J(nmN,-L<h?7:ZW8<^s.T.%nF4?4@cPCREEl-&IZg6In)&Ng>!8mh^V@?Y(N8p"cLuPLgWnqlrF2V.\i=IW4mS[j/<[5@5@H-&%:;2-IC4i(na3Bh%fsH3oI.hX@q"^T1nb7M$Cd3@CJa!0XPPY%&mj%W"i-/\?]6gHaQN"I&4^>TXA0*qC]<d41m+9ZXVqHpa/Ci(@%+'[LM`UL]9mIfbjQ(@chGHH10p?9Wq(\c4`3h>t)Id4*n:\N)DBA_HW-fb4)T:>fJ0=nR-imWZuj-?gSlJCKPhoPigcIRn0XI$Eh%rnC1jfQh_Ho(^bd7WS%lEBd#Q-7<5EgtD@%c8U/=Z.!qPGn4@W*qka-U"A,ef/MD;^](:S95CTAg)rDci":@j>MQ4HDVt?<>g;77%bffDjFmhn"++7MLIc(+0)'%Q27V&,"(L]R)e>%@M-"#.,ok'##H;Zh3<bkkrhfnfWs4b4gNK*Z*K@ZTYcXZ<1i>:C.$DB"%HH15R%,Po(DUp[<hD1?65AG#_5o-Y1Z4pAQk\f\VN-Vp2360%4o@nl.(j6`u:YLhZG-4RjXDnd(R?3$tu_D(K(1>jfKIZ$b1Lg]bD>2ojE%)N;\b8:=OR3n:"FYEd,L`lm8aG5L7sRQ>ol-9G?-po_28Y8oGp%f="bIXg*7?!+0sT8nB)0L)W+kN3;)jaA`W=P[mQIXUugn,H9)%>:15FVlfg;,9I'`jCaXgm>c"4l/D)hQdu&J7k\)+jmGd-N<ktq+(g"K\c-4&l210m*mbRc[Wf0?VK](20;c)8d,lV>a?_04j7nXr%3eWd)?_8r%2EuC%:P5:o:E*X+lV9u#Yl/XTeH"u][(9-SA`)\6.PFqK@V$`cF.SstAgAZ>M^t\AHdA]V?ML<NgFJUp5?gc.0A!8]%p<i&2q>U,*AgB#>21(hc>"]AYQg8;Lm<NbaDnT^>'c+T_&R(R>Af!=H#8Yk/!uTb*jne4EF-:?^hS$$<T7[[GF)^Vrn30A>m^)'0%l>]i_-/!S4AUS!lHM"5L!Z'oieu7ta3\TNZ0HIf=T99ji1sNfDSjfi?RPR*?/KYD0>)i;uYk$l.caAHq4"_@MkG6XE`(<\*mCt$$%ZgL&-^Ik%T2L\srWr8B005?-uqbd%Mm,NL:nT)S[\88=.?3dS;CWVq.gQSt!d-TM>RTeB+@r&X13-k:(!Ong[[Xucu+.nGtLCRX>%3so1RViO':JcFC_Nm9gfh^s!uH+XC4[msd0l*%qW2H_lK&O8#Cqp>di]6:o1fl(^lo9UHOrqYrV[OW$D9,qI/HcNJTdc94,lqTA2%/SO_'1cYa5HA@4Ce"8-p]9<o4fU[A/c(>HZ<"FJmW9\B.lHc$gkOis_q=u)5^ts^4s*==5H8n!Dm'hY,D^!E+(H^[&jo_2,GC=@V%g4$V?+"#+Qp-%l`oZN9hEp9;)5Ir`@V;JEGV\bsHBCP0G'7dK7>aU"EUDD47MqQYj?S7o#V;X*&[%&.U)r4[Y?oh!JZ3>JKhnl9u%%7\adQe[L-&!:*XeB:9jSqP"oC%:2qgX+_09?8)M!?SH]*[X`PVNu"Q%+E..<7D;aSemMtH+qb@D(Q^"7q;Ace7nkj]"\\Fn".CW%03))<eG[hi*Kf@T)b1#^cd*,/$^L0\.p;'^5>gN@ql`c5gbbC)Jih:H=MUk)s7/S=PS4;^ffrVH89;#u+qIb6jYg%(,N)?a;1G)4%'@d0IjU/u:7P-g]flKYp<M_)pq>u!m',HXo,U)/d`f/!867(H,`iK>W,W7l%BVYG\,kB_MMj0"oj[lURUrT$THp[/<c;oBp=a!>u%d6SCV91:L)Ck`>5<Dr,I(XEJ<s0%=V7XZGBJ)m;+*A\@Ig[Hs\XoDU?85l7<9+n"bN.!@[IJH85_I;q)++DJHIZLL!mp?Q/3tH[.%i9?j:mY6j(LTjjOm^7MXqR"qeo4T.f0s>f6REBE^Frri5`qdo8Hga_qrU2soR[s'-%sTUGgkg9%E-4/#\fE:C.%Gij/0E4MUQ*a1%jeqJA*UGD.[<l.2g@F\!]RRGUe^%iG5;uo_r*=@K<;Y(D^)]-*G7MBKO26Ghls0>]?</ItfR3&qIVc4dClRSlh71)p"bP+qQd*h@%d7-j4#&?uhkgthj)nebdkLR+/:[,hLZ\$S2f[k6&$/Ji6!^]hED6lNDFMdHKJ\];3R]VQ-?G6;@7D?Q9!cL7$r*Kb*D@r>1Vt==)%:2UZ4BWo`qkSaqj6fqY?qu,;>.-Y,fr*7Ra]>\jY++8N6,<+2raccLM/$bg5>2lOE?Q1Y6l618RHsD$)oArj:c/Q2]\\m9^B7<`&%-T;ea[==oWXuCNR-#G.jLb)AA>5Zq0oAojXn#3htmNnenXA2ekbK*[L"j?Lo;NK$'GZGc^dkBe\;]Sp+rtcR?m5LW-0D8e!^"LE$%7L),Z:7khK4jL?uXlso!m+rICb4\320[HbSK:N`jIJV^e]R@@5m(Brokt(L2;%J>&*o.D"#G9?2e^(tdf`[%Zr/fV3[LU2\LUCJN%J$f?/aMCGY(<@g,#2a4Z_;dWN$`!(FB(ocmiAA6h`Q5(1g2;@F2cPskpMZ,\[@4uNXNFp*]1?)2<pssS8X%HVMqXYQSV(>Ge&?+I%kj6c-p!)g?pD@\h(E\*[>/m<B??/4k54J7uf*BVKqn;N)c[&U:p&3e(o>75!ak"a^I.f2HI.cGIFg0sjh>2uU?/7TalFRPnrQEpd%=u<:*rp%,;S_P34q-M=S?ET\LNhYFsr@5cqc./BTh&"CAO-Wil0NT>=^00h5@<[%PCAh8KF+tnKGIERI%sL4M=a@5s[W:#UbqJr_%HL=nu63?3C>3!Tsd8/>uU;ku&5%.-kIWNGF[sA-VI6]k:k$`.2^S+@_?GCe,7WA#e-oa8epEtBC=bX7:i'0&JfB4R=,0G,N^:=>-%\#eH5Io_%Z+I#Sb^%3/nrplt>C%^R8^WY+$puUgZUO/-*MXi@TKfK%1f;LpKa.(K1kg#B7:'>P0m).k.ZhO&W:Wr"u_+&:Grmh=K%LI6)D()FI$fC..+bobgZ^B!l'GBSGe^+YlplceQ5=C$'!&L<M+igt5F4PokgchfD,Z+j-%Y4q7q;t-$7&$ISro6WE+-JMt8fDN@4%qu_>1/MoF7bK\=ipU(nkAT,B^I7W$-d+sKOG.+$WHdLEYk^TSNmm!sVh`NqZXhHr%Bu,*uI.f.kSbq6Jl`0H/np$q7qdo4.3ZDuD%"g%=h@2\\$d=_=OXWR9YHto1%]P<)krbCK4dde#22eMH@-ZQ_B%Q]a.h)`)rGZN7,"InW08TX!U3cVVfS?'gT[I63Gmn]jYk<53l%dlV<Uf7Jg^(*BZ^jh?%ca4pR`Cg3)Wq^Z5k?i<#Gg$CqNo*Sa6eS;/Tl1q*[U#ke'Q%d2ZDkesmY=!X9.!aY%g7Lacl@!#'V``\q%ldMtbF*7-.#Kmt]e\eoimFfJNd6kkL,o3AN7JA.5Qb5@h8*6fIpoOJ+rr2/PDWoQ-nXV>k2ZJ46PJ$MAnI@E*D]QdniGr@h%R<YK%?ldh]9;N]=IQu_-%/+/r"RAYWId^%ljRD?2hS4D%#/uVrX2?<sUG<k,GsS:]+*B3B=!nr9FapanEbDFrl$D3TZgFT[nQIh<S%MZo%^3*dA:9pK2c-O)fK/n3h^W$eF@,M"`WB*)pIfpD-.uSD6kg-GuH!oq%Y+m:=*ilM=6*g)so;J*gDolkod5ZD-JK:.QL$&+)]iMiC%mBfmN3IUf&raUGeRVeQrb>G:#IdOd4g24=-)cMM2Yf-;(mVI@9SaN;?iuaMP/G@L#Q64LZJJK8rh0,U\k2iRY59%8H=F$&lHOfqr%n'>41bX@.m.%:lDe%YqNq"8%XrQ3I2U&@BmQo3IPG1Umq?iN02S9+IFV!b[GFa`mkQL"!SYQqLa!P;]6r!s#OB>*au7F]#l(!#qE%=l]>PaeZ1fghL^[hd:a9](kN6m:-)e>h#*!G@CA0s,<PtQG3QG/m8BZm:`87E\rMYcTA[V<oEE,gWsMjXZJ1[`qR2C)^hENHATLN%Y\Tg_j4V_u<rM)nBU=d??dLf(0G2J\<pTb*?[XS`cd*NUSh0TN`Q/bV?p!gA:CPpYf$\I1!sY*!d7/M"oX;MEW%_G\!MGtRKTDFb%ds/Ou!PG.>^T.0[/VGhTl1rWuPKS=@=qin$5'8e(.=.3.cg&WaW*,,3?G8]mi>6ha,\$Cm.l]$7PO>mQL<WIUKV$fHQV3#)YaQQG%C;Cm;3iJ(=-VNR7JE1(7=-6Sdn&[ZII'jU(:3uQjcE1,^:@3=5Y#9Y2I.sMBLl[9j06l2s"%r78CN_n$j2TC9bMRoa3^STsYp)@.%ZnnA-6g\0\4FZhrKd.VjFhZB1aj,;A-1jL#_S_)gd1#E]gWd-imBIP.Rt>nXI+bP0#+%R;!dLbUcF//V4SH3*\fSM]W;);9T\[La%M0jJLj&Ousp83i"rSLoNPg3orCNk9%?61pbGL\X.AF>C\c1LDpH"Z13o='&\-uYY]4Epj7q_)N/Tb7mo'j0hb3__O)EfEl"oqAq%%s)8,EpjMNj]I0mj)8<`o4h'"cH<s]1I=Ko&*jh5=++0[4iRR6(QgjJ?lXojS2O'ISPL#XSNaOGY8<9+o/:YMBjn2+ChWD7iBEbC.%A$DZB7]O:"o's(i9qP.WGkA]#>'dII^@&bJQu)FR+'cUKh_)N(5P]^n?6n7cVk%/N>0a/4n`?aV-'5tAr20E4I(bZOFY`9Bk=tF/%;.ILX@1J#`BbhK7Da-;dJ,?J#g,T<_5F`a:Dq88a5qg=\j+(4(4s'jq8%)c)%p*s_?;;ROh-NW4S"86g+4YIMr@U-aC/2HM3u[g-%d<W4%hS8s]5#%X"T@_E'FRN[lFa%Kq:&)Elo&]RNF'(Q^%/dA2qa#:9le=L?4-MTR?Ej:<"'5Em3UF:(QdrQtpd<=4[m0:SQ9X5C%]R1<Cg>Ar:Q5NX^[6OGV*;u66(D[%XrjZqdX1R,eZ`efMjS,Dr6pZl_\$fK]Xc:=a):Kih8_^M,%Oqr0X?>?2mPa:s!&3uGSfDoD%gYe&uhZ(<%PFJ&tDWb[hBKnPV%G(HPB-0?f*5]?^CGq[&.'LB-cWWQJc-Gge`C#NBeqU4q&P[p?fcIl=RqLblA*j@lr4AfjnG%*7%Cg2qZpY^Ys5j+.rNpM+3?GFfOJ=dUnXM(%TDct+E<0,l^7ojfdq9H0,)#;.+>fm\Ur::#,;4$.8l>=;MFE4*$XP1SZUW0).7V@)@%e&toP?/7qq&,Isq>-#Xd\k;NK3SMAdJhpEm<;0``a5bUs:FLu@a3pHhYW;?iCpcKdIR3V;dJUE)C1a5ioD?S7G@5C@5*_f@<:BOq%r6c?mYP%Q\g9'K$eu78!bAlq"no?r4m_2i?8:3T?r<Duo=077NcM'O^f06%/[HKufk0/;Sqs%ngW%iRnI_T\`I13CN&d2:jI_J$6%jj@R?0?9RFNuR!QTC+^sB'<&n%suU@<@#F?os:4W>%;bQs"LqDHbl2TpKC3CCKRM&i:H6T)1O7LY)HrUA,I3'O,oa7[>_Yf5GR9.%]LrQHacLnq.&VYOEp.Z;3LA!&qrb05lL=&/K@\AFDZMJFYDj?B:-?^kd/NQ`CNogS>IF:sh(akbf?u8qW1(.10>(5NI;neDTnBOd%Y$Pu%qf]$@7</$2V>4jPK2oCd$>\j=dd0)A%]%rE\@eHICOWgdSUQ)+))uu'H27.%eYBIr'RBU@:WuaCq0R#hHGpU^p5n@m/`^@U%02po;'Q]?5?+,O61U$BIf4"Q[hQ,=;g:nX"Wqki/[Ydk/fqJoN)?Er,Nf1p1&d@nM_h+,6n1%ZQ,0@'8>U>29p`i8lhXSGqiE#m<%b2.)ghJP2&Gus%<h*tt^_RMf1Qf[?-!,VFF=W%(Ai)R#V`5fV/AdaZ3>iqc$HL#ScJKM&8b)7dDn#Zi;:F[/5bia0N,"0C(&qm%e%"4C"7!!q.#5HT%#<OD/te1+SH<01PEVY)&>1Ot/E@>]X:Ll,2!&=$c4[>WX"T96E);AB=&8ZVn)Xnr-BVLW]W)#uQmlVZm/EKW.e%J/A"]8CkI*%#JkjE)4T%Qt6k\&jJtp8]A:4-qRp#UbNGkfDPid_KP1T(OITj/6*keQECI!_IJSRPTaJ.EP+h6]-meg:hj*sQa!4.%9*jO&=mA>\r,k)QH.dM2E&1lAf^r)"2[u,T5=l1@qdCmhL2d3t"Qh@sBJ>8M&q[oD)%q39LqlqO:)8a(U?DRma+02eN0DI58E<5-%'F9@>0$%#S@R]TS&2>K-'ELOJ74'aN_GE:h?)d;g"A?!NM:FO%9T%P'eB1OCV@FA:@)Xuoo3rfRF`geo+@Au/Quu2M!K/LeRGBFf%=?K.n"u<-uB-E#*l1'(iAU4V3F[a+HXc7>YkAXgfYsS]/n9eSeQ2!fh;:UJr/0M#R<1<%oN#[X(#Qs\M@kZ+WQ4bTQ(^<`Z!(\:e%cqH2jW7eEl&XQ@ZnnQ,&d6'<O<YiObM,V*&1`"4^eWc5Yf/5*1mP"6c=PEqC7(a^1<&J<[OR\uAS@D>9AE#F1H3`R>B0'8C6L5Ri%'h<T/_@gAn\XCJfi]p"b#<^&,[%0Gh34X3!]h#,Qdja7hKMhiKX;qUX#)n(;BjRml)itp)!:>sWXl0J7;J8\(i<E*s7ulC8?s81.%EpP\L^`iqB]+(u$%NW/%i*o3W+Z:2<Bh[k1],cFeJAlYMicQ"2^9u\qa9%X<FurOd5o=-mh$-Eg4H&#"Le<N.[G([SdjT>)G*#NJ%enbG="Qc(hJ-@E"NnFV-(dtO[[LfLM"t!q$$&)gKQu21Sp;<ER7P7^'4(]ES1!G;\[RgO/Q8@8<-nlp\A$uCNq4VT4bmZRD)dn-Y%74o?Xei<?)fgZ.$`1C\LNJ\C'at_YFCrU59.qGQVUW-n5(L_uF]%SYgA$\bq_Si_4!(l[64g*%a&U?s4=DJ:p-k%,CCuo&@2JQ\>%4*DW%0o?qpTSR$PE[Dag+[@V8-6"(9ijgDj5[6#\R$_\W8PHSWc8""hP-NZXF:^F?(e5?QIa2E_n,p@1%$m4aY/SE2)l.b;NI'NZ%Tjt@p/8:#JR'oc3<,.=cmO1bO":>g>=`15k9IpoDZ;A/&A>pbX,.,:IV#jJTV5[t)!"pYFka3iMBK96p'kP`e)`5!'!(l1s\s,MI%Jal(?ZF1**M3l0k%]k*o8(L]A+AB/KW,39"<0@BEXTAb:/9#E*)ur.8UPc/T(mm;?YuPcd2GT2G5en-)F2ePpM'#-GYsO8h**ZtS%G00q5Q4!Ul8K'RS$@CsLa]^1Td19a-;T/[k;e)b>pdE1A.[6)<7uj8Eaej(;RNNi(a&'Sl`C]F3&-DB>A.98KJ#]65T`UUJ-CJAB%N3X<o<D^e4M4,>e"Vd.Obj2G:),!D5QTBj.FY;%dKGZ0YOe5bi"+PsW=L7(E_:U3d_GIk-N!&[?V@F?h6>bMr:uOMb*AOdl!_DTH%R:E0(`)R3J'16=ZM4l]\3JP]GA1SJ$*@-YN63ou3ER%IU!*%t31DE]Z1<3:d+Hmqn=XoXoTK/=\b`Oe_o5iJ3:8@,W`Xo/EFBur8%_SiQ,?kmZX(gs/'0Iq!Q+S.S'G(t=*dQC:&K_I5oo/L=K:`pku=JY#P5c>O<.8%IoKO+\[Lk@kKJuA"JfZnFoO/(Gu3jMH=,\='A%Rq2no&@;GsU*SId@LbYYC9\9j*($q^jRnbC(+(FJp0.ANA-8)>$Z,cl\V.2m37SUT(1B:\a\rPV_.;QFM=!'?G^64];!DFgBC-GR%(lAR@KCoe]dU`Hc$*Yi+-9DWT@fZk&0j\uP_mO2%BORZ0[kf]D;16<=@dQQ/!K%'Xb6%(Tj%dX2AjOFpN(ajNfPK9\R=T>ao77tl%))etN`Cf*A?KMg4,R!WmSbC-65LAC`K7Mb`Kd'!B8ej#<&=5(<6?XnX0IJW(!=Jqp6lAl'7CUD`*jO]f#b?>LFOQ0T77tT7Z!nAu%>\5,u.,>n;Z(d%Dp3R?C)VJLebL4QHMh=riL>'%c=H+GkVo9G3hU%r""M;:k.f"p-#W`SqIcfenA=g>3XOBZG8K.Y,_S_FdO;AqC%:0nWJV/?tIGGK4mQnab!T6[^LEDI`B$;@-@aq_a]+oP0P-I_0MK+JYaZsfWA-gVM^>0'*'@\(,>V*lUQ_0W%!0e3QhLs;;<!`Y[X%l.cYM@p3r9@ZqGb?:n-1KoV;[PaJ?m<Y;72SOCk-n&2+UaR8I3-Jg1::f,.l9`mOLl^S#):(lH(:/_S&4l:6S;ckump<:K9"W4a0%M;t,'i*M.hogKIC:77l4!6N;%)3bu.n1_8aBo9/_QFX^YJ?i9iGM"iK+U[a]-AR#u'Rd)/an_e6;dL(s^*u;['derZ$BR)9Eis,6%``INZm$af]16]fL9eF<Odfq/U.2%N'ms(b_5AtMl4&%GEp/B!n"\@iiU#V`-"B:n4:Xb]]c+9eQ!B2rW*)Dt&a#d!_hGG7<R,$1a%X`oZoYB4#!hC0q7d]kr^Vaf?uG?Rhb:5PDXmhEA+&jPiV)OU%j8b5pF32id"Sp!`E5m:AR,u,!["8Ch8[GIgDKQ0gS=rp+l"pItg%S2s"?<"\#1mlIC,'9OQEa[(X6ie5!b:^t@.K7Sl3C++pkC:\I+<5Xo>:l4Slh#hY1M4`r(5TG7fa"A.O],(^4K8P7;`rk$]7<*,7%_#C=(-1.?@VQEcPQ*-%6ii,30k?Lso'*kdm<Q)_610!q>[%2clj5eo3l:">:31U]=b:(WqPdM1*S`+Ie_ON;2/7i$f`%'b3-^b4*%;T5L"$tLD,f+.]]o%H\ac/W1nYgAeI+2UC'<CU[DLYJYF'YEaiPicu@FtWG3V*#6r_ZXISg<N%IEH:H*'T/.;EH6FBgDS'p:9L.U%jW^OHS5+nNPu4!j.;NQiZ2I.Qe(%(_oK4r6"frmXp4<cIk$NmD`9ENUE#ke@g?#YcTs$/6Rl`$A@(rGa<W9W3!@mWqo*,>oEU4YZ%LNm&=Us;7\6D?$P*B8_dNo>ql']QYO+).trKRd%teqM.F)4if9#:I]e3$<aa;X5ccJVP;IF&Ir.4YZ7P+[i03jAa6"6<K[Gc:N!m%q"YR."Sf7ESN%`C:g%Tt-%pr&$EU/d5g4[c@G4X(6H$?X9%8>1,d+%5>ind$&/&W4F&6[!?p,eM'[<U:8dL7Na>n4D'4<sLK__=.%\QB\fVtQXJ'Hda'kJX/V;&!51af:hT8k#TCPUNO_:[A8%OPDk$Ko)_GWY\6e5A#(I`cGc&3%0SiXHO=G@=Mt:'-'l*X$jOTrf>%?%lkl-_`keV6.a_2uauLh=8B=:cg/YEi=$$ga]1SBPG*QlfelB"<M6"R2LJF.q`YN-rF9)[j#h(o%QV*].jAe?mkWl^E$8/KE1JR3c%($D\t17+$%"L/Vp#Ee<m3&'`u'X<NT-q1f5iq]G<$tLD,f?R2G;OYYjPji!KBca1RST^:8d,PNI$95g]7U]i]('^jq"e9js%^cmA%VR]76DMC8p$!dZ7#XlIgA]JEIH5u^]:98gDhHf[4GR?7K!JU$BKjZtR;O"&(/D)4-S-F<\'#[_CWaOY]S^MOD*QuNg@5a7''%=Ys%S]9p!-/.9e+<9]P$^kISfGm/F#Xj%&FSUaId0VIVGiXF4Q$lf(&A@X7-(iX`4Lfp&T7"=QE4?Uq@W$seA:XK;,d\+79VipL.q9)"%+dAZ+0S,fLQZU0b;l;QX:LDe+$28FD7159'3<78QDH*0\*/sH_UaJa6F$"L3(<E)/O<s)8PR]2GbhXHc9GN?3@$nKe(M(0Od,>0>%N?&2P?g8'm7-X"L]PjI7T\4:.(Y"#_]rQefO$"GbX-D`Z6:=&]/5OnNei1ZhH_F.J+?\%*36lCY#UXd00@]AG%'3B`l@>+.%QAY?%Z+GrP2ZV/slUdnZ2H.0u0-5A3j1=/je'0H0\cf"hM$sm>9q[]0Pk[]#.XfK7kuKL5O`m:?^#8N1*coEr\$4^N-$I/lS%(H;37GGN%6tAS'(an<_.8\_7SSgLE_a/&P>,EhUSSUmi1<&o9Rk'9A32;%"gOttM$V"rM&>;d:_$Ch00EA<lZMSL#nqsb5BT-Dkhr%(%\VN$j%0Y/C\dZJstHtCN;.L:0[1JI>YPRGUO()Rmu7<.NQM\D;S.b<F<#(oD@HG-,%<^:7cBeJX`![3G;:nX#J#/VPjfa0E9YeJa[23\fI%-b.t]\H-Ag1/eL,PF`I8]MkO-F7DO)>js(YSLY)3p]-?Yfc/Q5!<BE]%OXqt&F3l8N=Q"%8P5Q6K36@)'-H/;3k(=J+;Tkg$RgaX%,"rYoOT?kB[C8,-+ju+#k@@mO4G`NfR\)Ru!C6:e,Wl&tVP5m`*lMGJP['EIAIB(=b!II>Lh#gB3q36dpcQd=#67V;4sW=r&F1SZ%R)B5#aOg0#3'KS3fX\6V!O>9_J;FeE0PhUQ4<Oso;`b9ri^is)-9_E,6Cd#)o@jRj/3$rnn@cWVdcWb?5!T8WoZ=Y^#H0Waj7pEg%Ru%X_9%bXj<+G+\W&mQ@)QZ4O3^CY?kD'`li#N(<j:;"u`nS*"omBKO)CJ#d``f&_W[Q0OY_-Mci/):r.9hfBE$d\=Ki<()j!AKS%_V#)I&6B8E-IIC<,gh2-cA<#>:F8,YopM9Aqf-F!SCc-h$Gc8h(]n9eZ+>Sn\:DgaK+8DghJ(t[;XH%"k[8kj3lQqt@fnh6N4n"<%^B5.q]RX##_1"Z1?5Ag71QZmP>WY<d880-C;o3l!V0ST:FqPbP=XD+<YUIkA?4]f.ZTYGUb**NsV[Y.A][UG8RF25j8]F9^jI9b+%>_<U6dn^G"->Ob*cadp@0KR-AM"jb0AQYTe*Ra78i#Q8_O_B9cJ;9hg-d\/!!-DAZZ1][*EE\l/9JS(U3kHjU+$4#6Mp:0QEShU=%6$p-XUG?)E/qf0/[PKUE4!uN+*]-Fph)(dqAqAC9jNSHJjHYqE"(j#,md-a&0W4cMJ`="C@\%QWR&r\V"GuGP+:+7pdZ6D"7,&]&%aUT9*GUW`JG;2bqd\V3s8_KruFp:E?'gf8RA4qO7cp!nCJ,fpDr?MF<"k,)l-8tl`DeYY9,2oeM'Y'Wc_PF`?*($6?S#A7l8u\FR%O>I&)=?FVT72`Xt`(rfN2([4mC+O'd0-a8^oN%,/jG^ECqL5<j0]^dD\U(!RZa7tS=EC$rF_LIo<-&PJ.6bGL&6Mk._XuKA6\@oJ%JHu0WbU-6F<M@AT#t5r"`s>Pr'4kmQfK&-[R1KoVa.uip<ks/>GolTc"@,j*Vc"<nakR3mKSs&gZBt>Igp.Jn0<niT%a;!a09a:9%dO"6Tp'o>\K9&\0m#SE;+Q&k4m\,%SSI->Bb=($38n1FKcl/MVH6=@m!'FE\dTXH?D<H^2*HQ;Q.Ej!]DTFah!j-X.fNnZ<a=Tks%m$es@g);L3*%7?.oI47g-mmF1Z<0?3&pkIMj&"qing8b3MMNHs%'/#EpiDH&Bn\\MAmn%0(-*doNM/<R:U:fm5;@W6$U<1e9:C0C%*HVRRlCcFV.))86^bVHN-;#<a/@r0PXVX1.`#NNi_;h_\AP,pc*V=T_aS8AhL9NKoU3EkiNT?pLZuGH0CGP*)Hl^[J,&/on^bQqs%'dgOkU&_?cP)9<#DG$@2o56J`!`fo2j0Z^(74G&G9(P$tNjD0Q[q)6'C506S*pG`B%>j`%p=/+6'5s-]g*3b3kh_$-ai2X:*muQe%\OgV%KgC3![0p)**:?VCbCRsE+BP8b<eD.lEZXH)IRt7U9P[)<M2F.;#pYDpZA9Ybd;<+o,BIiJk&C_FSW`4g+Z#0Wer2.Mk"Ep1%Fi2)7JLk1DEM/(<OQ9ZOSUo#FjOtL:78!/2SJ'f&.*^e:[1a?7$[)HiM:sLSnd\g$Y:&SA".l#5rNN:s3rk(R^.CCs&RQcjBa6aC%:;,H]XY>[@nM4e`JEU**:MluM/[FXA!6'_DJs#P/As*WARSnQYU9b=0;Yj5q:-&@te`W7bLLkKSjl@B](*p/+GmbelficEW!$ml[%TB$tIaUji06`/+mbrJm^NP,`oEXkVgLn0b4p<WVk9fX>_ETUN__SKq6:i[%&rnQ<]"AuoljT(H<]uWc!M!uEl''=s.C5Wbi/<hD"%E9]f=EEEh`W&+!l/LMNsSsb7!5oVm3)JYd(TLa'F:3QkR;@]LEOn3Ai%_tm"gsn!074N>@"aG;:E1S@0JhS-(C1/<a^5<ZJN0%aE%Raangi&&N'20LB'a\J:X6g!G[N>N't&e9YZ,TKL%:;Xj:A.fBjG4)"87i$AFEe3>7qN7855RA`f>\uk1\9.[+GB8\<9uf^MiF$:i%B,h9-eg["ZpZ`Nn5+8tm-4Y[I$Q#[">>iBhio&ji^4&VRUn'aX34X3!]h#,Qdja7hKMhiKX;sH05Sq3je-mSI,Ot((JdBg5J4\=i%LfMCP#Jrb]@`"l49TP!bFA<S@I=cu-EqgSIZ`bI'7KXScN3o2u;NE[NKtmO*4)P4q]eAe`mM=h(M\U#O0au`J7L5QK6hg3i2*Z6.%8SN^;5t=Hg=FAfZ687rp8NR$LF9GH-+"Y@JXHYeFZ(?,eM2.\Q-G_-+jjUQio^$CM#Er:YK1eA%X<IFCm3%h7MWgd]M!kD$pgJ$J%_[,el9XbC=[%q-IH0c_U&Vo-2P@Os:<D!hVSO+>a0F)\VW?L%,]^Ek[ME,oL#WZtuq?V*C_h>5EZWrY-GD/j8p)t]>81l?K29nR&%`8&YR1819DkS&W;]L<soGA"e:]F%#DRt_dcbOgr*L&5)Q+$??mGd4Oc/X@dlnlW+^`L;t1)P)2*F;Ob!-,b\1d:S)_a<Ln.A&:>&%\6.tZ[LfY*#HVEuGfLEVI@MK^&Vo+la><5p]c_tRWR"8cBja3:4*5!WO$a,r-9ZMRY`QE4k>F0jT@cG(9[S\0#`B?q0lXDEPUB-f%$Bdg'9>ieU/2'+.-\tl4'um_;0UHLpIre@4e;*2AMXU:oR=<-Z+g_mO=WeIB!9A7c<Z4Am*1.-="_#8n7HuF_=B"HQ'HR/3LfCP[%QFG;3C7'fn@sqW89K;1oG+f`A)J3K0@9COm0#86SjTmM$kUdoc<C[nf%M9>PPg-4k(PEW]03fD4(g;Bp8q:>&>#f\*k^=Td/PFGP%4ti^58Z7HIWd^9<Ss*Y<*!RBgZ(8k/21]H<*95OP/@qc$&qgls#k=.ffG$EO;C[!k(9K=;DP/(N%.QJ;;;&\3.G9jEMQo:E6n)&V%J1k/0bY*REOYQ#.Bjmg%DZK*_@40N"kj_*<3(lTn8*H)96pH`$b8";mKnnC9P_\S#i<h0&[]DcF%Q-L"F[>#^3*RMOS"aPm//E,%%RANAJp7OlD0m?,*GJ.*f9!0FK$d^n'01jQ<%J4]2\3">M@r%kSAZQJ/8*5[^`fRLQ71g)/.Wu&FC.07;J<5@O6mZ;JcTt+s=q)^I%$kHIsq"=oao/i1UVX>2\^O5$n=la*)-G.ob/,b>;9Tis*imX+%Qs@hod-MVq2`uLZ=b4K;B8F&(/:[M#S;T53(`8Yi?`3Gl7'!K2%gj&CE&)^diS8Qd+e*%Z56C5WUU,I0e1t95O#:)]WN2sPp(3%-X\FY-'clF$&3\TtQ-8ir'#cj!7b$+/q0_p#'oXpubKSH`/!X`Kj%<\29!L/Q7a&Add$:Su<r8:gGtO6d4M_Kb4T&4[QA(3@XPTqqITQgG9T-IpgYGZ(7DaLB3j6beol&,5a#,`$9e?CJq*4>5:/,NIHQ%3/ajtoOV`+FNk_lb4MaAoXl=,8Q%"_?Dh='F0EOp)jY*K$bBY%^aQWC@MNlfY8Uejk&.lt'Q3u+`i2^3pK^#M<2]LV^?7RQ25[V=%D.)^0$cI1f/XABH!)\1b=Jn2SfC]4T`huS&/Xj@aI&r!m*Ail%UP+Nj;J5iPN,bftOSX9WZVR.V,8Ab-`Y=Yd,8@c>Gd3iIi[$4b%5[9Z0`F>/p_oFb0l`kPH_rhKEFf@/jE!Al?<Y<ApW=d-'2\VOH+C=3?e,jVqC5XAj2.kuum2E<(S`q@/f;6d^fN'HAJ^-Sb\IKn5%:F!KU<2d,r9olXEFil<o5YT6A4uK3LU<mnZZ\XfZetj.<lVb>slr"K?hsmYM2a<Je7NOFmKK"^g7uc2l.!8d+!!M;nLpNUk6FhnO%5]PUol7?neC#i+TI>#:J9N6:`AE$<^!]"ngBhWXDWT-WeJEofH*:]g\I1aPHdTJ-aEn6MqrY+\VOt2N;%m1c7^2t-q9CDZ)R=.^M%3Me.B9P$4L`+Q#$aO`)?@o"!W/S,F2P=B\Zn6A(i<9$Yj)`g+sBX*F>%I;)[J)X"3^:7>*8S@1^IDQQ^>,`V+4R!98fj%$.e$g]F%&5SZ-(tr"D#T[8526X_-?TLpW]Zg&F;[b#4eFBC*a?j3Fa1eoG>[Q2oM(ajD(7EI0YV-Iad</=<QVR3.SFr^W'DB`?-Cp<JaS=0i%^[WYfa&19Hr=Q\_%Jp1BI-h.#Z&1ME(BaFF@:>lXaMTB.&HY8(Dl4KsUk,WD$8s>`"`-0n"bn.#KEPVs],%n;JV@c)N]U,KMdH:5%&DteR6]V+VYr6_!J?U4o')B2pia.Cj..jnH'dq5%M<mQP@j6<5Lt<&#n2(.h?BDGVnMAPl#Tq8]9PbaF8.-Nsn9)lIARNgrOt*<'%D*QI56M%cOf\7X&_,.Mh85r+k:ed7>(O?QZ9/B0r(JAaGR],8Ap9^'3=:<1N^!M_)!-nnWo/WLqMZPe4d!gEhe:AmXiaq@f=;Z*8%?\,nId,k"3*I4TN!-AXMIK)8LORIJKCggX$U?tU/3HPOX&:0V+hV2LK1=i#TDpKdr&Eu:\^1tRd=Hn7G-l31s?flEJE@C7i#B>mb%8DAWM4p\#"-/Uu:&td1D4Im$p!;\sSXAK&H;a)?p#e6G1HH!O2GcA_u$4_k?-(*AM?o6'FFim6s?^92-)J0bZI@qjHKdJ6\X<^Ga%[_X4Eksu]0Pm1V<Br-Ks2L,#.(L!jZ1![!!:5QZ',9,?68N/?NF-26spe3X8eg_gKC]Z0_3!rbL1,"bKMUK\J8FX?RLf1&moR7#X%%k^5&^a<pL9WWIO]i;7HV$,!5FgOmkKa+7rU."UGZ!pJ;OufO@4%&cmc\S0gN(cd,KM7r>b0dYOSdLL=DCX]iF?rT=D@FGWVT"t)%d?#K-QUlU`m05_nYLg3Y;TSWmNl3rl&eQ:kH9([nUF<AYQ4&L.b[Z5'L+XcGCT&fA?cYTW\2#jt:O%VZij<o%<+54.F6IAt.nu`D%+7,'Le].5H0Z(WQB4i`U<Q#L@MA$/t+ACi2[0XS6LS8`X(86Lsp4*S/Ru&iOO4XY8AdBQBdS>(H/t%9p,h!J#a^X3j.5W:[Pg2`d%\fI?K370;IOQoMR&uOG:;nbGk^o<93iL;YL7Hb$+W=F>%6o$HO'EQ<)QFhNF_4k%J%R:_sr!8A@_Ai^WYuLWf"/A:ROI5l3LJ7S2%+`60D8L*8MicRkHH)V;+@'qZnoH$D\*?sWEWS":61qLb?.bd'8.KD_doUBN(br7r\jIp)N@"Dp#1&%Pm`S(D5>JqM\9JVJ[m,8)*%3V03`26^IRXM2hE;WVF5$'o$YK\OHhRU(:G>*Nu8Lu,+_OMm2*;]&q2'ubCu;SQl]_RtsQYkR@J+/`7R+d+<C;e*(A:;\2"O:8Zi%*!!qK;p"j?To[DH"`CYd7$'+]l(mAb%OFg_g%g'%[Lo)_,Wa&6P1nm.RktAd(X.-`CMR$'$"6Gc#HWeKm%jSV?)'@n2A<`$J=<+-%^?eZ&6YHTb]TC_V?.9MQ#FYcNjVsMup<`e.Gh6"%i%\QF0G(?=AAp*#8E[r[882.c?E?fUAR6YXiAb4Im&-p(F;R;:2D)11SJ'[h%2b6'm-[H)kH!\"bPZ<FN*`#RnMWFgA*Ju9*H.(gX6Y1qeio1f4HshW+.+&ub7j?Fo]g68%b%#_X6mEuu:W$5S..j[qS<6P!CH#BL%dM\;s/d-U?+I=$7R"!Mkc>93rA]eMD+CW8E(RHGf3X;a'FT9g#2T[Xej%P;(!D$NQM&i+R0;Ua@0P-M;q9Dgr;<Y=HbZ'D%JLo)P%Vdqu4(CT`t0rdNk??efWl#I*J^ku5_S;u>6%5eWsPYrR#6O3SJPeb'IYf0_R!?q)I+bV*Jhe;-!+Y*TW/R6pZi?SZF?lOmKj.!UK%oi)1t%87&e.n9%A:1-%(>4Dcd!X:U#YT(-Mf5EB.kg(Un.q&"$49rAl-AoYu*Z-p+8V0",B_5[L14k&4@gLmB5tJ"8_QhP?YTd*[%Vc,@;jco<qAaT8e7D]]@]*@\koI:I]P9('573"3D4sj:Qg)7soNc(1=A$O(D=+G3X69sPNgksN5#bd$aZt[G0'd?G)$@%c29CW92%=,F@OT.'LTYk)V,CCoD;iBt=?fo`*p60QHJLM."b*?'q.p"_9S-'=5]@Lk&9'%mOMa_1l5349'^peGDK4Jd6F3rDE;,Y;YM:pd4R%1W'pA#_WIp(o8SSOK]'BP4D(-ib-7FP:)pZ)_c\gZNKg`W#]3Ah&82j!c_]bMhP1bNL>q:[4TB@![0&RpZ8(P--$4X$M:;c(sp.:%dpo4m$O"s$VT8j\-A?(h#ZI_JEoaK_3-s0G[EV75C)PC"j-R\sW"ZSQVoKG@?"6'g#^D=W4tkLm,^._2>_4ZEg1Y7HGoA6U.j63e%bYOWd1&rd<CWqeCRL,h^I,IK#=@*b`+DCaP8RE;O]k!9K]K0L.rU9pso)M?M*kIB(.FXO>CY*Zo<@P&<qGn.Jn"]U)'l0q>GZ98K%m7<sIK2-D!dZS.;7oot_7M+^+m3LVV^@A?Hnku9-,?',OHXGdeFb$rnP[9mnI8a_r+^lePo/(FQ9W,fq'sWWUAaOT&dAsp6s.4cX%oV1>HIT8LXXWfs%nor(I.^,di6d3M$'$g,S3&"$UiR-t!iG\g6'OGUsEgRVsgO`m&nBaKj=)]acKfOtaHn^o(Z%rUMlPm#;pfX2a%KfLDU9r%W"%*1`P6T]`a]#?HZ\*)+j0Ha"o6jp:'l.rC+R)cNe#EdjNTB/&>Y[#MJ*$780(?U](Q]%F[Y_X(W+QBG3q9^7ABOJBb%<@6&>=\K3E8>brOSV(Ta%O)rInC-Y<dD0dD?)!J#ep5J)^U"&cf>jTiR>'`WnX^jEf5b:'hkU'()OAE30-(5VdM,e)';)poq)X)#%.Bko]DDueOm*ZSM*YT&k]dV"M'Nbi$o'fPc(V2F4/<>X%,7F\pRKf(u$j0T=8WHRKb@>"9!IY]LVSMbi1#40LF#4&da%Yt3+[MEh%.Boj0Ut?S?-1</A^N((((/46DYci<,'=h\g&=.=!8XK71da2mg<9Gc(,C/(a'`(-5]nF39qMOdeWL.9OKt\*b<=JNQUX)J&lH.^(%%Kmja$<#.g:dAqA3o,=I/**o_\V6,%9)->Th?o,OrS3d>p4]_1n2S$Fe\2S]:M6,2?T8aW?*Km&p4Y2Ho=_-s77,(/LXXef,'aPI%\"d\F#idie9-#Z"Yc`*05\M'X4,3Rt,FELY&XjN][d.s@&3>FP4D@;%it807_0!4@f\$!6b*;ciLe21CEaK([j,Eq;.eeXY^t0D!%GTI!^j'FjSFg,tu08.+tYbsq_^5.EcSqHhQCLujI3/WKPn7qtGYF_9tPqCM_asjZJH$I5n>o^FfM%EHi8YL03a@MiSPWU#4+j=3#%,d2cROQakr7Ml8jj6"/'@o7M'U;Uh;(ZFBQq!Hj7WJd1%SI/`B3$3&XLa*<1")I6"4P?/9f(2JhrpW@bE^sHG63YDR.!$"Pjd#'\%I3qG8q$]['a/NB-)G:nF,"bVP03T]Cc!$J3,+`92BBj1;;)A,BEUl.:'3\H.MtAl9o5A'j3p2ReOU<KW>Igf1Pm5HBj;J?d!gs*^%VhF@K63WmbG&u3J>b-((Cqlh#QaP^Km`W#q]&&c2hbrpdRW#2"jdL*nn&q/<WV9s5Z]nU5c*p[MEj0Z-05J:uk*KktV<F7'hbs*i%RVsYOjdL*:qIRp\0)B.][hSd]Xg]#CZIW7&H!0J#6:>rJ9WY^&rNb!YWd_M0>H3-TlRc,OXS%mZ?`s'fWaF>'9@Y\2Qd%?Hem#/'%3EWlXQaP[Jp<0l#;YJ:;DkhGa]]V/Y;cM=7frpna)jm"1.Jm[M[oE<H9t++#ZDLjKIT`H48jZ4\'`N-W\BL8Hges'R[G4Zab?Ad4%l=DQVKfGe\0X9E!P#uVNT4>Ec.:]lap6RYY;Z"Wpgf"#"LW+NgD7HG5QYX+-ns;5hG#H7t(T+?617_L2rc4pkKsB<odU1RA8aS1_%Ce=.MCU^,7QaL$qr6)KP;Z+]V/igDH-;!JT\V<c"IlUWBrg,KI;?4ou>Z(UH)D7uhAdt)+!-8U9;uj7Z9.GHpb9[n=>g"E.^oZYG%e\/'CEW@k9"sdeR8q:'N,pg?3ZR$p5XP)#J^oZ(L&n%lmOqM0RC.S^cCQH[Z3*&[EJ6=EP!G8I"e,XQlQIGo@<m,6KR&tsXG"VCL%^'7\7OTd"B9@j/"<_H&8\Q2@i!4,-fC4KH.j9e54Q;dm+Y]Ru=CUKrlQYX")HC)$C;W5f&/IQRJ_na3*=\</29Ri)Q10b^'-&'.9%6'=QBY1\t)?kuBBJVi'C1179<OtpFrCmd9qX#3+[S`3V7eH'`^9afGL?3.$Ud]q?88m2O/%O9TH:bIit8*Q7W>t/KKVlX1,!Z6(u%KRW&a!42;)=@Ja?XT2DQc>Y\&e$0Y'&/Hdr4iJ/O&<J/OBIeV\P">BuKN%prBq\aC.Y*X-LpP$#!$eh9C:WX;@(7Um/?,`OL(J[!%K;ei?-8UUV*#)BQ6WctW-7-H(]>DW"D$_nL,bZ[K74#`G:]2DY$@YECQ3DIA(Quf1^)dLpkpL/?";i`-5XVIQ)"!Nd0'fE.JDp(i%_C2W7^mnu897XRr;G)I"=LnVP;5/D.;?DgRMtoi/PQ4&f"VR[8(bJ`;GU:nRB\/;=/['[pS4#Y@`$o)9C]Q6TM_=Wp!AH8LR8UHn%=@@:>fQ]pf0_,V@V,=)iR'Yi=$=Gm/5aMJW=Af6[.,cCsV?Rn1([uJk;?Mlf$Gt/Sr$'/F#/:2c)o%YU,p:>P8e&!q=.#*_@,t$j%i7P:\^^rtX78+"AdRlRAOV2&4"nfc\;?I?8=_2hQ/iCEU!Z!c(28ElI9k.*M0%Th<d)s_d!2DF6q2qc[L6*\1X&[aOUCBjnI5bF6%$mCkF1=a'sRH]qQW$57SVl\^%%5<!MG@Bj8l5F']99g]/Y*UV<^oWkP<PY]&.TO8h03,$&=YEdTJ6>%a[?k-0PWE1^OtHlLSQ)Qk%juTJ>$HtQ1;@:W/WDX)IF],%MQuu<''UX#@FX]#r8!Qt[ejkuL?e.ek+gP*PR(0+n$d?2];@C]k;l(7sF]5+PR.XCS(7=Ec8hDa_%Vb/Npl[d203,YaTe3VNj^oX"T`P>_;<Jl?12q;Z6\>]Yfm$-^LTbpm,P7:2*<@J,a4B8?ak'F%*$d?2^;@Lc1ToL\B;jDB2%[)9]%bBg0dU!*+.V2Uc6<2J*2oi*N]ObJ@CVeRZ;VeZ'L4B9:anPl>/R,.,),+,tg8jtE=93260:K?\2\Xoh0f%*^+P9QT5@Hom"dof]_%bk4sf9Y62dU]O0/QLu_A-%J"7>U)VH5\;(6;o3YpTm<06G4VQG>VR'4W/cp7Etts;3#u5OX/);?bi@d<q'?<WY<0/m(n#'K$(Git%s)lB5\8n#PM9P#@gA*$#\Z\*'En;;>?cd_[6Sq0S24ab.a%<OmJ^!/amHhb+.F$mp9%9SodQC9-]0^Wn*+D[`,2O\g#fWu/[\d+d%6LO0b_Ap,WV?OmgWcgE"5n6AUNN(WC>T6VMbAhAmh(IaAR(?SC[4ug9*7r3[m4ti(WS;!s(/ld+nSLt]/dEnr4#o"&],]_JPccdU%N@E^qHlH"sbOKFCnLikV8F\=mg6gl*Nc/EbG8];XPiX[79b*n7]*$NrNN(cGHlH"tbOKFCoe,:ZR-Its\$7-]^5Z+\19QV9hIX>8%3t'WK1"ElU/H(;7j4fsl?&ii5b'+`\`mHm8gD%'%;kgONnm+7]2DFOQR.=PBgR.83Nc/F-G8];XPj^AF926>X\M49#*3@?oe*!R&%CMGlTN@DMOS/YCsb;_Ej`6f/!e'<q?8NSl>5O7*,Y/Ik*28"n&@VU-JcAeg^Q,CHtk\B"p<:FpU)cOSr3&f-aB]l6PGFaom/1]]@%m-5(>rJMjt!Ms96EL!mD^`5hHOeH#&1QTs5iOXup4AK%kq;P[.>C,b//`)2ujnF`MO:!BV;n`WZ_N;oSl1/+:PuK%tb'1+A:JGu#%^h6U58_GbC:B^!>Y#LZU7VcH^fL+c4E`hs]3DiD>l<U2ir!laVhF/D\4YC$QMqH<!;nIrW`fEWYg0KpfU">o/m4R,OZ7rPk]+>U.%M,XiBF'8q(Q*&k2FrU$+VKNahicfZ@m4QQ;dC\qFFr07NkRBsY]?<H#[W\!iV98ra`:J+3-[t[mH&=DG3-lSs_L.DNhkfXZiQe.c%qAG+0G=jq)3>gj7:%^,<@B/3;e[m6cP3Aos>eUS3>['qFG>[K;T0tEq]-oZY.US6s*<t#$._74n]BmN\jh'=87ETg7=LrkrD(cd_%H.:rf$r7mJ^5KFd0FVg'/f\f"Gc;(e\,IjkVdU`5pb([?=MqGcPj]eZjVKkCnm1<g7%XGYGP@uJ\g6HYi%I(iiI2q8)AZ>"<K9;O%hus0mck]h1![C'GQ[1&hhSYYK:!<+2T8JG;X6$c`h?2N:$!Ou]ZLZ8ab0&gK,#Z0+%js!f<KAi:i)NC;H4g`UaDM7i0-6PZ3RdJ,%)qmEML)7VUES;JJqYaj5\7p2-L*.5irJXH]c#O7H*j&iZFq$*!)3MqNL)2eY[IpNX`O0\lVUY+0WNELJ=Y[R5Y4OUK7+-8D,$oE@%FVV)Xb%//pl&MX"[OL^I.D0@j))%Eu)&MZI?0kme`\Xps\e%t^Ur<)&_RJ2oWT+/Xi=*)kO;HLc;SK]'(D(oS6c^d>4b^O@.228%%249QXl1[lnX0a?_BTMe9p?DS1pP5a;)'uJ4cDm9"%'JZVG6XE)Wcn[!o#a%HCO,$4_6pr@S\__Ho$6/s?MQ%\KMqd,>g;S6.R$M]%),/AW?5["p/$B@6k`o3R(\F_/"rHpS.t\4Ujdj3k^$;0)"hjKPi)3j+B;gV.R1f*QK.D90S\Z&SlCGa+^%0HVMI(R>E(-sVAT1)A%]JI'l="`+p(<WB>MI*-D.=1*H_'Qe[S\ZVco$3?gcL21Nfss>kfW1h"Bdu4*2[5W@MAq0uHIWse.sg<:_'Qd8=fOjJMjK?JSP&/%%'fQ?Kfr?t8(ZWXWK*ukaN?OE>'S6(>+`$Wf6i:9$0gr)%`o+F7Go(F*YBj\t?*@/KFM7Upi2U,Vb2B:+H"Df@i\uVXS(mBbo1@N6%hA6g2,Q"UiXiR*n>RsUjE%,dQ-u-IrF"O[^[/-brCRM*`Y(C!89Ag:2JmLM%[Nu*jk`Xf60a578'V0P%;C:V(G@JEoj<*?Lhp3+7%S`IHEO>b(SB%KE7$b;do]WmCE@8+s>hUm9J3Nl]1?-fQ(pb(c18r^P3KDK'1;ULE;2nQk+>;fj4]/A]^fPZOI"bP5bIEiSVV9&nS%GcYi<R"AWabL%#<,j<2J?e^lu?KJ#NTNAe;4U&ND&.j\t"MOR>9_S>toYQouFun]qTGOhPBhQTm@I\"=2/3KX%gg$KO7]dnoA]]8%qp=oNPk1*3CO'o"+8[5#]Q3+X0sA/Q\<p>HAR\uGC$8L?9><F^N3n7jVKfDnl!gFH8kT<c)Pk*:(hgk=-.TYY0\\SJ]Jtql2:*Zr%@hguWD&?3sMiMoEF54L>rS]9>aEd<#IOp@*kJd7M.$9V_i`AX@/!okeKl[Y_ZnNnkcH,+[35Z:;&TV3/lm_*t8su39.`-@BEaJUM%hK@qYK#KXm92"e-[[UNl'kqa\ko1Sdd+Xk-?Mqr&b6GHR*[d+\BD%>>^@RB\LF22L`WVY"W[7u6X?Dj>a1?O5;U11b-5rS>o4!p;%[X9PXBcP_'e+KR)\(>lQo?tQuWO@<]lFj]tf7B`\(G@2C.K>g!(XE0<pKbm6PCB$#a\-7YM8Qid(GAk=O@!9!n1Z/lH9-$pY>T&T%McAReCMJ,D-DPcJ6uit3TLNKp=6\^iA[3%'O@aFm-`i<NS6B6(W]JU_PJse.pAUY0?G+@gY"q>:I[T6%UnCd3HO>(i8ho7`("k@K%q<rAjhc%m[D5)bUI?>!:1:Oa+h^?4'S6%kF\E$\.os[in14+9V?e%86&#J]*p6>03E?N65GVS/FG;1c<muljU0eZj5805C2R$S4a%=S4Tdjf0h1@["k;n"oG`p([+-b:-]W@U>8RnRIH%(!E:dH1AV'I$5-5i]W?ueh5HPcOVbkEIPE_\sM(l?Kb<^f.p.JSJ8d&oLR19%OLIQc,(&Tq4ZqiAV8VVlW;0K=[E/?olDKNBAY,L*C3e@q>/b#t0J0Ib4Lgb[2*AC;<uN,bbps56Y3&^n&$G&[L'LfOb4dA/V)fQ#%c`<9b6*E+,\>!'44.)gFRN5)M/$0:6kuFhq0'SX%#FG'TX+O&k<NCaFHDT0.`OaL_:_CHd-0A55e+?8-K55d5UP!?.V:!+:^!c1R%RU4P.i0mtdFDssX4>,>,-q?n]oI=F(f>UGo0'ZG2%PI%3-AS+1DK<6]bPbkLhF,%PP;k6T3k2+i(`cl1Wu<!`djpCf0'\]@Fq04E%l7VC&b,j8fR2fIGX-t#5N[mg6/Zb4TEbNF@)+,"'RiJ^\2`\hF'pD"l.SL>Tm$5Qn=8&X@#?UUKV+fRc9b+>l<D<t+l]ifPHmrrS%\@oKPiH<^g]cdZ-/Q,^>'f-?=H`;?0%>UH/&'kE"/TZ4jC;8AB/[I[KrMcZ0RA]5TK5GcC9OY-02:8FYB\0rI^!+db,R!PP?9lS9%&].kp8]7-;.I@:TlBbKD!jE0!f5Y"qkL.GNlig'dJ$fu-`hDaA9E:2/(MPO1P_4$g0*$p;W/NR>+JJ.E_ISrt7F_)iBeTH(eTb$H%Met5W0/4;fG$kd(/g/TM94]ab!Te[7:hMi30'ia017'HV"jE3n9XO+ll<_K%UD0a:Hh$j'C*&ODC4QbE8_Aqq?^=lo[o`%0?9i0j%0"P@+.-Z)iXqqX`U:@AX#r,_h'@p.[?rPp)]f=qL#S(,n5c`b"l$<Au`\s`((MDC3'Fc^TMDR&o<+jXcY3X%59oAo!p#<?V;PsnL%n^AU2NXL1Gkt\frgopC.9sa.dk[$Z<dG>\F??j]4eP+O%Lc!+Mer-Z#f2VEPk7#^o$Y/0lRA^olNl,'o8^Z<^^%>4BWJGlj>B*e#%c/(at__13XJ=O5?eE])(RUE"NH3%HgGGohY&<lcJ@1'VT9l3U10-J\2:0fM2MK6\=lc"$Gf@4rVplSM93-DpE2J<^S[M"toGj'I=%-AAZ?0O$e9fF*L'_Hkg[K_4-F^`_utJ!0ahKY9@2[\B4n(EcWSL9;?M)c\t*Z&A(?$G`Y,`CVec7I(?QAhu\qi<,Gq)4Rp<@r&(-%`E>:#T%ABPfcN,H\6R7d)5\`Y_5%Ua\Ij-o4BHVOemj#44D;$=Y33dq#^'0Qc\n\:^=q*.!_33$#^Z%=6e,J/l2j;[oHNKV[]L=t%`3g:_?L0;Zbgc1b7cSZ*H!t6cCSp44YsqDU&bFFWh"hTRdV:R6U#s<q#)]pbk(OVPq<r?16n#5)EaC-3'TEH3EaE!Ae8CKA@KTlI%96+?TA7nps/YNEdmG$1(9)h9'MrOpn<2b'COfXSM]#rs#RMYE5b<0<ljl[>PG;1bbH*b2-Y#@LLWsgS`1<3)3lTQ!VLY8*iM8_=<%bHtPAem8gHK\PWgo&=cO_N@GslqcLRr@RZ0_S7_N<<aV"]QaT#9V0I#D:qL]BX=1A.XC89F=icj\=ZSig6K;X;MHAL;t;CqR?CYI%]o_e7X]f`haP?5.?0pH,<@';Y_7U5bcltKK;"EUZ\k8>=H0K'!or7#;YJl1-DQdrm^Wjr=U1\.8b':2h@WG_:W4nP.QdP9K;&(im%5br%/11%V1nWQKe02;7^9Hc&!&%><#ki*FSA(C+t`?$fc$Z.d+Y2^ho6T5`'0>?&K+&^0Qn(nsS)f-]AjE6&$?PgsFA4g1^#&k,J%,qg/ceFVPXXc;Tr1qI4YTScSpGla[SrD\ZPJPbpS\2>-j6HP/O];3YFV<_IQ?H+>Q(b/f<oPOmhe*(6KH;il[,qn)cX54Y"MsGQ.%O:@\<lq3u4V5:G`^s]6#D5'c9-*Itk8mWl]o@b#&,+4T1LV,S)._?pEiROukOr*SXRi+Y.7cP2HOE`1!Brr<M>&'2caHaCtUUbrP%Or(#Z<s=r]b2(aH]_JV-_N=?:@:59ZLrsnM6FS/IqF_'";I2I;Zt=_lC_Q'WBPC(FJ8AOaac#c/!EHUto!f'Qn^VA^]uZMa)J,u&%F@doJ?MmW-JI<VS*Xu^[+/A-[O(#$K`Ed]7@m0j1ZQ"lSH(>M1niC4XT[.s&1lonQe9#:N;I4/O:E;(L"f)f5jC#l?dAB@TMlVG9%Id[NCk0&BKH'JSfQBt>eK@Z&pf9^BE"Xn>a,+VpI*-3\b*fbL6E@ii89RJ]T/MGtd2Mr<>QC#h+k/QA"Ks,j)\m;a"YB);&fMTqj%]QbFLVQEI9EI&`?3Ma;I)n91aPh1=RfcTp^3(>h7D,)N5^)pYb>c-gnl<_JB,OZL&ji,W@IFG%*i`-dD0<Qd`'6>TUXsnc6l(V1@%LA[;,dRk"5E%Rp=;O?s327c>(V-VNW]_KTDef0KlEE/]05/k1EArqo(`Ou!=o<R[k?:+LrMKuHZ7T$[_(CqY8ZjJN@c3ITu;p.f]%R;#>H06W`Qa0*k0[2/X[dIQ:9dWM"T2C%s;/MDQG]T]7Z(FM<iQX.d-*sHem9ZsIZU#gF6``[(RA*Ab`H0O<s10LL97FM@Ib)jp.%6:&)bMg;S`]Tf=](HipPM)$e=c5$!&A\'j$B]VlA02;TdG"SaQ\1M"19?-aEXC>L>I>?>CU:HM.X"NO7OAPO@biQK>&S$&jc\k"X%$[1f\Yu+1!F$21J.(Unc`E1?@X;(<dnVgM0/7n-F#^UK8)2aN-?<k9[pi8YRh;T#*j+:V3Dh!7=2<sj(.<R*'Fi"gqiHo_RHKdD)%dTIp\`NPGE4tc'<0:-s50'L7jX!n[5?92HPqfY7YIQ1Yk;I)Cj@G*2`?9CG-_E:J.rgB.H(JdW""(ljcqRX6]ot7eY1!.`6]M=:I%GnnQq]MoP.1KVjo?X;r4aZIR00GQ2tHqL(bp5WZE.HeZ+-DRrRe=qS!WQ9,]lH_$h(G(Q'pF/,+qb,fg-Gh&[*JYkoM5Ql1DE6O7%;I0#ppG0IuijW1<MiFSef_)n_CT6JC:F)3;9[AWh)qQiHlJg<e8NHIV1jReo/g]t^lZm2IZKFp-/$?7QkJbtf[MD]cM]3q4%4UM[%O-q&4(\H-V4-(iS`=86'2_!sU1X$$9LsVLJJmJTe6*Cq[N,C\R44=AHKT'+Mo[7`$),nn?o9W[R$[V%E1%[o]/&+.Zo[7?4WTmAe%F>u%U.g<WUp9(5c&1.Onkj<#M@g[PH<'RQ8kS;[;&G/",-KnG`'D0_I:'!'_o\uV%RDbEuHHE"Am^\u,k8i@t0%Hd;_7EW40@$Q*%eNt<nid+q$(i2J&H0%*U]SP?X\Rh5$QgAZ*GmZ\f0'QVW?-eE]$qAjZSl\3Ec`:Gp)M5(<e+3pY?d\ICUR!(r][ZFr8Ne_MO0LdG%kEW*?lZmK?BW-$L0$Y5%,c@6#^3-GC7B+6GI4j`;[qB&J#^Z$`[ru6gH>3B29&f:'di,VYXDYR76EGb2KqMM`9[HE[++Ad19:4IF%]Eih'4]u$EX7[68_E]iBl3\1q&bP'`@&e9KB^pY>SekJOBrl>]AWbeR#$T$M;"I:%`4RQFF-YK<6T?T4RmgX6CmuTbjgImMkmGmO%8pSOa8_lE\ZZ3^G8mo"]eZS\Hc&tE"60/hYam8rSp4jH0ZMeVIGtfHc4E3?(.s*GMf>gR[l`$Uo)7pkC[+TT7F?/V\^5*);DAb#m%?9E=lJ^/t^\DrH%^kBA1at^jeQ+Tj/20J>`mUc=;gT0^H][\LofU/+ojt$8J>g5pFT2h;L(XL([,r.J6bm+_O#R0=W)g!`T/$e&>%k@6BI&e>L]ISAR6n_bkW<A5qK06JqCV:U$@IkHgu)1Sg@"<s*K!+$aPabt-C/!YrXabroBAuiJ*(D$p4Kp!8Nr*jCM,qh:neHAhA%U9AYrD(gT:e*T4fdE#o6h3lp'>f[<4+S)qOO;AHSntqKb0W@4IO;AJi%%<:0$*Z8/K)*6jZV\ONntJ/O@jP$p$^`+H?-*KA[[Kmb%$]*nRKT[-W_$jr$;M1A`>fhoL=VqX,Or'\QUZls4>Q%KVGVRF9kmK9V0=l()M90hpb1oVabAJ4.#nqEo*Hk]'Mt%IMFhn3n'Nq1A%@r]8n:14(#E&?9L^Fp(k1-qY]jI*oKn&!Qq]OmAr!bQ6h-JucQ^`,l@Y(D=Sf*N*ZA2d^NN2_$+C1[[(H5@^C@%)BXJ8oD[Vi^?K%@K\>-hkb$tqCXlgZF<Mf1ANQIFL&];Hl(t$1(?slM^-=E0_I%%:N6%%3Vs%_rA+1$^(J>$RXCI=CppX\ljrF1^!sa>drU#;I+LqH%-a<"UI2DWtWNKD[0uS7CiN1p:9.!\4\l`#cR99E1([J(I'<?8E>ZWKo:bCjN?+"'LjgSO!Wt\7+e/3L;[:!IOU^M@rP)7`HG/:=b%19k#\.sBI+M:IbAfi:Zl<e&pO]5#I+C7VN\<D+Z>9=bg=/X]^hk7;Y*rq'>5/;:b#B:s1A$@-4)'_6i1?@KO:jHV#ia=HSX6=*eM%KtO_:.ccj@;ogKTX?p5r153BHc77n?,EbB";<LNl.ncb$=4DL.o#d+EjHXjg+g3Gb6=*f-(%TM1.HHb:<["Ze)%q'U^\7u4\#YVB%J%=ffoq-^+Q_0[W"5Sg1$AZ]UK`h;>/0f>Wb+jIdp=F5teOk5E@jW0E&DYan_sBX>J[MI"a&ruJG5UN)?^6lq%\$_64#MJkE!ZlY%FNjr)(<E`bp*pu"B8ip4(Q:a!,g0;X@nB*-d>seO.[Zb\*Y$'C_^Ii[CY,\$N-E\FMX^gp_:iE>0T<Sf8Jl%ZY7U(:(#$l16iEEu%0oQ/H-Oe3Xr=tc\155HG6.E<GfQ\rah&R_73\VDZ?JHW:IlKg9;.hsVK=&P;gk'U*0EhZQZ%c5o'8E0o?I^bA7+cKnkg,W-mT_F`%d(l9*56@;t@=H,Xn%)o$aWaGZ^CeB^I[dLm2I<Z=+u_dT"/!*-Q1r=VD<<c:@gpik$OifJKIPiU@L->1Y7T5#80F\HH^HjP:-)n*%RJDG#Ur;QY&Qorngb0N5>:44u'.#@'!!uloPH3?@@]Y=;8C;)['3p*QAp=Ahr?.k8KsYaQcIa]>n-.iLS2=.b%ugZd%+BBR(8h7D%[-W^6*drOY-LelZ0Ejk+8uP[@@AiD!/%//RXB@s5@)9duN^qh1K@+ftN;cgc`sUU/0jY&Z=RUW;7VhWOQ&[BWR0ql&gZI1nKm)O7%N=rQ@h9i*BJa>C@N;g*r#0'QY7\3\=Qu,0r"mZUlkrHTt5Bjs[ALnASi"\'Z2olJ("^;QdXE'Ck(::7#I"IH8Ae5W@KIrr25R#^a%3^d#UH(>A5+I7Glg8^b8/\T5qccb>P>A<(E.G)S+K6YMsN\,[gSM>A6YuQ=m%2W&Ra)//t@\duK`]P\XUCmEpZ&PPq#KA87YY!&D%(X1;d3ft0YK2mSM(FO$j$tDW50M>Fp(bFgUb2Mt<BPeQ![B)4O9*=eMJM#%[gCT@AShXGHfK@ro`\=(gC]0p8!>[bO\f^6JVb^ki%PQA*U&mLc<0G1Vk9jgX[5%2.$a(+/JpEg="Ym]&>K,XR<N]$Qu/(8g`<il$#`,l#F`u7%p+9hN\fRtY*@$Bg#J^+$@<Y0PXo*&m8%6!O_Hbn;G8@,$2pHL,co"%IUUjbeU2'$t73C6:KcBJ5gnYcCNCN4'isrR5!P$smAfVA#gTKEJ"H()U)U6-k_19\?XY2_Gpr#]SiD%NO29EgoTNYT9uk6GKUliAI\`1j,L9CY@g\;cAND7a-q4i/=g6HT$WB(mYXUu@rjTmfhFOlZ?5&,@ktuqob76:b;s12Ks5%rR*XD9%\IW(2X?scTX_sBAcc_^H/bcATa*2>K(VN"&8h:h!.+K,f)!JiJ@,!A=/fd8R?=[al3YeF[7M*nhaN?l[frO=tT<X5ETVHaD"LV+[%-QBeU(Q$]\7XDn2NE@$OJ6ld?mPcKE9R]tF[Od0\2[p1hl'kTEGbbp@-(PEeX<`+X!B2[[DC_MnS.m%iCaJTm12;p,n03M\Z$WH6%#-J;;VS59)n:",YG%LRR+N;*SPC/_62EJ%(i%f!R-k&Y@hfS,k>KI@P1"3"1&eL?c@E/SN`1R.!HGDFsh]5!q\+PJM>HdD?8Vo;,%j/rid9+KUZdS>]U3]RG!=c*bgCNtD_@>`sJ3P^?mD&U]%Y?P&4GQ=4FVKI1s.c2rWWUZ]<_Q#U)SjD%*L='Q4N,`@C?r1/$m"k-Y%@EW*sX[9fMM\KgTj>%Q1O+oAW;&Bhe8Cp1o(8,.C/VAu/Ee5J?Zd!fX5(@-!dV'q#!PHJkRg2*fHM6aKj0'S[!\i;D)BDbN%al`F%VESf?P6OLN8n%@?0R7NB(XkMDFB(H50L]"emB,R-FmNNLBM+:pGcn8bj*#5>RDKYI2H!&7:iG"f84`(Oa"1k@;p5TQ_-DAt9Jt\i%J13ouZqN,\UF0>b$<.S6:`Es?X]mT?!N40=PT=:fAi8U^8+Y%6UY1P#K$1+dbmG0h7d%"[8.hD*2/eUGTBV+emg$WZ_q93>Ksb6J%DIZVM<C(oGa<)^e/e]Kmp,5a:Eb1@I3<Z.nHfST.2Km*gWs$Up2,"kr\2e`5QW)W$"R][cdc);!U\pUSF^F_hUXrhH^)sV+:;'!j%KdhX`!XC.jEnWC=@5.Ac'+6$45;8s#$WEYOJapceBl"!^aZKl'U$C+b1q1LUZt,!q@u@cM'&s'58,^@W\i)gt%Mbk:Q&4?3K=J>k%U2TiR^1]-.e):4P)PiaK3Z1B;MgV[4Ee#ln?'k]E&ZW,gqMib+@RmH^]TPSs&>T5XnV\>(n[3%,RPFA-PC,""PU/=aMWfPH".J71%.>:2%'1.9?Zi[=qCCqED`e5e_NBoS["aSn`"J'-62R)0'9GX!H=&P+m6`+#H%rBa,";m!pKZQVFMp1KULB1]#n-:XN9GgR;^rAh/%(A>XG&2P:,bn`!b=JOO\V/%;PA'u]S[9l:1Od<kK!!BjKTS7bM'/qTd\qQ"."Q:i9C3)OKEY'KdRl,H>V?r472St\1MMRg'M^hZM%3QX1)r.NIq4&Xgr5ClesR<,IO1+#[4!g=pG#c$Q'fIDdh5+7TAfmu"a@JF\rd'aU+3j?H+`F+[=>+k@>0OJTRXUJU4Ohek$U$FdQ%0=(`C?GnG4(oe!\et!Rt98PXhK%7"_9tGb:,]qC/b_eG-O/O[Q^mI"]4%<j7Z-[f)9m7ag'H70Pl(FLQ0W%Q(%kF='P%\J8.kZRY%>ff6VX5c>"*cnEuTW5=V0P-l.5M',pPa!rLg(+?9o*"-h3g0%C0G@rf`IIA$ENOuE63m]C8J<un*S\Z0bY4"Ad2j`Q@9t#I/F>t3%i`bLAc5,^kN0t$gR[n%EAn9eL:7n(Kk#(+)^fGm;o4ZgdZ\=+I6j_(k%"8cBoZ9+O_q&XTHnR5bPMClf[^Q'rX*>D*g1EG14<)h*%F$]r7=Bon!fa]s1bT'MNkpUr,'5/8NK9AK,koD%/S8Be')<=["qDm:_T_0]gdRc0$_N`>-Bg$^'3Kd87aQ_3^LEr*ha^>76"bR,u%b-,,>!A$o98$I71Em5_ZQ:XHf2:[pX*j]Kp1OMTXP!'WA<I2>=#9pjM]oJD:D,.lY>C=6:aRl(3F&rD>N>[%-B%^e*jicuGb";k7%Y%<D3YV1Hn/5'[tg]5@l<_h%bFA!-ck-;"K#]5Z'6eT&<B'\gXH6pqTn@$Vk+(grnPElfqAR?!HfBH:;/Wa%9A#@ef.6.^eVK9?X%=SO7FdW',Dg0U4MXPr:6oBanIg`8]XB8=R9ZRdni0BhK*G32WZS\7$1RN-8afb?fP"9SkMj>B$=_]B*MCl_mc',4SS2GXn$iG#g9%1ErcS\VeVpeb`]Do-Z5e<A0h=,F1MPg7)@qOg61qNhKIiN8A?5OUg$6l-@2HYD3-BMOe!u]a+`J;$R0]MfW9".O-B9dftRMT-3O*%`<,Lg/GU=a4Sk/k<Ils=(9(f5Ko1'[VB1'$7&\ZkDI"8="d@d[;?_pMWs;"fG3%2`JgMPuFe4?k#2-G0lIJa=2DA=8DbBs0f'B'L%Umj[!#;_#A_iSmVF@E!=.atnn3,aH8Pu5aZ`ci=sd&Jh$!4F\1\'F;#iTe2)+ZWHG(=2!_L%oq$*o[<`:8bLO;CtVJr\QUL8@3'H%n<O\:9S?Ljg7I\7Veq(rI^@p;/A_Yic^bR$d*ooQ4cVRf.Y!:8Oq`/FU@tWt>]UM#1j/X3Nu?/!QRm*VNWPI]Ojn$\P_7G(ma-%a%[lIp-=5>P@N"P&*DTAgOY1C^q0_\,ocuBonH2,8=@?@;?Mp?IhJf/aJ9hdqQ2YQYY8"45c@WX-En8k\+@KlbMmhpH-0h/pojaCs[%1S!FA0hOrCM[t1u<l!taJ,JR^^+Z<hJYlhF4Q\o>+>=s7(<=3-@/l\U%DA*rMg_e$/Ns6uKr2dM3p.4D,5$f'G72qS--N$ITi$KD%VB<`]aaS9Vh_3kb%1M3.GlJC]1*S<?0g+ZnLOQje5^>J:c[.N5r_B>E?dcV`p)%JGbR._aHOF/JNn(mD%.l3eFL])2_uE2,-bZ7t%ELOfFk`08&JfHSt^Q/=Sh@/ru<l?ioULG`G/B/l*&[D$uZmp-(1aPlM+L0\-YIFQ0p)i2GVk<tTe$&cIkhB0pJb[7rl6N,\rl7+s%WV:o?;i/ljhD7LYe,T$3\kdfg"+e^XBhtCZnM$BQdQui1g2rR1Oe(J''tZYfJV\_n_RU0Ho'b@q`8cRsX4FAkDDqa14j!OiMl&lB%$T=f)ILig`19"&5000c2Am)@]UT1ND,e>$OrX)mDDppGIl0`ui]<U_>`,<o,7`:H<Fd,HNn'\G6/40r>B'kVrBL5T34$Vu;=`tuo%p74P><[Vfi7;hu`J$"9-T4O"qZV07(ZE\u%kS&eY:GRP=NF8OfWmKinf%-rI@um#DGM3GVhO$=#D04Ork%$2t?(Y-o>\4SaMoUP#%Q5Cs_H%O+q`_6+5'=p?k/X/+l]FkQqe1*pK#J1/OV7&_B-W/ba53m])B\*4]($%0/#)@!N/>8ILHLDh,j-RhS.KYg'Z)e(OI2:k3%@mRX`^A$DNHCY5"iTZc:FFnC+U-=5DB/#dpTn,)R7AOnmH*?aB)+t%[=`<gb*p3PKf!b4KQju(Yk&*<#@)1"@[rVr^%#N_bMOAu(%KD4L@dX[9<HI,:^!\C0b4NASgQE"#<#%jC*L5Y*,";2F3rFdnfmXQrcFEa)s7(eoi3h5'GN>t]-KH;_qfaRC"C($h](cS;E]V+];%h;DSk:<qI'BdL_Q$Gqq%mn_5'P0(//3Z^H.\bH=u^N:/S*aC01Uu4GFil29((D[rn)QUV&NVMa9_YHj3T]t5<,Be(??ri<M!cb\?%fPlau@LSR<F;1Mc1Mui)?]ZD-(sg*SLPW(hCi6T)pXOFLD<<I>ll,ne*Y/@aMPV#5='Q5nFjefSW;`W$+Gq_sXC]V31)_i'&Wo4s%K$q.p:822V6E1SAo,oV?b(f'a"5Mt,fjamuM<h/:g..%u_&-N3iI6\oNrKg&)%h8iZWNlCrK-jk_S:2oNGA^(R^^8^FipOfWK64d%Lks_IDIK$*hLG&c7*L,OE!i.p,_aVf;fAR1_q_g.<[R&j+p_c,b0'02OI\P_SMEh-3lU_%Y:1(\^&>'@'=+E&ZXl#=DH_kR1BbH/%Xbp$(nu1g,^\skP5C.YT,6lg69E*k50Y5N)B?DM<*LgP['*ed<EHm2W[kSD&h[s@X,J.j:9E`O:k.)lt3T@f_^D3gd+[srbHQW`-%nT+ou'rju7-G/9fgcDo/FSL?@_p0A(_EWBdfdpBLK&M$Clr%`JBX%_sA7=a1KElk1g$.A[a=a4p'>Us(>Uu6&7p)-[H\GehPK-sX%S@;\:+o>JX7?i[q7ST6;m.VRl'\imO-m:ppk&Xq"Vs=!LMfb'>3.[ogm;bV^ZG^r?KbYg^iBQ[1=IOmFE]qI<:]P%q@f1a$qcbs'%96jI2VH\iLLJIj;ZC4&=7sn:"ig\gUjqOa&HX"GF,N[8%!]'o2AUbFb<KsfaRo30-;p]A,2Hs]uf!LgsDZ64Nqcdc7P_tbs:"TC3%%t0a,^f=`\mi?3i!^ll3gHXp,H!H;VpE,rdc&eL9F.((SPVI3FRKBbOgYW>r(nGTpKSq2'a74M:lu1RW//9atR]cVD+8Y=KT`icg%lkf+*RuPR2[3u5]k-fD/b9Zi@Ldj^A(g3m5.t,n]M#Eo7_D(K<ir#0$2%(8FhePNTRB;?EdIO7#g;!T[cQ!5o$I_c[eL1:j]jdNG%],E%4-5IOg)HFd\33q#f7?:b(24-0aCC8"/Dgs:i+St,sLuN5ES+E7nA:MclAZ9@Q=*3icrm5/76a+B=cGod(h?sN$04S'!'Cs-d%=mBe4qbbb[Oe&XO*J^uNU8)#F'SueGr`670E@tB-SUbgQqsQPN^LaI?<;+=I](KukkVG^1%V57d<qQ-Dp$V%8HmCc/qrul'LP"m(%hIn1/<9GJ<2$Gb2H?!>f70R<umUaT!S)PidXbp$(nu1g,^\skP*!ttBUif(i5UXRj`6'Z+XIX<@d'J_6R?os)p)5h$V2Pnue.d`;%hYpQ[eagYaVTf4HiqEl7hb'rD<4"c&](U&lkd*aq,#9*7@<3VI^XPq(ABD%^^?s$oRfh>d>m<Ym.:of2V5?MtGXmTbp*R*m^\HmY%jn1$+'r@Yd;:Dq&qa6u5&tLbQ:Ko(L-g&5r$piZ",g+UXV#Oi<c2]22)+U)`EI4ON5jZPb\&=BW[!!4Hb)5?<r93ZdNpL];UaQu&%NgajVgE/I-e$r=a_]Lp2FXFB@o8bH*@iF^83k-o]O^5!\UcQe!cJ=s)"_'^*^D1Rn@qjM)bW+_YQJfcB7Ra"aG>r\Oh>Yc2)7U8d%WN]G'/co3n14u60?5<I`#sXMqX"VQ>M!f,I:Sj]ke4NF=fmK5(XD'G&9o)B[K[8OsA:Md'3L1,`MJf!>n,9*U\Cl_2EQd&t$as`h%)k+$s0g$JgU4VD%.?U1;o?**:;R7`k6qr66^6]RNduILEC>'EGmkrua9<4ddZoi*7p2>HEZUP#m%?js"'CU:%(-6N`;T85_FT6S9%0X]158N(*l5/Y>.T.DjUn13eoJ*X$+[mVd=V,YlRat,bgLka1n'W%PK;:D@Oqn90O!-iBu=Lb-?=):q0)&#!l<='Js_pNRsmi:#K%2PO,XQGPu=qH?f?p3Z[@_);IWQ^XAK0?W`$U*7!H7B'sGe9(*8rm9j.1T`S<2'u&Zb,u'T1\hK=[;!`V\cgr>k]l+.c3tp<@\V@A%5OM?_8n@J0HbiaSn4Q1c\5[opo;b2l<0W8p>=H$Xm12@GZY\!RP($pnq?=2MbQ&_&9\aTQBg&B_]._7q$h4.5=KA2rO+UXe'a5.=%PD&<#;Q?uX:AM.S$'ci+WG&`lFR.`]d,?'$m9j8.FhnFcd5GI"^luGurgdX?";FY<c+%6*\U6#A_NF.<Zdk%-iOr\6rQ2738cA]9%$,`l'&0ZI`Dt^`@:Q9U4lU-a$:&Wli1!Gu<W9.-uebNOF`<0<&_Na?S,F2Za95Pb2RL^uuBYdV7T/q(4km%VD6DY86lFu0MKF6PV%!^<Ki4_*#ZI&ZKX#P4pk:JH(Kl9gVM/cCLAC_4@D;k'c6mfb3r!\:)e[qDe<<T!*=d.)Kslr,.#)Z/$`LW4eYO<20nVQQc-s1MeX%&qO_+-BgPW,uEN#gIDb;@oK!<n^,jB*o3=^&]5K#n!7Yc?Ekb`J-Bt`g1RW`d_=9+T`b/<fV_2$2>4"J%upO<+b`:d)o];+FG0CG%-%c6r=6n:a#0U9;>C@SRUlUL`C;a%\T/q+5lj!qJXuB$IoaL*ZMWKbo?Lp4,#)hj5H[QtrUlUL`C;a%\T/q+5lphIuADpaYo_UX)%hm2o`=.*^5mG>+hYeJ``TgO-Elr,.#)Z/$`VoF2]O<PH[TU"DuVr%k_dd0X'r"U\qf=0HtE'U%bqUC=V[Qa?IhUIT':6X_.W9Ij/%^^?S^ao4b/r.s$iY?P9S3g@*c55bCY1EUpaCZYj1@m?H_Z6bIE(WaOi?fr^74-mG>f@iE/,bJ9:e:a`s54n'idLR0gW"-opDoqA7%($h-.o-.UnbdWX8-Gn[*qoJ;TD!Y(FSf7LUWI&,>@Ru-(_6Wgmcb'[1L4gp*1]MCdIHZbV2>4!]:Q9efe@i+/0r.VYm)0,o47@O8%B#UMq8sn:[c^6lmHDp:"L\.:F:Q9U6lr0f')Z'P&MR+,*Tog(F.#mtQ<I0CsAC*ijT7&lPpQ7i>f\!)k4>li3;tn:\^lW#:OX&VZ%'&G.i9@$YDkFtXr`!Xc+[6>#`J,*G;H2PX"OCmM8!IF&+df;N?jF)Q-pBS@JYA+QkM2$;cZS2o6&n\"+^<S"J"Ubt*^^:B(Ki)2i%''?u]K_^9=$1l#UN`Y=MY)lL7Vbo<MGRERIbU7'['CDM_VGJt=0V`#.Qr>[li_Oh7$K`"4'[0-KSJ99qbUAhd(*(Oi<LkDZ"Uc+.%',E.C:.nkqQieiib\feM/BiY[(?U2P$a[09<u0qM"UfBJ:)=].^^:Hj_1IBo8Z)q&F$d^Z*;n6=K=PBR>E"2-3]NK7jrDSma>fQN%8ieu":RH,U-Z*sG0V:&Z?p8#=_47m[ah`AAJqM`:U+6Ii_1I>#pn37n\KLKtpUSX)#?GN*$PkSC_$-AdbQS=lB('GB@884AR"OS4%O>$o?8=5%n\WAKM<_/U1e@CYp4'"q?4gD2R0Gc92R"N178=32?OY@TWjre(r@6qaMABfg]\R7_?>f`@dKK68'_H_nbK7u=i6Go>;%be_0_:m*LK?=kQn0$oZB0Gj)r=I9cu;%i#Cr>5jI6Q\b6>f`1[P_?U.=T0]TF-%pP1F12,T34^P$b:;>0Gc92Qp$S<E%iZsE_nFp%O`KDg%asE)_Ha;f@1FLC6Gct]b9&=sb!En7q4j4.\R7_?*3@89KK1HD$OLl^KnMJW;3Q[D5Yf09[)n#Tff>4ZK@uB_?k+PfTjS?c%j?g[fYi&pG!fH'l?pcOdbQTd4k/)im*6a*Gff>E-'I:nV+?;u[P75!b0S_TfO>%J%8=5qV\WSX.nSoj`%Pm*3_ApM7KnS-9Nsc26%&0D\uk(4HUF!3^W%d$***$!1Vj>],d:RH,U(ZOHt@4ihGKnMHWNXH/7poXr1F2<H]3G=E\$+&)#(Ck'?1p.hBc=pNDQj[LGbfOoG%*6^uq*$!2EBUg'da_71abfON<,g:u'3(TDEa`3Cr(II.K_X)rqKnDAkN=,u4&/kcYF!31H%d$)a*$!0MbW(stTlG$*(N2WZ0Gd(9%i*\0j`^.IH#`XIi3>08+,g8_bHm3"-YiS3g]\#H.IlZ_N$ib8.RMY-WckdMtje+7Zr6%B5>kjWnIBi;q(\6SD?S:]a_7s7=Mj&WN%k_k(G\^2,t#BQRl%M%Xn63II5Te?l_k!EDp'[2923%1.%<O#IVYDSPs`#aWF3%:5Y]Jqp=1J9qmR"N%2.@?"u+?5aPW&Qf)2at?M%*&C/mS/faE?CW"Z8Igh%b_;uTa:$_J[B^MSk/(CD'[29C3&m95;/pP/6g/`6+,Fnj(\6SD?nP-lcG9q'da>"cSV+JW(HVeAV(-Wq%k3<1j$KarflkI[:.Q.o1VdM.D`Bh=Fk_k),@5820=&L^gp>V`Q/j>q9?r$:PTO>c[-Dm?0?r$.LFEsZ>4t2k_]/V7,#8&H#$3bKK%(C(%`Te6fZk+jU>!p2gT*!FJqE76*6F.k2r!p2gT*!FK>\iB'68R3>6bD!Mepm2A2E=afC"6HQr0IM!_1,()"EAB3qGB')<-ai2=%)46Dsnl6QpMp47!R$.k%.@@C,HSK#<53A<=Fs[;IFop(F,m/331j0)c_Ijhsb_=A&(mk])EA0'OTlKQT(IDWp?XCQ3k*4*0^KgPm%K7CH$)*@k=Ted2XASK9$.fFBBl9"t8-Do?qV-i()K_h^u-(>$j?^6/Pkpq0^!p4#Q:'0RT0DAHQR$6Jg#ahT)YN7ABQj^lQ&28`X%=',,A?nN/66,3mQhXsRXN)[&n3YO2'5CIWI"O,fdSW%C;$(,AlOJ?$mNIc?dD=";Y0Fpp7<#Cu-dEK6Q"*<Ea%L2(4HQ3I<L%mVE%Qq-O'YKFXCa\2E/'[5%PD<->#H.(^CWi:Z8DL/M/^l6Wl1BB9KT0t9&"O+3*SmRb53N8+(J9_`^nZ*9V-P^Y50Z1u-mjSR1=*a:B%Q%4,pET*r00Q5[X?Bp%dF5!t]?\[B.?ZGWi(NSTp?S:E\_8"dt7UCdu)+5FPis5T>G_;>=s"]d;[6k3!1711?k7.FPV,sDcX7@n[%^?"3Z/ptdW^O3E1G.6O>#*24ASBT!fHqZ*)MPOUN7,@[=oZNGG:TmC*4M/7?TjK]Ve>pqL-\l`j0/#:1?hfsh*KjcpIsG%7euS?p%Du+igQ%+).kPM:WbCs%Ypm2AnZLKTOSK#M2IsJFJrDiZ[HafIks)RSZ`PTAPQjN1K^MNVE6GIoB=uQ6=aXnheqW2i7s)=fA-=-)@%dP!8&NBY`CgGSYbTO6Q_%DU1.b`gfq-Os`MpK%^a/fC@AK"6r;E)JB^BUOj3H&P+$;D92baCZF46,>\(@4O@*kO@X^#P/R`QfMO,%>g:R1$jnGQHbmP22),fZ.L1$mEI:arjusIZP(S%99eJDm$[m)80MesY3!V5VoT&1G)Ff&[#dB<u7N@jlSqT8&Oeip#1FSfL=hu@T%_ApLNKnL==.&1lB''A3uf:$;qO>(nB[Cltr@>6?0(50lNeWDu?6,J"SK'#Kr#ngiVDD_*>KXo/'0OeWA@6Uh._kORB#rA^p[`\m^%o5WV'),>3+Vj;:B0FsfXdq943bXd@AU?g`F5#/RmDa3P-bj\Yn`]<E+b](6hKC^jVK,H#oaZ-2hK6ag(rE%rcL.PpaDE%qY:-nSo%K7nMda`uqnbW%eFedj-:7Q,O1gs8a4N,?#*::MhfAnX3WGMjaji"C(!dU5_c<bc0I:;RF".AK4P&nXs3qs*)bbS-:M3HPY.)E+I!%gr8nn02kF`m.5]VBBrW+SK6F+6!lb.`DujA]<mLnqI<daNr?I`4/$V-4-UfR7,4L'8F^>JgUm6e"&",eJ_Zl'T^ZSU<rL_>*O#J/%^kt@g@,]EAXSB-XO.Q@;'5%71JqZGdKUG':@,]Earq>ho(G,L;-d;MA-d;MA`<RLalk="1m"0pYqh1A-]3rUQ*WGrqd4SOGZi`s^%G(IN*m4SA&d4SOGZi_g"m=L$^gKjj0UE*J,BG\lTg'%kFG0*MgO7k#BZCA#<4C"#i=L=HHFD+asr7MCe41c^!c-EhNFD%4"o4O]"%8@]-[r7Ms(OT+TuKg5HfR6Nd<oOhf56Me#aR/+&r(B3Y/8k=GT_8;gm_T\WXYjc:<n3ZuX:RLsa$Pra.$tr1]G/<=:odH1fZjZ";%m>QDuO7il8O*8@VURe(hl-V+c\?o&!q6Vq!,(8/mb^A+l9Kqisd\e+*'B.@lOF+?1O;ut#Os1n"B1rg&1F@m#bmJQJp)0&]]413T%/eJoYd&r`t[*P*Zg*I(N4PCNkQhD;\9=mT(KM23$ae`8tGA3CWNGrU(0tFYAjt?$6_%A<eJqZk06u[fP]413V5%A\KQ_4h4BiiA]%g1Q@>duo`)54'"-QZe5W#ab6&P=te3aerER5Jj=H`oPUOR/=6H+N.R>"`]TH#mUctp)0&a]>T>T8,J7eUKoVKBU?5kn7WUh4k^c4%Orj!(AhNJ&KhFL;8^aG@Y]+;h/4mF[$PkA^N$V&^p'EOAG/flE9DaC19=nTjdOr)*iR0>\\?mLE,[K+=166UuTqk3UKUG=lj&!Uf%I=gP-c7"qLBV.!MBP1jJGdJ,VO*1`)Udr%)iR,qYQ#p^V/6pmHXHG4''@r[:h4muuV1$5)V4Ab\l-_b(k0f84QLnj''MEbZ:RHF7%1Q!JAg*b*,g(E#$%daUk;`b(cd]&dg/a:bK@HQ(baHgp_T.k>$8$koK[3O8!340,0:@3j[.8K7DAmXk\Ijn^kLik.Qm=L$r45sV)%>MJ1FMH@DVk1#F\QZQt4oLh6Q:QRTE,9WjC[3PIC340,0?L8#S.:2BILacZt6G=OJm1X)<m0JLs?L8#S.:2D[d];b$1<$;b"TR`:%Ne!MVeNRF(eW(c?imj&;RGual_15K#N\Hlq/:><.=ZGDOMR%3>aV8=FLm':1_C8+8_SQm3;hTj#Qt[1$kY)<k8*!>U(60f2FDFt2%"*87ESDeF&B95fu[51?#h:`_lPA]c^U>TqV,4Q\&m3;'@IdN&lnE=b)\[.4RGIXu;4@;^qUq1c[Z\uD=\?ehQ9_bqeJ5#aE97T_2%Z`=4^qm/(D-J[9#5UP:>,sWg4fbknGhWtjt'Ai(*1?%*V&g.kElk1ESmd(Q0P@>4D+qsD2&gHB(m#6Z*Dg$tl$#b"/nIBJ\M3&$n%G):rnIs)-Q$%I+ub&DiR$&3GLG/hCP41iGJKKm))G.TuNKYiC,qal[?Lj#[\42YCQT,h>nl-@SYQZQkQfLtK9T@?%u:H66u;GT8^%>Z+?W@pDo-3.kI6:cO&3;GXe.MM.R?7_,=dE2mo541dnf<&##HBF/m+L9uUm]7dPE2nS@B\2V%\@"pVP`34hQ]>Un+2nR#3\2tYl%-1aZ^3ubrBL5T:(lk6AYrp18t')q51WY5<t&ulTDlk5Tsrp18`ir89WPnO)_,,lU^llrFrrp18K')l^7[S1$d*89W8d^bQG%daN\%8KQZ]$KLR@U7WIoltHoI=1GRa&_k!V4$-qF_OFi:(;lUNTc0=Oe!jVE8]$sFN'fg`f3@+u,)[Julk2,fhWtk3'(0RpTm:@iSQu:b%_OXshYf!#;1pGf,?%PAZSR$h5_OY!)Y/?f9!^FPm%3+'ab/*X\A$B#Nj,k:SKQr/+]At$E1V:SHKJOR"D25W?AqRJC:0m;3/i)#:%barh,*"7udS&,o/M;cZ2JK!Lk/s=cDbUua1iQOKig%Na2AsX'fE+[EU=8$9>p-SVtbqM/a1Ya1%fgUcZI+]gQ,(/&\6sFuTR9dZX%_O5h2(m!FTilm.JbSI[,B#@9m3d4iPR9`4X_jPrFHa$&ME+Ym&(LK'o?#/X,bElN,Ur/N.iC.hU\gn^o?O%BXOt4/#7u&T69sXPo%E+Q5*Rs;f8?%Nm0Q+]qACJ@lR#uh132Dh,VD/C1%CRh<YPmq*.9dt9t;guSYC$s+bBq/nfPn!b4^RRF>n-/]Dm%3R+-5(C)RO9&'%g>8Q/gll$]"l,;)dPRX"[<o3Y[aVd'-6:c>`Ru9bPXenD@@6I1\GXqoRTK-,5bRWA)E5Q-#7F5:]dj?2PMPme+2<[\]>K!1Gd;U5%gs2L-hWZY-_EC'uFi,6Q`uV&s[4m=[]*^4',Q"tm1lEXe7lIk?-bYLYA.OTWG-BoHLAbiOc]2h3ln#@b*8*;@g(?Feff07Z_aX97%F#iOT@inA-[S/&5p.So0PF+&"I=&M6:?#ZI?iJ6pMpM=mmd35hRhWKY0GauMHc9C*=)uB@WsKe]:KT[PDY8E+TB9'^T,R7LfV_L#%)uI63BTTFqO-gYfEBCj8Csjb:NX[!4*jKfUh<Ol6rl:qV4uM?!Ytpq%2tkE!'B(TMaeO9ffW6<0F_Ns'-XY-/[LXD$LSd8BiM!)D%*I;Da(C_XSRAM99([hN24EM0AL#\K*I0M3.O%X=39)*XLku/7eRekC+HV;+e(cS<f/a5uS03F(F^t(2E+u]S(Sqq01+3O3Md+G6c%4>li3;\+ldU;:Z0p>`CK^DEu]e/Rh"D0a.$O5O4!LXHbu2>4!]:Q9efe@i+o176%g?tT'*JqZu7f)'n6qa[S'i30P:.!sfL;kFuu%d+3snh4+7P!uX9+ZZj/c/DP0_OT1!1Xo)5W#87^+)Z/$?VoCoClCkIi1me]6?&Rh@]jg4kJl07aj(GU'HJe#b:bKV?`]c9>WNf6i%H>)X]%47D#[\Z.`]g1gi_;[S+(/%U"[C-V-GIt?VW<l?pIH](lV-c'<n?jt8`Y0l[$WaQW@5&e3q&(\SRCE#VR+CZUfV_2$2>4"J%%upOn_;&Q+6(B:idI.C,b[hXhBmb0Br6a-0[LXD#HV:!"nC5sC*o1&sA]&a4:T56#3O\A[9:$@@A%T:$KM$FUXgS`\a+pNU2<(=3%%m>5Pl5'n?[UbQ%p=-[t#)BYgm\XW5M?JiAI31J6O,\R&`)C0<3d#B-QOW*Ro0Gt.QDaXeZ#nWLDbr34:KZa=hs1*c_0fq_;^7kP%qp_U#`d[/[1*?'BR"h.9DJ8u)F;i;CD'(m)\#)?riM!)D*I;Da(C_VmdRCRWOmVtX6KnabQeWg_7pl#E5&qX8>5HTtVhRBXkgn08%*QC)Ql/)T1'tU,oNBEdq@[VdsY3CQDnC#=ST7:V<XY6#!IbE)MEZ.IIrd2Hg8&E\'c2J;*\c9/85'.2T)Z/$?VoCoClCkIi2ONG9%QZ)`65_[Ve51FkJT<WKR?YfPcOhA0qT`n4$IHo1mV-c->:%T(fatlf`]jaQ;Z.M)&)7*s_&+tA783Sm(W=_pcIHo<LA%u\2OZ>cN%24R2C"F[IU`ah?_?1A>!Qp(=mW:(r9o<GPrNHf4);lB&CrNa9+73[>KU[(ABSf$ONRn%?ibbf^)m+KuXI31M;:Q9d;`)C0<3d#B-%QORO0g/rUCHc=-o'B(N==:'ttf(Ykjq:+&p7Q`R%WDiQ2qI'$GMJtpN+qDf-QD(Ct)euVtg4*`tnHaE*2X%5IReM]!np_c"f9AcW%mLX*FVGCsJcEptX0o])+Jo"(SJ_9GYDZs>Zdo:'cQ(_$'c]J+-Zmn[:bG1qMs7V43;\g.ZYS9^MZ][^0R,q'eYBHL=e,;[Z(,BpN%ee_k02X`?DVc')-^1U/k/1sh,YZ4QZV5?sQ\)m?Bf0h9oMGhjmW9N$NrLqOW#pb6$-o0*A]jdje`"Z.0rhTH'-EQJQ)6u'Oe_Xi$%l>m/39msa*rndWT0T.2-2/S4.0>D/@r`32;V5!'Ke$X]&6_?@OCQ)&IO[s;pp9-4IX7^IlGI5@\XRRX4<4qUs.?G;s$]HNCBReNb%cuA\5Ia=/T/R+L:]]E;F[=A'@T/dPBD40`nL3:0G$j#gQfgQC>ir"q/g&N[eLN[',G2+i+V$pIfXOC40,Q;3M>JUN_X_1'nj?^Fd%rgG)/>;dp'79?4\CZkDH%V$?C`3YD;"k++@/(Ro?;<O>m*E//h?K=\0)qR^E.W+cVb)APl`^h=a/V2Pmm;E.qJ3Ms4Z_H-)e+;0"%g#')(;(*>''j\G[5BN6EJ..saOqb9"-F?s:q.Kfg%.bPG;&<FX_rBu-1\IX@<2rmV6`DMrc.B(L7J;\lKTq"4m`Y&ZZG0tOZBR:1%._9_>^\=(IJ4O3R,a:F]?D2oQBFK!Sj_pOb$FH8k'S0P0m)*)O+SrII=\AhmV>[M]P=>C=28L9r5@qY0QHeqTfjM#Gg8k2/;>)'r%_&i48ha(ZFC!L*sgp]^LlC?qA8,F4/.frtd*+!5WDH'XMM#Z-,<j9F&DcDBOV-"!$f,WK$Z:RnC]Ab^(3k%=q=Mq?mKb2)SZe^K@%,%D1:Ng8c1Sd#N_+e0JpSUp.?m4%Za9+Bllc&)SLO6pih>*4,-C>"gb=FSGTrN3FT8k#MWSkHilHWSo#e^?N64Ec$EN3!G,b97=e%9CRK\CB`,@>c8[r)%!J-4A$d"]\fSa;]u'dqcgl@MhmF_Q;Qh^r&mRD[qo'1MV`SP\,Pb*IE"g"T724#Y;![)6s3-;6W>#1dGEal%%SWL*@/!Rn14+GPWBUnNh9,)l%JT$*\WthigAXptXj#78\6/]fhnL>MR7qOD+j=UZ"p6,]S]/kfS,+:r!1=^[=D<cj3[gEs5LN39%$=WhQ0ELLm3qBBjqdMi<,oYaI^h0K""%<`_7@@IIQrOZ-6[T?7)_>c>>np,OL6MS^&jju-)?g5ZA$]&R8uY6)J3Xt?:3ne:h6.0S%^iQOciG(JC5ScMlkbniAaY7P@[;rU%e1q<NdmfZV(ag5o.S't??mF-n!%;IqZQ5s[M5d_C^1O2=iMjdo[8tKJ5]=3tjK#r-nGQc.%@!;17rcS1_TU^g^%\OG!*9.#WUO/e8J-1Ti4!7`lbVju74"r/3K,n@8s#Ool.nCP7Jh]hG.l*"oInd#/o?TAb$tq&RM7bI`JRZ75%F2^8#=jd2jcZ<X[jC]f*.HNQu=joW*-2nn$(Gtk*oBXaOXGi[To[oknaNHRedC[2'%&0U9Vnm"c)9bCe`uOWs@\rXt>i4B:n34Am%r"YNLNph>DkJ`AmjLO2s2gs98]2T0AKl0>&5/lmPXV8Z<!2X$EaJ>ffb^d!A8ng:,)`gpm7!8qNO3(hOQODdbOtKe2BjFDG:nD0r%B[A\@IVtD'>HMF>%gYZ:lO8;@4j6#3SKiI(/8Gl[FNqNpm8Vi=**7T\aRC=(=iU,dDjEr'g0@[E0X>_\'9ik\']\AM!kf[u$J(&D%MA=O?^NC`_aH*'0rot/Y%OKtqH8d@$#t[Oi6J<fkjU+"o:/mGr/\,jYhB:$,I;qurJ,0;:;NA7Y0\:<PK-O<2aAmb)JOF1Rs86Pu%G;OGbQe5cZ.0p$0lFsNk+ccF(1R%>iOb:j'M^R(m;M(VB*aaM-pJU`@Vrq[RMa#[5/Ro`TZa=&2$fkL2[K'Y,Z;e/0jD@rKTfsrA%_1mn5q\I7,J>=Tho)MVl(/h&LU^+bq7o",Pm1e1.1h"M>%>;Yo(h"^'-.6R+e8p2'!!K]F-6To/.jYaT0ZQjpZFAOZ3bMj]W*jPb%hh2;oX4Md!fcSeD\m'/c_=-qEU#!j(g^M)5Tj1M@n--V\_K?,b(k"K)K4_$#%HRi7%:q>YRXtr/YLk2b(p>usVGXf?rZ4''YR4bc%eaG5b1KGB2=.ZP7$q>E$RF@2[>Ff1W.A[6DW^'9`.g@fbiTJd'nSa[4,ho7n-9!,*]^(n?dTJ(&l>;r#76'.3S4K4*>7;E?F.>/C%XdDAtYF`oD%IEm_XtO[BGaZ!?EM".=;/RQkDP.`K5auWGf0]3URSCGH5<S&K[>=McY-shi)0"Kk/Jb=7+;Y3Ur+45?Fi.sTM>mo@%0J'h$Pa./+6MmK9Ou7'V#1S*]M3a1X9ARcnhoJ'fXi_dl_CTL\MJ&>OOf`:V0-GSDf;c,JFb0G7WrA.rLhC)#B5O.38^2\$CqO\?%DFO9rX1VMT/b/=l?Y?UG1$/o:<qG>6(Tg/en^V$"!\t1R`^TXTerreQp399ZaH#UU'EV[mfm;2g:<hYCL2JmJQ"GjQfpt$W)5JB"%B2K\\(,r)?3%8&l*/jcgJIa/p)fbO-:Q!-'UPT.'*IbpDaeV(VKj/u#rTo&&'TN*U+JVZ*N8T?nq`590`,,:56NBebo:U53<"hO$%^m?ufLj"T2?&:n]7<ajACS&U>X_Gi\BFR/0NLAhOoMG&2FUpoJ.";Z^j,jed!,1K0jPX_U",/r@i@V"]C0:Ra"+cgo!<>nTGe'El%/%7\h!;J>!7,;o<DeAuJYMA]=D7;O95KqU/_s1U5+hVmk(/_+?_QPGcSeDX8`aEiqaFHZuodFjc2$U`@e0'p<K%*X'LoZkWR;F">%fD;W&kFqQ]0]%n'A,pB:XB3BBqpI8f1o!U>Pbi>ai$fpd_O@;307U1_m-Ygpi]Z&1%U'lK#T3jF2Vr/<8->cn6U7aHniPe<c?3>B%5g9?:eSlL=j.0H3gO=X;FT]N6M9!3&Qd+r$U\MP)]+qmng$<-MEO^_X/%V%ori1,&_"c2pim7`1"O,7QQ10SFLe]F1UH"OeV1:Gf%K$M7BIr:-tOm<=Xkr?Q7AUi6?S8&c]Z[q$5M&l2l%9<f`80Gh2p4/.HqkH^+oULq/*R7cnNdVlG#\;dM4,7[QHC<@;3p2S3?d%4s%S@XG4A=_?s?KV%4W)]6m&Y!hubi^0'7Gud%4&%jFk$S16L-$R!_96\GJIU)0eXKMi?pl\I_b.?i;'_*QD_Z!P01.nCXlkN4U:!JR%7a3n[A1ut#X-B'kK0j)f>Ff,oKUCB_]^2K$E%?#\EdFb7U'G31:D2b/ADeGMXTUD<X+(9u_ZeVBb+#kB/J3/,6G#[neW?rcq^F<T%gFf\+mUc$;3orCW7@8qaJo28H`X&sC3.KUQ=G,LRDS5P$r4!FNo3),*nCT8+/HhCq[h92^Pqs&>$!<]fLA=o,Uf4`X[h@EF29.D3%Vs.OM<^IaZQnX%b/2W_s$,>"OD(rWc&/i&*c2qT*+$^=QNJTS1+LEh2o9ueYEMRN',TKP*1ecX!ARpNha11eTKN;GC(>-4PmS@.h%+PX29q]m7#&/'fOri%5Pa0=8h7S*aLSY[jH7.ci6iRmg&kZ5V_LJ;Fp)l3a-VJnZ+o_O!m]_VFaf[s?IL\t7Q=-b%s,Q$6^W"mAT%bmurRf[Q?1XJSQB@9bnm*dj,u.t1$p<*7DBFZ!nJ]jNme9':/dmJJ[C!s%)qDQsdDj#U!:NqVnJ>i5Uq%InKA+gM0S8c:,LZn\9L%*T^MFGfo)OE*p'\[V;LfP0Wm\A8V#P+Z:F/N--TJ#J4-B#tI'"OE&dh%,D(M'!Q7bWPKJ\H;pEuH,K-$fGU+oK.PA"*0lfYauOS+%LEN:j*MPX-LEHj'FQTlo&m6WPE<<";`jL\dI>_IAVE=R@<ZQ!n,?f6ccuW[2_<=\.Snl$QO%!hU06ShZfRE@&?5B&HTj*Y7Vt(PX%ld!`sh%i(@CRG/;Cm_1+RlmJ'?,S8sns/Q<n+-Ta2<qV`L":8#:;AT>H[Eo/@F[.J:!f92=tDV7-_q)l9:@RNc+%4t"XW%B`J=(K%&%Z`aU?P&N_5S,/15WA,'2/lYe@dE<>1m/W!"A$?:W7"3hB#'V(2N\'g/AV26Ka*Feejq1JK4RWHq%_[)HZ;#HC)3H*G;_0N&-:p%8kcP$`B@h]]JHnTi"[8RCn#S#35+bY4p+Q8mnFL8>UAq&i;n]!Y/u,]iJ2cZH^VQ2L[^"?GpmegZ^3TBST<I,C:]\`+56]je#gjC%Eu9uu,P8Fnen^(O[mKg5p#$%p)iR9_'j]#4CBuJa3]?dkUc6,C]S8CDY9C<<q'Jq%)/+.'_=&u<(\GU+cFWLcj:qbeqlYokA=\$2%4pTYbF8"lCJtK<*F:Z4fBUsL0bq+ddB5-HKd]ZOTM(8`0>_L6_"Gc^%:%pEP&uVmP1L0Mmd][pDeieZrLWurS\qcqkD&CEt"9%Ck%X!2%hDF=h*B=bU.i6JQDIGR?LGZpuK&ut%i=6R)5&*[^V3oi0:J9hT[14BNq2;RNN$d8A-%K`fuAJjlimR8ahbsOFV9*jqeo?bW+%";GkIk21\A+hdEJ`?g1e>-6VuA7_X_3`e!hd+o)cMNfUsRkgJ.=B?(3lnGR'$A);2p7,JU5jI1U)b1FarVCGBd+e!s`N@@d`5=rD%.kOIWTYi9\g;(Qt98Ci.OY';AFnga/'0E14^KBtu-bHs[`GVKJnT$L2KGeM"UJ&!TlaYH11NG?lF/*Uo!^bWJN[lefL6\&/Y[KXs%Bt5\_mbh,LhM6?s2(L8^6UUGUPB.MZ[B8[B>%tMLp63,mqW)(LleGW.,;#U$k7\jRE%8YDQ7p%91t%[VAu(]SF%[H(Isr6o,WdqB%^lS1GdINqcgYH<Wh))]ZDJ,c%Q3SD^2;J2R@p2)j"j$3e:iA4,,lo$(Z-`(/\&B:W$S;TZ-Zl]Ak"ND3a8KG,hCQ#B*a&8RTlhb7%[$l,QZ-[O:@G*:L>'=QtqD?=b!9lGK5fu(Y53r'Z.ooj!_m[j)V:@\EIec_`p!OX,/RS3Tba8kS)f:gZ'5^e1-JJ<+DPGB&\abs0%mabDNFKQ.\Qt+0dm3&j_2G+`O[J5)40!!i$RV4_@>HuQ;41W#5rVe:i+VBSLa%eRARW5:n<iRm+X`VD2$=5;6=5?L)bO!aQckbs"%^!s`SStdi:q*!NME0kI3'\B;k_B#muEnp(^$JFnT2am.eo*5IX:p3Vj+(8sj/4[a>SRJW==$7jL-Br5Sh;?B19'@G`(//+Q-0NHM%2<Q/F$-2n&%4[F09ARcrSnjEQ]pH<sd7>l$/t6kZ!Hm[+:"M-^2.AISE0]VS2-nDh3?F2UV/SIA0[6%7gU^-J(7g22*QJ:ko<_7D%2.L8$1-l-VaDl%EcOE&9+i'*=*/Se?1,]VqBBHaoZiU9meaU[V_ZRSh;aU4F[j([Vj/X'`Ujo?+>\&?ZU@+lGAY,L2B*raMYWXo"%kEX?E9aY[0%*boil-HsuAe=:)d\fUY?Zq:cE6$%g:6/`]]K`dkWKM%bVru]67c_"h'N*4h4Y9+S6MDZc"_;^[b8',FdC"q)e#=Na%%C.AD9%8cU]e2_OTHd,]7#V7W4h_L#VKl!>+rnCDLl+(N<pF!\5:>%A=B-DW\sC`;B[@AEceW?IQ+9#t2<:I.>8`DI@p<DbGc9k-%Au?7RZXr^<LRPAWoGkcl8uYfVGHi-I[$.S4?&hAm=R'o0KL.>s*!)b*[Oaqa(eYLb&N-!QER!U$#uE;WQ\C-.:5JWSlsAs`7aFq)%U!3J5Ra,L<qfh^0dC%'5;g,9o+HcfD&Km`^%59MZ6X,Pu2n)]Z1:tJi0[@J2`Ce74MGSp8lUPkcn3E"dP1o''K&HH2&<MR'0&GR:%&=(;H4e$00Oe#BCZJ&h<gVHKVMn'Jcn!Pd_>K+)WVagtINt>FXNO4s6hNVOS]*JqKNVX5h:KEBb5R7J"8;Z7q#A="6R>g%@5nhQ>%Gu-:3,20h\O3e&PYNNoCL^a_O^.Khni2`GldqbB0EsA@h8A6OTK=H!WA<7B<@0b;+9EZ7d5!8t1j=@B^fN=Oaek]m\a3Hjuf8)A*%G(QMX"%u4B^4DK]$.6^);Kd,'9*$neZ.qm_D-jXhK[C>=MrC<2^_)PM8SUks7<*!+V@aDLYf\X0&-nP.)*nu^BDoNn^!(@$?*JrG%4r;;Nbiq,U7jAr:Z)2T1bB)KSX]dR_OCX#paWC?9f%]pUqlF>,,j5)u8Z<hsek)dT29>hLUWo"Ar(@8Q/P+oS_3/e<:h/:b9(JI(%J\i"gPVdPrWCb8DOQ-a4CE>_DKFP/e_1'Nr[C+VVU1t#3![mPeQ.[81-bn*h0=mZ/BM<N$M2a`4\.A8h3(Z9q$I_cmW5XNrVrjj0%X\gSf[QbcH#5M.W(pl^nU-Z/?.nVB/j/&1K9i;GdW'G#ZB8[.$Aa`=\0Jn0GL5J6`H.mWHEf;&0eHG=O%b&mC^IR$8Nog5Ng@%c&%*^qCl]k^r8nHB?X4o6W6BN/RqeYUWc%h:TM[Vjb"34n:NN;78j<qTHaYkIe]p4jGfDRRS8B2W2s?%:bhHA]/`5OSbNJ)7;LYLJ@!%U\-9erM`_0s2XNQqa9Zj._1giHHrt\*qpsQZS'74EHE!p,ZG\+m'pUOb`;af+8RnJHs.kr^u./EnqQ7HR:YI]U9kl<42[:bOMrGt%$FV]:)aKl(#eV;=P8-s\VD4.XU>sTI#4hlUe3pqGF]3#riYqZ*7W\n)'St/)$K>VZ;04[n/s(>rQ'f[4:HZ'or!5#N'EG7_<!blr%"H[K)gr;e^-k:TbmpIkE<$2:'$]@So-;XobTk!Z2%$.ELY>?]7[#+IO/g$@K9,Aip"(B,WBsiaL5\Cl?A*8c_^@(r.$M_bFr\DT#%oZdIWW@-pI7r\(Th+cp"h.C=a%D96F]cFc#e9o-5_&c;8pFr6=)8kCZWaHrLJfM0e_IEA<g#S1)A[G;o(01l)'49C$C9'!^]KY[`%=-9&;IVLd3XOKd&;5n69Uj`6tTV',eX\IBD@F/8e7T+FcJ^UrZ#*h1!`)]A55=O8*156(4_!rcV)UoSH<aWi=L$]C(nXS-afnLFr%nr(VR!C.".:_fTe>maj:]Y=n0]2=Q+[JXnb4M:chgD7laiMNm"mKBV2&Qp^[@UQ.h.O?MN!>Zs3mt-sZ=fKN-V988O&s^u8*ImCC%X%9uMOFHV_ccFQ>4$0U2ce,,J^;j^b2Ic2>cB^$'C_s5bdl\R)9K%B]_m?Wil/B]`Gd[LP+Hs@t$=qQPXD$lURT0.+0*.JuK?sFG%S-X@80Nn%TZ>E3X`=4;p]d'!>CWDm<'TPhW.Umioc_+^:cIZC;?fsR?;?j:?FFYdc<@b,N[piOBU[Jf86ruk@TJakns#'M95UL,h%.@<]XEg,G3%ki"hopJ[!)7c`+d1Q;eD-@UbQb&MD4gunol`$as);?L*VuH0j+P/BWiq$46(hRA=DbA:jq$k*<;)OdAL0m:!<#;)e%5a9[(/n0h@Z7MOnX#@eFHIqk-1d!U^:,^&HE)\F1UuW@T("apa2<pltQFXKokR7lG[ESABWT\//Z\cch0Y>bU7^[aTLW^UB?WX)8%,;I[fH/=qLg5q&3S.YpE*!gjpTkpL^FU3oO1bA@6D"HY\Fe`e,l[f.$s$Q(9[YY;H+tcl).hVFhoh1e:=4aRDSN0kV;:o>1TSp\'%fW0:d'=%LLhWA!V1n@rPKGsu:#n"[]Kk]?S+/Z.pF5p_<S'>\nOU4^E==bE>!HCP.24Zp(](5Z,rRu'!mDq49>`'a8P:rEM)fiZP%b:D?9Dm>hI#7q#XOLJPIZL;FbHh4r#]o4;#mPp9Rfe.b+UQ+9C?hV^HUKO$)L!hqTXr#/=.kd6d>!4bS9QTV9ed=f]H)kM^EF0WR%E]lFcp2e-5d(Rf.LimT;<2aN'^u;Y;etta(j3(iuVLMYfm7tlkSosU-q<k4k3,(1<&SqS\&F[jMj+-#[h95-qYOc)c?KUK4]<G[#%iNu'pk$jd"*L/L[`;"L:Hn3];*&KVo6Bml5ft,-]G)[#s$s28^]#N]s`3R6i]s?QDh:+;!b:k>UGT3cLF_V[Ta9c9Ui+Wb_5.';F%,_\fO"s<5>q/=H*AICsSDB"-1>M6p0[Old1)"\GB;5UC<F5O*c4kXr/:m0UbE0oLqAj-`g+I2rKC!>'TjC'6SM8uZ/V&397hLZp)%+)K/r'G_:]B]MW=g3ggS-?g?U67,\hYXObYR`s7ahqA)N4,J]J)=TOG(6&TbR0FSTD;71D)ZtoT5@KLC![;J\]NbjaJ"B=XQiP8D%6PGLgNDbpbJk*l4_6Sf4_Hj)$r\.?#)_6E+Pd^,-iB,cC&fWm@XE*Ur>Wmr`O!:Ei%K!(8=nW2/"SQ8<Q5d%!GX9Jc"NHBlX(g'o%7,RZa>TAf!aF6eckaT]mWnA$d1-q/=).HO%;L4@3.NV*A3@b.TD@uatc=n-6UH,n\PK74!?0d/?DUgDrL4Ska+,B@k`1fKB]b84A%Xkmkkh_b=3S`T.m)-;@%Om@AK+5Z+S2$pm-@gjfp8?p\'J)J5YQb&OR)lcKK[[FRr8Z=Mi'U;r(If#rfU.r5hpn"<O`Jh&Kh-WX6%V[u_GH=[U^Q?B2o$r(?Vl,Ji;#X9nfbV;RGleoYXh+;&@C_D_n/P&EXmhhL6)k"=Tma5'fipc@9=V_#HWR52c0jOQUk#OeZoj(K/%/1oaq@rE6Q?)Q`.Zruifn]K5>A3$+%TT8]?4iB28K%N4T:BbnMP3O)XV@USL3TuGr*4'/N)XWUhmR2HgE,nXQh98E#$j;,LZiEdX%<OC'A\jp@c/e%XZ+D1\XLk?`08.O0NB-CZPqF(J'c!Rrf)gVA[G"*7$:)Aj:$h#++ZoEIBX/=!Yl;eeBCKU<Bp;e5YDY@5t8E4Rn%K:Y6HKN.gU2QQdY$3qV+4!ld/[Vt0?V*C$u?Xca6jQoV8WdC^l))lF%Rp0kF1rBA4>N*JSKn6k2B$0D\5Ze_TWG0S;WcTtbB79t;%>'7D>[BA,&Fq>&bI\uL5jAs'^+5WgoD8#@F_oO*3o+:ueH^dX6+'"AkT:T6_5pl]&mg%9!SN2aHJ.Q=1lJt.Tf]+\6E6YnZ\sLfK%46C0OCgNPJY8[)=2oaD=`G/+4KZ)r4M>@aDNK^M-Xll%VajF=SeT-RD&@n!\1k$-p<,]3CP&Ud4_g1hgQMW!*!ac:=\Lm+&39iEN%FY#jLC2>k5^5Z.N?Ktj/J(Pa4C:]^VH7k0Pp'7BZNNc[2G7jkf(HDA=\'c2s.#7EO:4LB;bY.7FHTj22$f;TbS3Yf&KSnf2)>+9*%]OEQ5HJH$(hE<K##3)NcA6&gt(p95@$-_$]HKAo8<'_6*bIeZW&$O'37]l3ZTbl9\q&YR";b<h+"sXdV)hrt.-;6@G.>="s9u"Gc%CN$iO-r-UIl$Qbtk-_HKoqRi=VGs4cI%u:T6.qkd$n5lUr(uZbB!:\"r`gSt1Aes/H)g+4k39F`ahTM<\e]ep]jdeLeD>0tFYC)Q%kDl1h#43GS1tj?9g59;2?neYORdiE;EunitA2k(V6oWbF?H/:e9RJXkA4rV`So^Zpf<1B(NcWBWZYEfJ4a.kcAsQnf"<+delTg.#%/.cF@lFC?m:SbH[g]lm:DJbrjaO'i6K4<1[L$hD'LH"d'dC%3IF&uEDncq5!Tk`)Ti=2*PS5/Ooql5g1N]Uh<[>8tCW_<I`bLh3r%2K8q?f6"Kga9e4(mof2@ko!tl8t.\:O$,k`)97'&)`:Ec9_4Xgqd_O1aAek6E4*b,K[)I/dQl`,koiH*\D)>l$q7/7l)g$UaF+Kh%NkKI>VC>b&CnCD7([_OO]NV(V4r-hJ'/-G5b4=.3A_6uCNb"(0T#bno/3rK<>F41fUS3gl5CM!0\P9CA?7C/jfOe\nEC2V,s0>a]%enSFK1/+"1Z06F()^N>H2mY!l:qg'f8Xi\ZheZ=%c(6.mBHVc\CJug=+WM3[cKH@]R28L3$]d6tj$hX!$`'u^<lrRaffTcH(69>*%#d0Mk1@&I<d`]AXk!:9t-$eu.40Qe13n=ZrEUGENC0l$t;<E2NZ&5_s*>Y,M6iU!J?:N8'=J%$7KD>Q&BP\5R7qOu3bEZi610`Xj%Adk4tVnR6]]BIL?9iq8(.fZQ=HZu/c35=u'L/UO:D\q>6i`l)g0Lp%db[]*+bN>5jk85qmoRt=L4`+DV/_7I]2,`;^gHr"f#c&iT%3F3]CKmJ[PV^8oWcGG5WEEt7V@hIIAT3`0EgQAQkfX5?2NVmPrksb'mcTq,Z*s94S=K-Wb\IX^Q8ZS\,r3WO@45qHge.O0iRnB%J%a3HFp12^L,7%LG1!?B>A(f*XcNokH;[B7fhLm\aX"u6jn+3Z8r=TU8TWV8i0Ioto1+T\?LU2`bL-[&0],N0PXF^%qBDIfo[QGcLu%qllGPATl@&ph74&*$[VmQN#M>B_p%7%P7=nm-S9lUoDlXWu2JebM@b$FtKO91XL1ne'7]RE.^IOltAMRLaV7fAV.T?HIL>Xfo8kO%LqtDA"7t>%b@hjDlE7qI>!CUn2u=l`hTY)4Zo7gR0PllTRe8M\q`LlZ]LCS6j*:(7O5k!l@XBPU%u`F1\E@#HL0<!CneSdN:!Te#%N#F[qou-1XMqa3/2>2Rd,e02PQ[*oFA1D*U+>ToCn88ZsgH/G1UaI>4F4,5Y/p/gWcL@DC>KFZ'[GfFU(kGb9G2F>3qI+sI=4WSJ%A4?.)]RW[9*D-Tp!,)]uJ'&qs'seh6'p$ZKSnXZ8*L"F1nsh:8LT+A\G$K\8G6Fhi6sYpN$EITm=S)5<?l0ce"?_=38hAeqcXgRs%'7OUL5LC\P'sM1rZ6RQ8/4/j8%(=#qL3.;*YEOH(kB2A@-LQc?iNPkQ70*SQ:I#EdimC0j4GT>eOZK,=cn&o\Sih>ugXr*Bd-+&I%0M<oc0kbqrZg:>j.rG[GU>I\&Z4s&1K,&OR@V^^)c].PICm37h&P^^!2t0cVi7RgHaQSm;3fB]=DJ>JPLm-u@[k'G<L.PV5\u_?[%a,sg&/JM7icE#OHN><1C>.6;.looke0l0eHLA#TW!eG*2=fhk.jof2Me@f`>CaQ9J:'^riGK(+SXaInkSV8s.>`7`*k"q&.DS/(D%_&W\iR60f99%=tE=r6T(1ZAHmR!%juk[)26hU2els5:(4X(LYLop_N#ph_rcJ'ggtB04CFo2S_#7cVum'j6e^@ODQ(Nl.h+="A?4%TNXPhHHpPe(Z"6@<7j':dqjc];3X.!$L)eJ?_S]U#:KCE/Z$Np+PW]M^#cc`?89&4]Uq:a*c4\8E\G+<)8"0Mb-\/9[WMN(aBW4Z%2e]h/):mROcMU_12])M^N*9ajU&i#01%R4B'_jsiSS$@%#/>5<#kc+Dk1@m7!;tiH4+4TlN^'Jdg22;m3kD@0f",""d;^3/Jl%b)%6&TU">2Y2Pb7QZ1;@;Io2P[b+][l(o_H`Yk*&DI*HX&#\m7%XK^4^d[2VaTVfKpPiR(Y/u(?o6d:TX+s2k>I99nucGPj<MHO7pFP%rVWtT@^rs?!Loc74uOun:HY47P0tD[^&;BW<9E'<nm\CoD@1i<V[QLZHQ^`fl/oXF\sK\O5-.37\YknAAb=bt(Z1%*3>Mna&;MSZ%?N@_V%1JVtUDk$fo70F,#UFk9eRK$,"Tg^s!&Sk%<ZjTHJbsXihD%BDLlekT(@Z$?'!_@C>[MrUe@j)j\L;nYFY@f^Xttbf\/`,+%,U.ta`d+X)O`"+GA#D2/J/o?T?6G2b"!Vk1dc3X0ck-_F>5.hjpG/)uUgimke$TUq[jq4Mq)KYn17./<Z$%X?0;I]B`$ml7(Wa.G%StelMPeu[/;(8g&!$S<E?:-r$8s71tdd1O&qfW\)J97,dY!@9uJ]6ESQF`D[1FK^&St6>N>"6h\n->4VfZU-haNT]ad1le?&blkF%UK^knl.F&@7Gf*e>`an<rZD]MXq+4T7mI84#"CC9Hg9*9WRl,sfM9Tso<IJ]//e1[pG.&4RbO?jeoORK1AetPGV=1moCSR91*R_W%hE>QK1%@ZbeMGF8^dN#L6TJG,LeWD<*F+ftK`Kcd*!XDV)i+MMhM'%,YUG5/+`4>*P;TI-[P1H;e3cO+a-@I^KICCSP=V_,EWha3%A(\cQ=dC$="\9f-'kaX6Pfq7nB.8PY*nB9pJeN_gJLoX@)7$'H%.%<c?:N6q4Qob%^3f)h2J(r)]O$D7`fR;SJ.`'Wn]2AP(^gm[%iJEAWL_r?,7Oa<t$Md44\BPY.'9Ooo$)8O0<7;+&8H%DHc4+f%X&V'j;H!V50_WaM8'<G10\PT%09I+5nEMFDiEjRQ2%.5J[rKgq%CoMb!P@-f:0<i`WKgFmhEst5n+g)5T0e$r^D0SL.'W6AW\[(]]Yg"4&$B4]qIT%^"o8k#WJ.a3+7ahoCbRldl;^iPgW4/`h(#^p]%+oW*$4#:[gnSI)>!N^A?GK3EdAjD.n>%!AG\>M`UJ5#kL-49r?+e9'6_+5BARUuS2q!KIj+$l421bc$cTg9'=c4:=alh0k/GnWH=%H,8rp*j$-!_N9(-/c,:r)'%elCRTYGa[/F0n.0i_;$704-LogP7=qEoLU^6[oo5Yi8oL>%\[(c[i>>=ER(BFBHog;b"cR`\7'JQo%aDSG&H3Yi6@S[kPF(A:^0+_>O=36F1e-oM>CF!ZqAkcHN1'b[h=&,R9b4IkGGcNqj7&`cP#U!"Fi(?\6ej6?rA5>/RA.=cX6/iZS%*/?t=E=<PWaJBe5b,7U;inPP+p`9\H9-BUr83[#XcYm3UYSiP"O)VIJ!(Qj*=@NI:g*X*`Pu?NoG,V*5mF"ToLDa*DpLG28f\#i@%9sWOF\T-0DLsLpgG^S[QHp9`cF(TNYF_)2rC80,SKG`V($'R\;C)X/WG#Oc!D5PW35+prr[Ek*e\_X%qA:F3_.9q)frF'o29OQ4.%/?<qiM`p4S[7iqsg/1A((Ik^'<hO^uD]b1X[+GTBGO=m!ON#-':7+@&\Lrj+<R]YZ.uK95O2^?gNh_@PgX@_<JDI$Z&se7%Q;5UW%+d^A1Y3/^6)4-<"a41%Mr(C>VqZ%tFerElDC,f.;:P_lsT<M%2":eJ86`Z6Nr4UC;dSA4!Bs1%J:hNIiV\aE'IJ^o4eKoO)a^Wmr%#i6&9ba-'H2;2iRDdt']!Wgr>og-iOiYj1k9S0H5i*PNcWImQ(,X?=#C`A(Va4CMW(*9f'eI'_VQ[N^)W>3WQ`-:<@1t**VJ.;@n%4X1:cZ7)cF7GGYuQo+`04IBAh1"L0)+1_6f05S"sS;L!<H95Q`ZiW"]F">5bYchkDA6ihdju*[W7?%.)=JBY/&@9I"1<s&V:%F4k%\mO"1f%CUVP6'09]tNn5@1H991GI#ESZ_JO_7l+&7S/;iC/QtdV9lo3*=%u_&s(j!\s5Poqf/$ZKg.*&<HKguhqNR_k$$d'+gEXW%.<&9K'0MoC>cgB&;YMq.T4@5;II(:fWJI-TRX&))-p4oFZndc&D`eo*i-e)_DAnqYc\E@q1bum+b4Bh^1;RNZ(E8Re<i5NqS/H2K%YhM/5&$WSD8?$s(drT+GGcL"3k4G1sR)ikpR+4dk@CR)@,F^S<P&rN`5\+AV[rFL_R,Di"iM,%`U,/DpFY@f]::?n;Ra,K_*ja)a%C##=:jBC^:SCN(lkuu*ZC=[8$b]A?*b8=g8de[-^P/(__R)E;s_eIbj87NnqMqOJRb\NT5o&&Q"3tr@g;W_"H4]Ar3rM]e"7J%FR%J52qe/E(#C,!4Fj"tR#4Om9$9FUA(UDGsZ(8<,SZ-gMC!MJ%ZdM54lK_n'uIaC%Y+/.9-Br+59*QF`F1F!P*C9@^_QCRP-0+ag<S%>3>'0/?=9np638ie$$LciEuUss5>oorUu`Ls68#4F[2UBps["Up7'[3T76IrmF.]Bs20'<s7#:!^AIkIs6b*Os7tW/n(rQfl!GJ8%Vk_,T(AuA5r;,l3:cUM/5?mP/^AWP`(c%dK>O:\Er^!B0$;D?7^RorNdpN+DrGR/^lVBbDZTn>%hgb\*Qf%c2%6C58s6BCJ>Pn'A%T7-Rd?bcR=%8hgdIs2m7]Al,M=]1tJ;TZ3&*.RqmPkhM$h(_=U*9qJQ7bTg#7u)Ue30J5WlM-uYIIm1*J&!;ds%'P)^VBa3hgY7s%Dn^Mqql`5$T,-jFj/5*Z^u0>T3PRb<qq^f+n_^PM4"C-dBK%F@M`4W2oaBFPNW3pHqs!#1_tZ1hh#GW=3VqF,YQ#Pkp$;YHmH\+!%09bLIolnIVnNNRl4IB^j7'NgWrq)+%lLh:E;m5@[#^$@Sd@Z5OH2>F)4oDWlrMt1jrg2_&K.mg*5Mhe.lc0IOXm-FGp&03Lros2r%pWnl?I2$SJ^F=>77-k!#g`JHb\#M[h'DNfLraInV+5bgWeK<T$l1ioomeH8AJR?5IBtG>I?H1V.*04mc+8loo$XhTd&RW>!"Md/#%6&'C9^fWC@i!A,<roasXYRUNH,OcM!p@a]Rrd=_"J+MF0qhoCll.b\,jA4W]nrs+Cc*+n\qYP2[oD81X[pT1'S,`?PVf.%]>AU(l%rkn8m:VZo.gY_u!h=ofUqVC%YpQ%S"8%eUmIe%E+nSd=aItGg.Sc~>%AI9_PrivateDataEnd